{"version":3,"sources":["webpack:///webpack/bootstrap","webpack:///./src/modules/helper.js","webpack:///./src/modules/options.js","webpack:///./src/modules/validationRules.js","webpack:///./src/index.js","webpack:///./src/modules/listenerCallbacks.js","webpack:///./src/modules/checkDirtyField.js","webpack:///./src/modules/constructor.js","webpack:///./src/modules/formStartup.js","webpack:///./src/modules/destroy.js","webpack:///./src/modules/getFormData.js","webpack:///./src/modules/init.js","webpack:///./src/modules/isValidField.js","webpack:///./src/modules/isValid.js","webpack:///./src/modules/isValidForm.js","webpack:///./src/modules/submit.js","webpack:///./src/modules/xhrCall.js","webpack:///./src/modules/validateField.js","webpack:///./src/modules/validateForm.js"],"names":["installedModules","__webpack_require__","moduleId","exports","module","i","l","modules","call","m","c","d","name","getter","o","Object","defineProperty","enumerable","get","r","Symbol","toStringTag","value","t","mode","__esModule","ns","create","key","bind","n","default","object","property","prototype","hasOwnProperty","p","s","e","iterator","constructor","_isDOMNode","_fieldsStringSelector","_addClass","element","cssClasses","split","forEach","className","classList","add","_checkFormEl","formEl","isString","_typeof","isFormSelector","document","querySelector","tagName","toLowerCase","result","_executeCallback","callbackOption","callbackData","self","this","callbackFnList","push","Array","isArray","cbFn","node","Element","isPrototypeOf","_isNodeList","nodeList","NodeList","_isPlainObject","toString","_mergeObjects","out","arguments","length","obj","isObject","_removeClass","remove","_serialize","keys","reduce","a","k","encodeURIComponent","join","_toCamelCase","string","replace","all","letter","toUpperCase","_helper","_checkDirtyField2","_defaultCallbacksInOptions","fieldOptions","onValidation","fieldsArray","options","fieldEl","hasTypedValue","trim","containerEl","closest","isReqFrom","matches","reqMoreEl","getAttribute","checkDirtyField","_checkDirtyField","skipUIfeedback","checked","errorClasses","error","errorEmpty","errorRule","valid","extraErrorClass","isChecks","checkedElLength","querySelectorAll","errorClassToRemove","dirty","focusOnRelated","handleFileUpload","handleValidation","maxFileSize","onPastePrevented","preventPasteFields","strictHtmlValidation","validateOnEvents","formOptions","ajaxOptions","async","cache","contentType","headers","X-Requested-With","method","timeout","url","location","href","ajaxSubmit","beforeSend","getFormJSON","handleSubmit","onSubmitComplete","onSubmitError","onSubmitSuccess","_setCallbackFunctionsInOptions","callbacks","_loop","opt","fnName","fnInOptions","fnList","concat","unshift","validationRules","cap","RegExp","test","errors","strLength","maxlength","minlength","invalidChars","color","date","dateDDMMYYYY","dateYYYYMMDD","email","indexOf","missingAtChar","splitAt_at","missingUserName","missingDomain","missingExtensionDot","missingExtension","extLength","minlengthExtension","fiscalCode","landlineNumber","mobileNumber","number","numberFloat","numberInteger","password","missingNumber","missingUppercase","tel","username","invalidStartChar","vatNumber","indexOfIT","_validationRulesAttributes","checkbox","data","dataChecksEl","checks","attrValue","JSON","parse","isMinOk","isMaxOk","minChecks","maxChecks","Error","equalTo","checkFromEl","exactLength","valueLength","file","MIMEtype","accept","from","files","exceedMaxFileSize","size","isAcceptedFileType","type","acceptedFileType","valueL","isMinlengthOk","isMaxlengthOk","max","min","pattern","fieldPattern","radio","fieldChecked","requiredFrom","isValidValue","required","_listenerCallbacks2","_options","_validationRules","_constructor2","_destroy2","_getFormData2","_init2","_isValidField2","_isValidForm2","_submit2","_validateField2","_validateForm2","_listenerCallbacks","WeakMap","Form","optionsObj","set","charCount","_callbackFns","dataTypeNumber","keypressMaxlength","pastePrevent","submit","validation","_constructor","destroy","customFn","getFormData","init","isValidField","isValidForm","event","fieldElem","validateField","validateForm","rulesObj","isInitialized","version","window","FormJS","eventOrField","target","charLengthEl","usedChars","textContent","fieldValue","stopImmediatePropagation","valueReplaced","maxLength","keyPressed","which","keyCode","preventDefault","eventName","isFieldForChangeEvent","isRadio","isReqMore","findReqMoreEl","findReqFromEl","id","focus","fields","argsL","checkFormEl","_formStartup","_formStartup2","charLengthElems","listenerCallbacks","maxFileSizeElems","addEventListener","useCapturing","validationListenerNames","removeEventListener","formData","formFieldsEl","filteredFields","filter","elem","isCheckbox","isSelect","checkboxes","field","checkedRadio","selectedOpts","option","selected","formFields","isCheckboxOrRadio","fieldOptionsObj","isRequired","isValidateIfFilled","_isValid","_isValid2","fieldType","fieldAttributes","attributes","sort","b","attrValidations","attrValidationsResult","attr","attrName","isTypeValueWithFn","isAttrNameWithFn","extraValObj","item","extraVal","rule","empty","currentFieldName","currentFieldType","fieldData","eventPreventDefault","enableBtn","btnEl","disabled","formValidation","isAjaxForm","formDataJSON","callbacksBeforeSend","beforeSendOpt","beforeSendData","stopExecution","stopCallbackLoop","beforeSendFn","_xhrCall","submitEvent","Event","bubbles","cancelable","dispatchEvent","_xhrCall2","timeoutTimer","xhrOptions","formDataMultipart","FormData","append","idx","XHR","XMLHttpRequest","parseResponse","xhr","responseText","responseXML","isXML","DOMParser","parseFromString","errorFn","ajaxData","errorThrown","statusText","status","response","responseData","readyStateOK","readyState","statusOK","dataOrXHR","XHRorResponse","clearTimeout","Date","getTime","open","xhrFields","h","mimeType","overrideMimeType","setRequestHeader","send","setTimeout","abort"],"mappings":"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","file":"formJS.min.js","sourcesContent":[" \t// The module cache\n \tvar installedModules = {};\n\n \t// The require function\n \tfunction __webpack_require__(moduleId) {\n\n \t\t// Check if module is in cache\n \t\tif(installedModules[moduleId]) {\n \t\t\treturn installedModules[moduleId].exports;\n \t\t}\n \t\t// Create a new module (and put it into the cache)\n \t\tvar module = installedModules[moduleId] = {\n \t\t\ti: moduleId,\n \t\t\tl: false,\n \t\t\texports: {}\n \t\t};\n\n \t\t// Execute the module function\n \t\tmodules[moduleId].call(module.exports, module, module.exports, __webpack_require__);\n\n \t\t// Flag the module as loaded\n \t\tmodule.l = true;\n\n \t\t// Return the exports of the module\n \t\treturn module.exports;\n \t}\n\n\n \t// expose the modules object (__webpack_modules__)\n \t__webpack_require__.m = modules;\n\n \t// expose the module cache\n \t__webpack_require__.c = installedModules;\n\n \t// define getter function for harmony exports\n \t__webpack_require__.d = function(exports, name, getter) {\n \t\tif(!__webpack_require__.o(exports, name)) {\n \t\t\tObject.defineProperty(exports, name, { enumerable: true, get: getter });\n \t\t}\n \t};\n\n \t// define __esModule on exports\n \t__webpack_require__.r = function(exports) {\n \t\tif(typeof Symbol !== 'undefined' && Symbol.toStringTag) {\n \t\t\tObject.defineProperty(exports, Symbol.toStringTag, { value: 'Module' });\n \t\t}\n \t\tObject.defineProperty(exports, '__esModule', { value: true });\n \t};\n\n \t// create a fake namespace object\n \t// mode & 1: value is a module id, require it\n \t// mode & 2: merge all properties of value into the ns\n \t// mode & 4: return value when already ns object\n \t// mode & 8|1: behave like require\n \t__webpack_require__.t = function(value, mode) {\n \t\tif(mode & 1) value = __webpack_require__(value);\n \t\tif(mode & 8) return value;\n \t\tif((mode & 4) && typeof value === 'object' && value && value.__esModule) return value;\n \t\tvar ns = Object.create(null);\n \t\t__webpack_require__.r(ns);\n \t\tObject.defineProperty(ns, 'default', { enumerable: true, value: value });\n \t\tif(mode & 2 && typeof value != 'string') for(var key in value) __webpack_require__.d(ns, key, function(key) { return value[key]; }.bind(null, key));\n \t\treturn ns;\n \t};\n\n \t// getDefaultExport function for compatibility with non-harmony modules\n \t__webpack_require__.n = function(module) {\n \t\tvar getter = module && module.__esModule ?\n \t\t\tfunction getDefault() { return module['default']; } :\n \t\t\tfunction getModuleExports() { return module; };\n \t\t__webpack_require__.d(getter, 'a', getter);\n \t\treturn getter;\n \t};\n\n \t// Object.prototype.hasOwnProperty.call\n \t__webpack_require__.o = function(object, property) { return Object.prototype.hasOwnProperty.call(object, property); };\n\n \t// __webpack_public_path__\n \t__webpack_require__.p = \"\";\n\n\n \t// Load entry module and return exports\n \treturn __webpack_require__(__webpack_require__.s = 3);\n","\nexport const\n\n_fieldsStringSelector = 'input:not([type=\"reset\"]):not([type=\"submit\"]):not([type=button]):not([type=hidden]), select, textarea',\n\n_addClass = function( element, cssClasses ){\n    cssClasses.split(' ').forEach(function(className){\n        element.classList.add( className );\n    });\n},\n\n_checkFormEl = function( formEl ){\n    let isString = typeof formEl,\n        isValidNodeSelector = isString === 'string' && _isDOMNode(document.querySelector(formEl)),\n        isFormSelector = isValidNodeSelector && document.querySelector(formEl).tagName.toLowerCase() === 'form',\n        obj = {\n            result: _isDOMNode(formEl) || isFormSelector,\n            element: (isString === 'string' ? document.querySelector(formEl) : formEl)\n        };\n\n    return obj;\n},\n\n_executeCallback = function( callbackOption, callbackData ){\n    let self = this,\n        callbackFnList = [];\n\n    if( typeof callbackOption === 'function' ){\n        callbackFnList.push( callbackOption );\n    } else if( Array.isArray(callbackOption) ) {\n        callbackFnList = callbackOption;\n    }\n\n    callbackFnList.forEach(function(cbFn){\n        cbFn.call(self, callbackData );\n    });\n},\n\n_isDOMNode = function( node ){\n    return Element.prototype.isPrototypeOf( node );\n},\n\n_isNodeList = function( nodeList ){\n    return NodeList.prototype.isPrototypeOf( nodeList );\n},\n\n_isPlainObject = function( object ){\n    return Object.prototype.toString.call( object ) === '[object Object]';\n},\n\n_mergeObjects = function( out = {} ){\n    for(let i=1; i<arguments.length; i++){\n        let obj = arguments[i];\n\n        if(!obj){ continue; }\n\n        for(let key in obj){\n            let isArray = Object.prototype.toString.call(obj[key]) === \"[object Array]\";\n            let isObject = Object.prototype.toString.call(obj[key]) === \"[object Object]\";\n\n            if( (!out.hasOwnProperty(key) && !isObject) || isArray ){\n                out[key] = obj[key];\n            } else {\n                if( isObject ){\n                    out[key] = _mergeObjects(out[key], obj[key]);\n                }\n            }\n        }\n    }\n\n    return out;\n},\n\n_removeClass = function( element, cssClasses ){\n    cssClasses.split(' ').forEach(function(className){\n        element.classList.remove( className );\n    });\n},\n\n_serialize = function( obj ){\n    var objToString = (\n            (obj && typeof obj === 'object' && obj.constructor === Object) ? \n            Object.keys(obj).reduce(function(a,k){a.push(k+'='+encodeURIComponent(obj[k]));return a},[]).join('&') : \n            obj\n    );\n    return objToString;\n},\n\n_toCamelCase = function( string ){\n    return string.replace(/-([a-z])/ig, function(all, letter){ return letter.toUpperCase(); });\n}\n","\nimport { _addClass, _removeClass }  from './helper.js';\nimport { _checkDirtyField }         from './checkDirtyField.js';\n\nconst _defaultCallbacksInOptions = {\n        fieldOptions: {\n            onValidation: function ( fieldsArray ) {\n\n                let self = this,\n                    options = self.options.fieldOptions;\n\n                fieldsArray.forEach(function( obj ){\n                    let fieldEl = obj.fieldEl,\n                        hasTypedValue = fieldEl.value.trim().length > 0,\n                        containerEl = fieldEl.closest('[data-formjs-question]'),\n                        isReqFrom = fieldEl.matches('[data-required-from]'),\n                        reqMoreEl = self.formEl.querySelector( fieldEl.getAttribute('data-required-from') );\n\n                    if( options.checkDirtyField ){\n                        _checkDirtyField.call( self, fieldEl );\n                    }\n                    \n                    if( containerEl !== null && !options.skipUIfeedback ){\n                        if( obj.result ){\n\n                            if( !isReqFrom || (isReqFrom && reqMoreEl.checked) ){\n                                // IF FIELD IS VALID\n                                let errorClasses = options.cssClasses.error + ' ' + options.cssClasses.errorEmpty + ' ' + options.cssClasses.errorRule;\n                                _removeClass( containerEl, errorClasses );\n                                _addClass( containerEl, options.cssClasses.valid );\n                            }\n\n                        } else {\n\n                            // IF FIELD IS NOT VALID\n                            let extraErrorClass = options.cssClasses.errorRule;\n\n                            // HANDLE CASE OF FIELD data-checks\n                            let isChecks = fieldEl.matches('[data-checks]'),\n                                checkedElLength = (isChecks ? containerEl.querySelectorAll('[name=\"' + fieldEl.name + '\"]:checked').length : 0);\n\n                            if( (!isChecks && !hasTypedValue) || (isChecks && checkedElLength === 0) ){\n                                extraErrorClass = options.cssClasses.errorEmpty;\n                            }\n\n                            let errorClasses = options.cssClasses.error + ' ' + extraErrorClass,\n                                errorClassToRemove = options.cssClasses.errorEmpty + ' ' + options.cssClasses.errorRule;\n                            _removeClass( containerEl, options.cssClasses.valid + ' ' + errorClassToRemove );\n                            _addClass( containerEl, errorClasses );\n\n                        }\n                    }\n                });\n                \n            }\n        }\n    };\n\nexport const options = {\n        fieldOptions: {\n            checkDirtyField:        false,\n            cssClasses: {\n                dirty:              'is-dirty',\n                error:              'has-error',\n                errorEmpty:         'has-error-empty',\n                errorRule:          'has-error-rule',\n                valid:              'is-valid'\n            },\n            focusOnRelated:         true,\n            handleFileUpload:       true,\n            handleValidation:       true,\n            maxFileSize:            10,\n            onPastePrevented:       null,\n            onValidation:           null,\n            preventPasteFields:     '[type=\"password\"], [data-equal-to]',\n            skipUIfeedback:         false,\n            strictHtmlValidation:   true,\n            validateOnEvents:       'input change'\n        },\n        formOptions: {\n            ajaxOptions:            {\n                async:              true,\n                cache:              false,\n                contentType:        'application/x-www-form-urlencoded; charset=UTF-8',\n                headers: {\n                                    'X-Requested-With': 'XMLHttpRequest'\n                },\n                method:             'POST',\n                timeout:            0,\n                url:                location.href\n            },\n            ajaxSubmit:             true,\n            beforeSend:             null,\n            getFormJSON:            null,\n            handleSubmit:           true,\n            onSubmitComplete:       null,\n            onSubmitError:          null,\n            onSubmitSuccess:        null\n        }\n    },\n\n    _setCallbackFunctionsInOptions = function(){\n\n        const self = this,\n              callbacks = {\n                fieldOptions: ['onPastePrevented', 'onValidation'],\n                formOptions: ['beforeSend', 'onSubmitComplete', 'onSubmitError', 'onSubmitSuccess']\n            };\n\n        for(let opt in callbacks){\n            let fjsOpt = callbacks[opt];\n\n            fjsOpt.forEach(function(fnName){\n                let fnInOptions = self.options[opt][fnName],\n                    fnList = [];\n\n                if( typeof fnInOptions === 'function' ){\n                    fnList.push(fnInOptions);\n                } else if( Array.isArray(fnInOptions) ) {\n                    fnList.concat(fnInOptions);\n                } else {\n                    return;\n                }\n\n                if( typeof _defaultCallbacksInOptions[opt] !== 'undefined' && typeof _defaultCallbacksInOptions[opt][fnName] === 'function' ){\n                    fnList.unshift(_defaultCallbacksInOptions[opt][fnName]);\n                }\n\n                self.options[opt][fnName] = fnList;\n            });\n        }\n\n    }\n","\nexport const validationRules = {\n            \n    cap: function( string ){\n        // VALID ITALIAN CAP WITH 5 DIGITS\n        const\n            regex = new RegExp(/^[0-9]{5}$/),\n            obj = {\n                result: regex.test( string )\n            };\n\n        if( !obj.result ){\n\n            obj.errors = {};\n            const strLength = string.length;\n            if( strLength > 5 ){ obj.errors.maxlength = true; }\n            if( strLength > 0 && strLength < 5 ){ obj.errors.minlength = true; }\n            if( /[^0-9]/.test(string) ){ obj.errors.invalidChars = true; }\n        }\n\n        return obj;\n    },\n\n    color: function( string ){\n        // HEX COLOR WITH/WITHOUT #\n        // CAN BE 3 OR 6 CHARACTERS ( fff | FFF | ffffff | FFFFFF )\n        let obj = {\n            result: /^#?([a-fA-F0-9]{6}|[a-fA-F0-9]{3})$/.test( string )\n        };\n\n        return obj;\n    },\n    \n    date: function( string ){\n        let obj = {\n                result: this.dateDDMMYYYY(string).result || this.dateYYYYMMDD(string).result\n            };\n\n        return obj;\n    },\n\n    dateDDMMYYYY: function( string ){\n        // DATE AS ITALIAN SYNTAX       DD MM YYYY | DD/MM/YYYY | DD.MM.YYYY | DD-MM-YYYY\n\n        let date = /^(((0[1-9]|[12]\\d|3[01])[ \\/\\-.](0[13578]|1[02])[ \\/\\-.]((19|[2-9]\\d)\\d{2}))|((0[1-9]|[12]\\d|30)[ \\/\\-.](0[13456789]|1[012])[ \\/\\-.]((19|[2-9]\\d)\\d{2}))|((0[1-9]|1\\d|2[0-8])[ \\/\\-.]02[ \\/\\-.]((19|[2-9]\\d)\\d{2}))|(29[ \\/\\-.]02[ \\/\\-.]((1[6-9]|[2-9]\\d)(0[48]|[2468][048]|[13579][26])|((16|[2468][048]|[3579][26])00))))$/g.test( string ),\n            obj = {\n                result: date\n            };\n\n        return obj;\n    },\n\n    dateYYYYMMDD: function( string ){\n        // DATE AS ISO 8601 DATE FORMAT     YYYY MM DD | YYYY/MM/DD | YYYY.MM.DD | YYYY-MM-DD\n\n        let date = /^(((19|[2-9]\\d)\\d{2})[ \\/\\-.](0[13578]|1[02])[ \\/\\-.](0[1-9]|[12]\\d|3[01]))|(((19|[2-9]\\d)\\d{2})[ \\/\\-.](0[13456789]|1[012])[ \\/\\-.](0[1-9]|[12]\\d|30))|(((19|[2-9]\\d)\\d{2})[ \\/\\-.]02[ \\/\\-.](0[1-9]|1\\d|2[0-8]))|(((1[6-9]|[2-9]\\d)(0[48]|[2468][048]|[13579][26])|((16|[2468][048]|[3579][26])00))[ \\/\\-.]02[ \\/\\-.]29)$/g.test( string ),\n            obj = {\n                result: date\n            };\n\n        return obj;\n    },\n    \n    email: function( string ){\n        // FROM https://emailregex.com\n        // AS FOR RFC 5322 Official Standard EMAIL MUST BE AT LEAST:\n        // a@a.aa\n        const obj = {\n            result: /^(([^<>()\\[\\]\\\\.,;:\\s@\"]+(\\.[^<>()\\[\\]\\\\.,;:\\s@\"]+)*)|(\".+\"))@((\\[[0-9]{1,3}\\.[0-9]{1,3}\\.[0-9]{1,3}\\.[0-9]{1,3}])|(([a-zA-Z\\-0-9]+\\.)+[a-zA-Z]{2,}))$/.test( string )\n        };\n\n        if( !obj.result ){\n\n            obj.errors = {};\n            if( string.indexOf('@') === -1 ){\n\n                // @ IS MISSING\n                obj.errors.missingAtChar = true;\n\n            } else {\n\n                let splitAt_at = string.split('@');\n                if( splitAt_at[0].length === 0 ){\n\n                    // USER NAME IS MISSING\n                    obj.errors.missingUserName = true;\n\n                }\n\n                if( splitAt_at[1].length === 0 ){\n\n                    // IS EMPTY AFTER @\n                    obj.errors.missingDomain = true;\n                    obj.errors.missingExtensionDot = true;\n                    obj.errors.missingExtension = true;\n\n                } else if( splitAt_at[1].indexOf('.') === -1 ) {\n\n                    // DOT IS MISSING\n                    obj.errors.missingExtensionDot = true;\n                    obj.errors.missingExtension = true;\n\n                } else {\n\n                    // EXTENSION MISSING OR NOT LONG ENOUGH\n                    let splitAt_dot = splitAt_at[1].split('.'),\n                        extLength = splitAt_dot[1].length;\n                    if( extLength === 0 ) {\n                        obj.errors.missingExtension = true;\n                    } else if( extLength < 2 ){\n                        obj.errors.minlengthExtension = true;\n                    }\n\n                }\n            }\n\n        }\n\n        return obj;\n    },\n    \n    fiscalCode: function( string ){\n        // http://blog.marketto.it/2016/01/regex-validazione-codice-fiscale-con-omocodia/\n        let obj = {\n                result: /^(?:[B-DF-HJ-NP-TV-Z](?:[AEIOU]{2}|[AEIOU]X)|[AEIOU]{2}X|[B-DF-HJ-NP-TV-Z]{2}[A-Z]){2}[\\dLMNP-V]{2}(?:[A-EHLMPR-T](?:[04LQ][1-9MNP-V]|[1256LMRS][\\dLMNP-V])|[DHPS][37PT][0L]|[ACELMRT][37PT][01LM])(?:[A-MZ][1-9MNP-V][\\dLMNP-V]{2}|[A-M][0L](?:[\\dLMNP-V][1-9MNP-V]|[1-9MNP-V][0L]))[A-Z]$/i.test( string )\n            };\n        \n        return obj;\n    },\n    \n    landlineNumber: function( string ){\n        // LANDLINE PREFIX:\n        // +39 | 0039 | not-set ( ALSO WITH INTERNATIONAL PREFIXES WITH 2 DIGITS )\n        // LANDLINE NUMBER MUST START WITH 0 ( AS FOR ITALIAN ONES ):\n        // 1234567890 | 12 34567890 | 123456789 | 1234 56789 ( ALSO WITH . - / AS SEPARATOR )\n        let obj = {\n            result: /^((00|\\+)\\d{2}[\\-\\. ]??)??(((0[\\d]{1,4}))([\\/\\-\\. ]){0,1}([\\d, ]{5,10}))$/.test( string )\n        };\n\n        return obj; \n    },\n    \n    mobileNumber: function( string ){\n        // +39 | 0039 | 39 | not-set ( ALSO WITH ALL INTERNATIONAL PREFIXES WITH 2 DIGITS )\n        // MOBILE NUMBER MUST START WITH 3\n        // 3234567890 | 323 4567890 | 323 45 67 890 ( ALSO WITH . OR - AS SEPARATOR )\n        let obj = {\n            result: /^((00|\\+)??\\d{2}[\\-\\. ]??)??3\\d{2}[\\-\\. ]??(\\d{6,7}|\\d{2}[\\-\\. ]??\\d{2}[\\-\\. ]??\\d{3})$/.test( string )\n        };\n\n        return obj;\n    },\n    \n    number: function( string ){\n        // ALL NUMBERS ( INTEGERS AND FLOATING )\n        // VALID NUMBERS: 123 | 123.456 | .123\n        let obj = {\n            result: /[+-]?([0-9]*[.])?[0-9]+/.test( string )\n        };\n\n        return obj;\n    },\n    \n    numberFloat: function( string ){\n        // ONLY FLOATING NUMBERS\n        // VALID NUMBERS: 123.456 | .123\n        let obj = {\n            result: /[+-]?([0-9]*[.])[0-9]+/.test( string )\n        };\n\n        return obj;\n    },\n    \n    numberInteger: function( string ){\n        // ONLY INTEGER NUMBERS\n        let obj = {\n            result: /^\\d+$/.test( string )\n        };\n\n        return obj;\n    },\n    \n    password: function( string ){\n        // PASSWORD ( NO SPECIAL CHARACTERS ) WITH AT LEAST:\n        // ONE DIGIT + ONE LOWERCASE + ONE UPPERCASE + MIN LENGTH OF 8 CHARACTERS\n        let obj = {\n            result: /^(?=.*[0-9])(?=.*[a-z])(?=.*[A-Z])[0-9a-zA-Z]{8,}$/.test(string)\n        };\n\n        if( !obj.result ){\n\n            obj.errors = {};\n            let strLength = string.length;\n            if( strLength < 8 ){ obj.errors.minlength = true; }\n            if( !/\\d/.test(string) ){ obj.errors.missingNumber = true; }\n            if( !/[A-Z]/.test(string) ){ obj.errors.missingUppercase = true; }\n            if( /[^0-9a-zA-Z]/.test(string) ){ obj.errors.invalidChars = true; }\n\n        }\n\n        return obj;\n    },\n\n    tel: function( string ){\n        // CHECK IF ONE OF landlineNumber OR mobileNumber IS VALID\n        let obj = {\n            result: this.landlineNumber(string).result || this.mobileNumber(string).result\n        };\n\n        return obj;\n    },\n    \n    url: function( string ){\n        // MUST NOT CONTAIN PARAMETERS:\n        // www.mysite.com/index.html         --> VALID URL\n        // www.mysite.com/index.html?v=hello --> INVALID URL\n        let obj = {\n            result: /^((https?|ftp|file):\\/\\/)?([\\da-z\\.-]+)\\.([a-z\\.]{2,6})([\\/\\w \\.-]*)*\\/?$/.test( string )\n        };\n\n        return obj;\n    },\n    \n    username: function( string ){\n        // USERNAME WITH LETTERS/NUMBERS/UNDERSCORE AND . - @ WITH MIN LENGTH 3 AND MAX LENGTH 24\n        //return /^[\\w\\.\\-\\@]{3,24}$/.test( string );\n        \n        // USERNAME MUST START WITH A LETTER/NUMBER/UNDERSCORE AND CAN ALSO CONTAIN . - @ WITH MIN LENGTH 3 AND MAX LENGTH 24\n        let obj = {\n            result: /^(?=\\w)(?=[\\-\\.\\@]?)[\\w\\-\\.\\@]{3,24}$/.test( string )\n        };\n\n        if( !obj.result ){\n\n            obj.errors = {};\n            let strLength = string.length;\n            if( strLength < 3 ){ obj.errors.minlength = true; }\n            if( strLength > 24 ){ obj.errors.maxlength = true; }\n            if( /[^\\w\\-\\.\\@]/.test(string) ){ obj.errors.invalidChars = true; }\n            if( !/^[\\w]/.test(string) ){ obj.errors.invalidStartChar = true; }\n\n        }\n\n        return obj;\n    },\n    \n    vatNumber: function( string ){\n        // VAT NUMBER CAN CONTAIN OR NOT THE 'IT' STRING AND THEN 11 NUMBERS\n        let obj = {\n            result: /^(IT){0,1}[0-9]{11}$/i.test( string )\n        };\n\n        if( !obj.result ){\n            obj.errors = {};\n            var strLength = string.length,\n                indexOfIT = string.indexOf('IT'),\n                checkLength = (indexOfIT === 0 ? 13 : 11);\n            if( indexOfIT < 1 ){\n                if( strLength < checkLength ){ obj.errors.minlength = true; }\n                else { obj.errors.maxlength = true; }\n            }\n        }\n\n        return obj;\n    }\n    \n}\n\nexport const _validationRulesAttributes = {\n\n    checkbox: function( data ){\n        let formEl = data.fieldEl.closest('form'),\n            dataChecksEl = formEl.querySelector('[name=\"' + data.fieldEl.name + '\"][data-checks]'),\n            obj = { result: data.fieldEl.checked };\n\n        if( dataChecksEl !== null ){\n            obj = this.checks({ attrValue: dataChecksEl.getAttribute('data-checks'), fieldEl: dataChecksEl});\n        }\n\n        return obj;\n    },\n\n    checks: function( data ){\n        try{\n            let attrValue = JSON.parse(data.attrValue),\n                fieldEl = data.fieldEl,\n                formEl = fieldEl.closest('form'),\n                checkedElLength = formEl.querySelectorAll('[name=\"' + fieldEl.name + '\"]:checked').length,\n                isMinOk = checkedElLength >= attrValue[0],\n                isMaxOk = checkedElLength <= attrValue[1],\n                obj = {\n                    result: isMinOk && isMaxOk\n                };\n\n            if( !obj.result ){\n\n                obj.errors = { checks: true };\n                if( !isMinOk ){ obj.errors.minChecks = true; }\n                if( !isMaxOk ){ obj.errors.maxChecks = true; }\n\n            }\n\n            return obj;\n        } catch(e){\n            throw new Error('\"data-checks\" attribute is not a valid array!');\n        }\n    },\n\n    equalTo: function( data ){\n        let fieldEl = data.fieldEl,\n            formEl = fieldEl.closest('form'),\n            checkFromEl = formEl.querySelector( '[name=\"' + fieldEl.getAttribute('data-equal-to') + '\"]' ),\n            obj = {\n                result: fieldEl.value === checkFromEl.value\n            };\n\n        if( !obj.result ){\n            \n            obj.errors = { equalTo: true };\n        }\n\n        return obj;\n    },\n    \n    exactLength: function( data ){\n        let valueLength = data.fieldEl.value.length,\n            exactLength = (data.attrValue * 1),\n            obj = {\n                result: valueLength === exactLength\n            };\n\n        if( !obj.result ){\n\n            obj.errors = { exactLength: true };\n            if( valueLength < exactLength ){ obj.errors.minlength = true; }\n            else { obj.errors.maxlength = true; }\n\n        }\n\n        return obj;\n    },\n\n    file: function( data ){\n        let fieldEl = data.fieldEl,\n            MIMEtype = (fieldEl.accept ? new RegExp(fieldEl.accept.replace( '*', '[^\\\\/,]+' )) : null),\n            filesList = Array.from(fieldEl.files),\n            obj = { result: true };\n\n        filesList.forEach(function( file ){\n            let exceedMaxFileSize = data.fieldOptions.maxFileSize > 0 && (file.size/1024/1024) > data.fieldOptions.maxFileSize,\n                isAcceptedFileType = (MIMEtype !== null ? MIMEtype.test(file.type) : true);\n\n            if( exceedMaxFileSize || !isAcceptedFileType ){\n                obj.result = false;\n                if( typeof obj.errors === 'undefined' ){\n                    obj.errors = {};\n                }\n                if( exceedMaxFileSize ){ obj.errors.maxFileSize = true; }\n                if( !isAcceptedFileType ){ obj.errors.acceptedFileType = true; }\n\n            }\n        });\n\n        return obj;\n    },\n\n    length: function( data ){\n        try{\n            let valueL = data.fieldEl.value.length,\n                attrValue = JSON.parse(data.attrValue),\n                isMinlengthOk = valueL >= attrValue[0],\n                isMaxlengthOk = valueL <= attrValue[1],\n                obj = { result: isMinlengthOk && isMaxlengthOk };\n\n            if( !obj.result ){\n\n                obj.errors = { length: true };\n                if( !isMinlengthOk ){ obj.errors.minlength = true; }\n                if( !isMaxlengthOk ){ obj.errors.maxlength = true; }\n\n            }\n\n            return obj;\n        } catch(e){\n            throw new Error('\"data-length\" attribute is not a valid array!');\n        }\n    },\n    \n    max: function( data ){\n        var value = data.fieldEl.value * 1,\n            maxVal = data.attrValue * 1,\n            obj = {\n                result: value <= maxVal\n            };\n\n        if( !obj.result ){\n            \n            obj.errors = { max: true };\n        }\n        \n        return obj;\n    },\n    \n    maxlength: function( data ){\n        const obj = {\n            result: data.fieldEl.value.length <= (data.attrValue * 1)\n        };\n\n        if( !obj.result ){\n\n            obj.errors = { maxlength: true };\n        }\n\n        return obj;\n    },\n    \n    min: function( data ){\n        var value = data.fieldEl.value * 1,\n            minVal = data.attrValue * 1,\n            obj = {\n                result: value >= minVal\n            };\n\n        if( !obj.result ){\n            \n            obj.errors = { min: true };\n        }\n        \n        return obj;\n    },\n\n    minlength: function( data ){\n        const obj = {\n            result: data.fieldEl.value.length >= (data.attrValue * 1)\n        };\n\n        if( !obj.result ){\n\n            obj.errors = { minlength: true };\n        }\n\n        return obj;\n    },\n\n    pattern: function( data ){\n        let fieldEl = data.fieldEl,\n            fieldPattern = fieldEl.pattern,\n            fieldRegex = new RegExp( fieldPattern ),\n            obj = {\n                result: fieldRegex.test( fieldEl.value )\n            };\n\n        if( !obj.result ){\n\n            obj.errors = { pattern: true };\n        }\n\n        return obj;\n    },\n\n    radio: function( data ){\n        let fieldEl = data.fieldEl,\n            fieldChecked = fieldEl.closest('form').querySelector( '[name=\"'+ fieldEl.name +'\"]:checked' ),\n            isValid = fieldChecked !== null && fieldChecked.value.trim().length > 0,\n            obj = { result: isValid };\n\n        return obj;\n    },\n\n    requiredFrom: function( data ){\n        let fieldEl = data.fieldEl,\n            formEl = fieldEl.closest('form'),\n            isValidValue = fieldEl.value.trim().length > 0,\n            reqMoreEl = formEl.querySelector( fieldEl.getAttribute('data-required-from') ),\n            checkedEl = formEl.querySelector( '[name=\"'+ reqMoreEl.name +'\"]:checked' ),\n            obj = { result: checkedEl !== null };\n\n        if( reqMoreEl.checked && reqMoreEl.required ){\n            obj.result = isValidValue;\n        }\n\n        if( !obj.result ){\n            obj.errors = { requiredFrom: true };\n        }\n        \n        return obj;\n    }\n    \n}\n","\r\n/**! formJS v3.0.0 | Valerio Di Punzio (@SimplySayHi) | https://valeriodipunzio.com/plugins/formJS/ | https://github.com/SimplySayHi/formJS | MIT license */\r\n\r\nimport { _mergeObjects }        from './modules/helper.js';\r\nimport { _callbackFns }         from './modules/listenerCallbacks.js';\r\n\r\nimport { options }              from './modules/options.js';\r\nimport { validationRules }      from './modules/validationRules.js';\r\n\r\n// CONSTRUCTOR FUNCTION & PUBLIC METHODS\r\nimport { _constructor }         from './modules/constructor.js';\r\nimport { destroy }              from './modules/destroy.js';\r\nimport { getFormData }          from './modules/getFormData.js';\r\nimport { init }                 from './modules/init.js';\r\nimport { isValidField }         from './modules/isValidField.js';\r\nimport { isValidForm }          from './modules/isValidForm.js';\r\nimport { submit }               from './modules/submit.js';\r\nimport { validateField }        from './modules/validateField.js';\r\nimport { validateForm }         from './modules/validateForm.js';\r\n\r\nconst version = '3.0.0';\r\nconst _listenerCallbacks = new WeakMap();\r\n\r\nclass Form {\r\n\r\n    constructor( formEl, optionsObj ){\r\n        const self = this;\r\n\r\n        _listenerCallbacks.set(self, {\r\n            charCount:          _callbackFns.charCount,\r\n            dataTypeNumber:     _callbackFns.dataTypeNumber,\r\n            keypressMaxlength:  _callbackFns.keypressMaxlength,\r\n            pastePrevent:       _callbackFns.pastePrevent.bind(self),\r\n            submit:             _callbackFns.submit.bind(self),\r\n            validation:         _callbackFns.validation.bind(self)\r\n        });\r\n\r\n        _constructor.call( self, formEl, optionsObj );\r\n    }\r\n\r\n    get listenerCallbacks(){\r\n        return _listenerCallbacks.get(this);\r\n    }\r\n\r\n    destroy(){\r\n        destroy.call(this);\r\n    }\r\n    \r\n    getFormData( customFn ){\r\n        return getFormData.call(this, customFn);\r\n    }\r\n\r\n    init(){\r\n        return init.call(this);\r\n    }\r\n    \r\n    isValidField( fieldEl, fieldOptions ){\r\n        return isValidField.call(this, fieldEl, fieldOptions);\r\n    }\r\n    \r\n    isValidForm( optionsObj ){\r\n        return isValidForm.call(this, optionsObj);\r\n    }\r\n\r\n    submit( optionsObj, event ){\r\n        submit.call(this, optionsObj, event);\r\n    }\r\n\r\n    validateField( fieldElem ){\r\n        return validateField.call(this, fieldElem);\r\n    }\r\n\r\n    validateForm(){\r\n        return validateForm.call(this);\r\n    }\r\n    \r\n    static addValidationRules( rulesObj ){\r\n        this.prototype.validationRules = _mergeObjects({}, rulesObj, this.prototype.validationRules);\r\n    }\r\n    \r\n    static setOptions( optionsObj ){\r\n        this.prototype.options = _mergeObjects({}, optionsObj, this.prototype.options);\r\n    }\r\n\r\n}\r\n\r\nForm.prototype.isInitialized = false;\r\nForm.prototype.options = options;\r\nForm.prototype.validationRules = validationRules;\r\nForm.prototype.version = version;\r\n\r\nif( !window.Form ){ window.Form = Form; }\r\nif( !window.FormJS ) { window.FormJS = Form; }\r\n","\nimport { _executeCallback, _fieldsStringSelector } from './helper.js';\n\nexport const _callbackFns = {\n\n    charCount: function( eventOrField ){\n\n        const fieldEl = eventOrField.target || eventOrField;\n\n        if( fieldEl.matches( '[data-char-count]' ) ){\n            try {\n                let charLengthEl = fieldEl.closest('[data-formjs-question]').querySelector('[data-char-length]');\n\n                if( charLengthEl !== null ){\n                    let usedChars = fieldEl.value.length;\n                    charLengthEl.textContent = usedChars;\n                }\n            } catch (error) {}\n        }\n\n    },\n\n    dataTypeNumber: function( event ){\n\n        const fieldEl = event.target;\n        \n        if( fieldEl.matches('[data-type=\"number\"]') ){\n            let fieldValue = fieldEl.value,\n                hasInvalidChars = /[^\\d.,+\\-]/.test(fieldValue);\n            \n            if( hasInvalidChars ){\n                event.stopImmediatePropagation();\n                let valueReplaced = fieldValue.replace(/[^\\d.,+\\-]/g, '');\n                fieldEl.value = valueReplaced;\n            }\n        }\n\n    },\n\n    keypressMaxlength: function( event ){\n\n        const fieldEl = event.target;\n        \n        if( fieldEl.matches( '[maxlength]' ) ){\n            const maxLength = fieldEl.maxLength * 1,\n                keyPressed = event.which || event.keyCode,\n                allowedKeys = [8, 37, 38, 39, 46];\n\n            if( fieldEl.value.length >= maxLength && allowedKeys.indexOf(keyPressed) === -1 ){\n                return false;\n            }\n        }\n\n    },\n\n    pastePrevent: function( event ){\n\n        const self = this,\n              fieldEl = event.target;\n        let fieldOptions = self.options.fieldOptions;\n\n        if( fieldEl.matches( fieldOptions.preventPasteFields ) ){     \n            event.preventDefault();\n            _executeCallback.call( self, fieldOptions.onPastePrevented, fieldEl );\n        }\n\n    },\n\n    submit: function( event ){\n        this.submit( {}, event );\n    },\n\n    validation: function( event ){\n\n        const self = this,\n            eventName = event.type,\n            fieldEl = event.target;\n\n        if( fieldEl.matches( _fieldsStringSelector ) ){\n            const isFieldForChangeEvent = fieldEl.matches( 'select, [type=\"radio\"], [type=\"checkbox\"], [type=\"file\"]' ),\n                isRadio = fieldEl.type === 'radio',\n                isReqFrom = fieldEl.matches('[data-required-from]'),\n                isReqMore = fieldEl.matches('[data-require-more]'),\n                isValidValue = fieldEl.value.trim().length > 0;\n\n            // HANDLE data-require-more FIELDS\n            if( isRadio && eventName === 'change' ){\n                let findReqMoreEl = (isReqMore ? fieldEl : self.formEl.querySelector('[name=\"'+ fieldEl.name +'\"][data-require-more]')),\n                    findReqFromEl = (findReqMoreEl !== null ? self.formEl.querySelector('[data-required-from=\"#'+ findReqMoreEl.id +'\"]') : null);\n\n                if( isReqMore ){\n\n                    if( findReqFromEl !== null ){\n                        if( fieldEl.required ){\n                            findReqFromEl.required = true;\n                        }\n                        if( self.options.fieldOptions.focusOnRelated ){\n                            findReqFromEl.focus();\n                        }\n                    }\n\n                } else if( findReqMoreEl !== null ){\n\n                    if( findReqFromEl !== null ){\n                        findReqFromEl.required = false;\n                        findReqFromEl.value = '';\n                    }\n\n                }\n            }\n\n            // HANDLE data-required-from FIELDS\n            if( isReqFrom ){\n                if( isValidValue ){\n\n                    let reqMoreEl = self.formEl.querySelector( fieldEl.getAttribute('data-required-from') );\n                    reqMoreEl.checked = true;\n\n                    if( reqMoreEl.required ){\n                        fieldEl.required = true;\n                    }\n                }\n            }\n            \n            if(\n                (isFieldForChangeEvent && eventName === 'change') ||\n                (!isFieldForChangeEvent && eventName === 'input') ||\n                (eventName !== 'change' && eventName !== 'input')\n            ){\n                \n                self.validateField( fieldEl );\n\n            }\n        }\n        \n    }\n\n};\n","\nimport { _addClass, _isNodeList, _removeClass } from './helper.js';\n\nexport function _checkDirtyField( fields, cssClasses = this.options.fieldOptions.cssClasses.dirty ){\n\n    var fields = (_isNodeList(fields) ? Array.from( fields ) : [fields]);\n    \n    fields.forEach(function(fieldEl){\n        if( fieldEl.type !== 'checkbox' && fieldEl.type !== 'radio' ){\n            let containerEl = fieldEl.closest('[data-formjs-question]') || fieldEl;\n\n            if( fieldEl.value ){\n                \n                _addClass( containerEl, cssClasses );\n                \n            } else {\n                \n                _removeClass( containerEl, cssClasses );\n                \n            }\n        }\n    });\n    \n}\n","\nimport { _checkFormEl, _isNodeList, _mergeObjects } from './helper.js';\nimport { _setCallbackFunctionsInOptions }           from './options.js';\nimport { _formStartup }                             from './formStartup.js';\n\nexport function _constructor( formEl, optionsObj = {} ){\n\n    let self = this,\n        argsL = arguments.length,\n        checkFormEl = _checkFormEl(formEl);\n\n    if( argsL === 0 || (argsL > 0 && !formEl) ){\n        throw new Error('First argument \"formEl\" is missing or falsy!');\n    }\n    if( _isNodeList(formEl) ){\n        throw new Error('First argument \"formEl\" must be a single DOM node or a form CSS selector, not a NodeList!');\n    }\n    if( !checkFormEl.result ){\n        throw new Error('First argument \"formEl\" is not a DOM node nor a form CSS selector!');\n    }\n\n    self.formEl = checkFormEl.element;\n    self.options = _mergeObjects({}, optionsObj, Form.prototype.options);\n    _setCallbackFunctionsInOptions.call( self );\n\n    _formStartup.call( self );\n    \n}\n","\nexport function _formStartup(){\n\n    const self = this,\n          formEl = self.formEl;\n\n    if( !formEl.matches('[novalidate]') ){ return null; }\n\n    let fieldOptions = self.options.fieldOptions,\n        formOptions = self.options.formOptions;\n\n    // INIT FORM UTILITIES - START\n    let charLengthElems = formEl.querySelectorAll('[data-char-length]');\n    if( charLengthElems.length > 0 ){\n        Array.from( charLengthElems ).forEach(function( element ){\n            try {\n                let containerEl = element.closest('[data-formjs-question]'),\n                    fieldEl = containerEl.querySelector('[data-char-count]');\n\n                if( fieldEl !== null && fieldEl.matches('[maxlength]') ){\n                    // PRINT RELATED MAX LENGTH IN HTML\n                    let maxlength = fieldEl.getAttribute('maxlength');\n                    containerEl.querySelector('[data-char-maxlength]').textContent = maxlength;\n                }\n\n                // PRINT CHAR COUNT IN HTML\n                self.listenerCallbacks.charCount.call( null, fieldEl );\n            } catch (error) {}\n        });\n    }\n\n    if( fieldOptions.maxFileSize > 0 ){\n        let maxFileSizeElems = formEl.querySelectorAll('[data-max-file-size]');\n        if( maxFileSizeElems.length > 0 ){\n            Array.from( maxFileSizeElems ).forEach(function( element ){\n                try {\n                    let fieldEl = element.closest('[data-formjs-question]').querySelector('[type=\"file\"]');\n\n                    if( fieldEl !== null ){\n                        // PRINT MAX FILE SIZE FOR INPUTS WITH type=\"file\"\n                        element.textContent = fieldOptions.maxFileSize;\n                    }\n                } catch (error) {}\n            });\n        }\n    }\n    // INIT FORM UTILITIES - END\n\n    // HANDLE FIELD VALIDATION\n    if( fieldOptions.handleValidation ){\n        \n        // VALIDATION WITH ATTRIBUTES LIKE HTML ONES ( ALSO FOR BUG FIXING, EG: maxlength IN ANDROID )\n        if( fieldOptions.strictHtmlValidation ){\n            \n            // maxlength\n            // BUGGY IN ANDROID BROWSERS\n            formEl.addEventListener('keypress', self.listenerCallbacks.keypressMaxlength, false);\n\n            // data-type=\"number\"\n            // SINCE VALIDATING type=\"number\" WITH NON NUMERIC CHARS WILL RETURN EMPTY STRING IN SOME BROWSERS ( EG: FIREFOX )\n            formEl.addEventListener('input', self.listenerCallbacks.dataTypeNumber, false);\n            \n        }\n        \n        if( fieldOptions.preventPasteFields && formEl.querySelectorAll( fieldOptions.preventPasteFields ).length ){\n            // INIT EVENT LISTENER FOR \"PASTE\" EVENT TO PREVENT IT ON SPECIFIED FIELDS\n            formEl.addEventListener('paste', self.listenerCallbacks.pastePrevent, false);\n        }\n\n        if( formEl.querySelectorAll('[data-char-count]').length > 0 ){\n            // INIT EVENT LISTENER FOR FIELDS WITH \"data-char-count\" ATTRIBUTE\n            formEl.addEventListener('input', self.listenerCallbacks.charCount, false);\n        }\n\n        // INIT EVENTS LISTENER ( AS IN fieldOptions )\n        fieldOptions.validateOnEvents.split(' ').forEach(function( eventName ){\n            let useCapturing = (eventName === 'blur' ? true : false);\n            formEl.addEventListener(eventName, self.listenerCallbacks.validation, useCapturing);\n        });\n\n    }\n    \n    // HANDLE FORM SUBMIT\n    if( formOptions.handleSubmit ){\n        // INIT FORM SUBMIT ( DEFAULT AND AJAX )\n        formEl.addEventListener('submit', self.listenerCallbacks.submit);\n\n        if( formOptions.ajaxSubmit ){\n            if( formEl.getAttribute('enctype') ){\n                formOptions.ajaxOptions.contentType = formEl.getAttribute('enctype');\n            }\n\n            if( formEl.getAttribute('method') ){\n                formOptions.ajaxOptions.method = formEl.getAttribute('method').toUpperCase();\n            }\n\n            if( formEl.getAttribute('action') ){\n                formOptions.ajaxOptions.url = formEl.getAttribute('action');\n            }\n        }\n    }\n\n}\n","\nexport function destroy(){\n\n    const self = this,\n          formEl = self.formEl,\n          validationListenerNames = self.options.fieldOptions.validateOnEvents;\n\n    if( formEl.querySelectorAll('[data-char-count]').length > 0 ){\n        formEl.removeEventListener('input', self.listenerCallbacks.charCount, false);\n    }\n\n    if( self.options.fieldOptions.strictHtmlValidation ){\n        formEl.removeEventListener('keypress', self.listenerCallbacks.keypressMaxlength, false);\n        formEl.removeEventListener('input', self.listenerCallbacks.dataTypeNumber, false);\n    }\n\n    if( self.options.fieldOptions.preventPasteFields ){\n        formEl.removeEventListener('paste', self.listenerCallbacks.pastePrevent, false);\n    }\n\n    if( self.options.formOptions.handleSubmit ){\n        formEl.removeEventListener('submit', self.listenerCallbacks.submit);\n    }\n\n    validationListenerNames.split(' ').forEach(function( eventName ){\n        let useCapturing = (eventName === 'blur' ? true : false);\n        formEl.removeEventListener(eventName, self.listenerCallbacks.validation, useCapturing);\n    });\n    \n}\n","\nexport function getFormData( customFn = this.options.formOptions.getFormJSON ){\n\n    let formData = {},\n        self = this,\n        formEl = self.formEl,\n        formFieldsEl = formEl.querySelectorAll('input, select, textarea'),\n        excludeSelectors = ':not([type=\"reset\"]):not([type=\"submit\"]):not([type=\"button\"]):not([type=\"file\"]):not([data-exclude-data])',\n        filteredFields = Array.from(formFieldsEl).filter(elem => elem.matches(excludeSelectors) );\n    \n    if( typeof customFn === 'function' ){\n\n        formData = customFn.call( self, filteredFields );\n\n    } else {\n\n        filteredFields.forEach(function( fieldEl ){\n            let isCheckbox = fieldEl.type === 'checkbox',\n                isRadio = fieldEl.type === 'radio',\n                isSelect = fieldEl.matches('select'),\n                name = fieldEl.name,\n                value = fieldEl.value;\n                         \n            if( isCheckbox ) {\n                \n                value = fieldEl.checked;\n                let checkboxes = Array.from( formEl.querySelectorAll('[name=\"'+ name +'\"]') );\n                if( checkboxes.length > 1 ){\n\n                    value = [];\n                    let checkedElems = checkboxes.filter(field => field.checked);\n                    checkedElems.forEach(fieldEl => {\n                        value.push( fieldEl.value );\n                    });\n\n                }\n                    \n            } else if( isRadio ){\n                \n                let checkedRadio = formEl.querySelector('[name=\"'+ name +'\"]:checked');\n                value = (checkedRadio === null ? null : checkedRadio.value);\n                \n            } else if( isSelect ){\n\n                let selectedOpts = Array.from( fieldEl.options ).filter(option => option.selected);\n                if( selectedOpts.length > 1 ){\n\n                    value = [];\n                    selectedOpts.forEach(fieldEl => {\n                        value.push( fieldEl.value );\n                    });\n\n                }\n            }\n\n            formData[ name ] = value;\n        });\n\n    }\n    \n    return formData;\n    \n}\n","\nimport { _fieldsStringSelector } from './helper.js';\n\nexport const init = function(){\n\n    const self = this,\n          formEl = self.formEl,\n          formFields = formEl.querySelectorAll( _fieldsStringSelector );\n\n    Array.from( formFields ).forEach(function( fieldEl ){\n        const isCheckboxOrRadio = (fieldEl.type === 'checkbox' || fieldEl.type === 'radio'),\n              fieldChecked = formEl.querySelector('[name=\"' + fieldEl.name + '\"]:checked'),\n              isReqFrom = fieldEl.matches('[data-required-from]'),\n              reqMoreEl = (isReqFrom ? formEl.querySelector(fieldEl.getAttribute('data-required-from')) : null);\n        \n        // VALIDATE FIELDS IF THEY ALREADY HAVE A VALUE\n        if(\n            (!isCheckboxOrRadio && fieldEl.value) || \n            (isCheckboxOrRadio && fieldChecked !== null) ||\n            (isReqFrom && reqMoreEl.checked)\n        ){\n\n            if( isCheckboxOrRadio ){\n                fieldEl = fieldChecked;\n            }\n\n            self.validateField( fieldEl );\n\n        }\n    });\n\n    self.isInitialized = true;\n\n    return self;\n\n}\n","\nimport { _isDOMNode, _mergeObjects } from './helper.js';\nimport { _isValid } from './isValid.js';\n\nexport function isValidField( fieldElem, fieldOptionsObj = {} ){\n\n    const self = this,\n          fieldEl = (typeof fieldElem === 'string' ? self.formEl.querySelector(fieldElem) : fieldElem);\n\n    let obj = { result: false, fieldEl: null };\n\n    if( !_isDOMNode(fieldEl) ){ return obj; }\n\n    let options =           _mergeObjects( {}, fieldOptionsObj, self.options.fieldOptions ),\n        isValidValue =      fieldEl.value.trim().length > 0,\n        isRequired =        fieldEl.required,\n        isReqFrom =         fieldEl.matches('[data-required-from]'),\n        isValidateIfFilled =fieldEl.matches('[data-validate-if-filled]');\n    \n    if(\n        (!isRequired && !isValidateIfFilled && !isReqFrom) ||   // IT IS A NORMAL FORM FIELD\n        (isValidateIfFilled && !isValidValue) ||                // IT IS data-validate-if-filled AND EMPTY\n        (isReqFrom && !isRequired )                             // IT IS data-required-from AND NOT required\n    ){\n\n        obj.result = true;\n       \n    } else {\n        \n        obj =  _isValid.call( self, fieldEl, options );\n        \n    }\n\n    obj.fieldEl = fieldEl;\n    \n    return obj;\n\n}\n","\nimport { _mergeObjects, _toCamelCase } from './helper.js';\nimport { _validationRulesAttributes } from './validationRules.js';\n\nexport function _isValid( fieldEl, fieldOptions = {} ){\n\n    const self = this,\n          fieldType = ( fieldEl.matches('[data-subtype]') ? _toCamelCase( fieldEl.getAttribute('data-subtype') ) : fieldEl.type ),\n          fieldValue = fieldEl.value,\n          isValidValue = fieldValue.trim().length > 0,\n          // ALPHABETICAL REVERSE ORDER\n          fieldAttributes = Array.from(fieldEl.attributes).sort(function(a,b){ return a.name < b.name });\n\n    let attrValidations = [],\n        attrValidationsResult = isValidValue,\n        obj = { result: isValidValue };\n\n    if( !isValidValue ){\n        obj.errors = { empty: true };\n        obj.result = false;\n        return obj;\n    }\n\n    // COLLECT SPECIFIC VALIDATIONS FOR _validationRulesAttributes\n    fieldAttributes.forEach(function(attr){\n        // FOR data-* ATTRIBUTES -> REMOVE \"data-\" AND TRANSFORM TO CAMELCASE\n        let attrName = _toCamelCase( attr.name.replace('data-', '') ),\n            attrValue = attr.value,\n            isTypeValueWithFn = attrName === 'type' && typeof _validationRulesAttributes[attrValue] === 'function',\n            isAttrNameWithFn = typeof _validationRulesAttributes[attrName] === 'function';\n\n        if( isTypeValueWithFn || isAttrNameWithFn ){\n\n            let extraValObj = {\n                    attrName: (isTypeValueWithFn ? attrValue : attrName),\n                    attrValue: attrValue,\n                    fieldEl,\n                    fieldOptions\n                };\n\n            if( isTypeValueWithFn || attrName === 'requiredFrom' ){\n                // THESE VALIDATIONS MUST RUN BEFORE ALL OTHERS\n                attrValidations.unshift( extraValObj );\n            } else {\n                attrValidations.push( extraValObj );\n            }\n\n        }\n    });\n\n    // RUN SPECIFIC VALIDATIONS FOR _validationRulesAttributes\n    attrValidations.forEach(function(item){\n        let extraVal = _validationRulesAttributes[item.attrName]( item, fieldEl );\n        if( !extraVal.result ){\n            obj = _mergeObjects({}, extraVal, obj);\n            attrValidationsResult = false;\n        }\n    });\n\n    // RUN VALIDATIONS FOR validationRules\n    if( typeof self.validationRules[fieldType] === 'function' ){\n        obj = _mergeObjects( {}, self.validationRules[fieldType](fieldValue, fieldEl), obj );\n        obj.result = obj.result && attrValidationsResult;\n        if( !obj.result ){\n            if( typeof obj.errors === 'undefined' ){\n                obj.errors = {};\n            }\n            obj.errors.rule = true;\n        }\n    }\n\n    return obj;\n\n}\n","\nimport { _fieldsStringSelector, _isDOMNode, _mergeObjects } from './helper.js';\n\nexport function isValidForm( options = {} ){\n\n    const self = this,\n          formEl = self.formEl;\n\n    let obj = {\n            fields: [],\n            result: true\n        };\n\n    if( !_isDOMNode(formEl) || !formEl.matches('[novalidate]') ){\n        obj.result = false;\n        return obj;\n    }\n    \n    var fieldOptions = _mergeObjects( {}, options.fieldOptions || {}, self.options.fieldOptions ),\n        currentFieldName = '',\n        currentFieldType = '';\n    \n    if( typeof fieldOptions.focusOnRelated === 'undefined' ){\n        fieldOptions.focusOnRelated = false;\n    }\n    \n    Array.from( formEl.querySelectorAll(_fieldsStringSelector) ).forEach(function( fieldEl ){\n        let name = fieldEl.name,\n            type = fieldEl.type,\n            fieldData = {};\n        \n        if( (name === currentFieldName && type === currentFieldType) ){ return true; }\n        \n        if( !fieldEl.matches('[data-required-from]') ){\n            currentFieldName = name;\n            currentFieldType = type;\n        }\n        \n        fieldData = self.isValidField( fieldEl, fieldOptions );\n\n        if( !fieldData.result ){\n            obj.result = false;\n        }\n        \n        obj.fields.push( fieldData );\n    });\n    \n    return obj;\n\n}\n","\nimport { _executeCallback, _isPlainObject, _mergeObjects } from './helper.js';\nimport { _xhrCall } from './xhrCall.js';\n\nexport function submit( options = {}, event = null ){\n\n    const self = this,\n          formEl = self.formEl,\n          eventPreventDefault = ( enableBtn = true ) => {\n              if( btnEl && enableBtn ){ btnEl.disabled = false; }\n              if( event ){ event.preventDefault(); }\n          };\n    \n    options.fieldOptions = _mergeObjects( {}, (options.fieldOptions || {}), self.options.fieldOptions );\n    options.formOptions = _mergeObjects( {}, (options.formOptions || {}), self.options.formOptions );\n    \n    const handleValidation = options.fieldOptions.handleValidation,\n          formValidation = (handleValidation ? self.isValidForm( options ) : { result: true });\n\n    const btnEl = formEl.querySelector('[type=\"submit\"]'),\n          isAjaxForm = options.formOptions.ajaxSubmit;\n    \n    if( handleValidation ){\n        _executeCallback.call( self, options.fieldOptions.onValidation, formValidation.fields );\n    }\n    \n    let formDataJSON = (isAjaxForm ? self.getFormData() : null),\n        callbacksBeforeSend = [],\n        beforeSendOpt = options.formOptions.beforeSend;\n\n    if( typeof beforeSendOpt === 'function' || Array.isArray(beforeSendOpt) ){\n        let beforeSendData = {\n                stopExecution: false\n            },\n            stopCallbackLoop = false;\n\n        if( formDataJSON ){\n            beforeSendData.formData = formDataJSON;\n        }\n\n        if( typeof beforeSendOpt === 'function' ){\n            callbacksBeforeSend.push( beforeSendOpt );\n        } else if( Array.isArray(beforeSendOpt) ) {\n            callbacksBeforeSend = beforeSendOpt;\n        }\n\n        callbacksBeforeSend.forEach(function(cbFn){\n            if( !stopCallbackLoop ){\n                let beforeSendFn = cbFn.call( self, beforeSendData );\n                \n                if( _isPlainObject(beforeSendFn) ){\n                    formDataJSON = beforeSendFn.formData || formDataJSON;\n                    if( beforeSendFn.stopExecution ){\n                        stopCallbackLoop = true;\n                    }\n                }\n            }\n        });\n\n        if( stopCallbackLoop ){\n            eventPreventDefault();\n            return false;\n        }\n    }\n\n    if( !formValidation.result || (btnEl && btnEl.disabled) ){\n        eventPreventDefault();\n        return false;\n    }\n\n    if( btnEl ){\n        btnEl.disabled = true;\n    }\n    \n    if( isAjaxForm ){\n\n        // AJAX FORM SUBMIT\n        eventPreventDefault(false);\n        _xhrCall.call( self, formDataJSON );\n\n    } else if( !event ){\n\n        // TRIGGER SUBMIT EVENT\n        let submitEvent = new Event('submit', {'bubbles': true, 'cancelable': true});\n        formEl.dispatchEvent(submitEvent);\n\n    }\n    \n}\n","\nimport { _executeCallback, _mergeObjects, _serialize } from './helper.js';\n\nexport function _xhrCall( formDataJSON ){\n\n    let self = this,\n        formEl = self.formEl,\n        fieldOptions = self.options.fieldOptions,\n        formOptions = self.options.formOptions,\n        btnEl = formEl.querySelector('[type=\"submit\"]'),\n        timeoutTimer,\n        xhrOptions = _mergeObjects( {}, formOptions.ajaxOptions );\n\n    xhrOptions.data = formDataJSON;\n    \n    if( xhrOptions.contentType === 'multipart/form-data' && fieldOptions.handleFileUpload ){\n        let formDataMultipart = new FormData();\n        \n        for(let key in xhrOptions.data){\n            formDataMultipart.append( key, xhrOptions.data[key] );\n        }\n        \n        Array.from( formEl.querySelectorAll('[type=\"file\"]') ).forEach(function( field ){\n            Array.from(field.files).forEach(function( file, idx ){\n                let name = field.name+'['+ idx +']';\n                formDataMultipart.append( name, file, file.name );\n            });\n        });\n        \n        xhrOptions.data = formDataMultipart;\n    }\n    \n    let XHR = new XMLHttpRequest(),\n        parseResponse = function( xhr ){\n            let data = xhr.responseText,\n                getJSON = function(){\n                    try{\n                        let obj = JSON.parse(data);\n                        return obj;\n                    } catch(e){\n                        return false;\n                    }\n                },\n                getXML_HTML = function(){\n                    try{\n                        let isXML = xhr.responseXML !== null,\n                            obj = (isXML ? new DOMParser().parseFromString(data, 'text/xml') : data);\n                        return obj;\n                    } catch(e){\n                        return false;\n                    }\n                };\n            \n            return (getJSON() || getXML_HTML() || data);\n        },\n        loadendFn = function(e) {\n            let xhr = e.target,\n                responseData = parseResponse(xhr);\n\n            let readyStateOK = xhr.readyState === 4,\n                statusOK = xhr.status === 200,\n                ajaxData = {\n                    dataOrXHR:      ( readyStateOK && statusOK ? responseData   : xhr           ),\n                    status:         ( readyStateOK && statusOK ? 'success'      : 'error'       ),\n                    XHRorResponse:  ( readyStateOK && statusOK ? xhr            : responseData  )\n                };\n            \n            if( timeoutTimer ){\n                window.clearTimeout( timeoutTimer );\n            }\n\n            btnEl.disabled = false;\n\n            _executeCallback.call( self, formOptions.onSubmitComplete, ajaxData );\n        },\n        loadFn = function(e) {\n            let xhr = e.target;\n\n            if( xhr.status === 200 ){\n                let responseData = parseResponse(xhr),\n                    ajaxData = { data: responseData, status: 'success', response: xhr };\n\n                _executeCallback.call( self, formOptions.onSubmitSuccess, ajaxData );\n            } else {\n                errorFn(e);\n            }\n        },\n        errorFn = function(e) {\n            let xhr = e.target,\n                ajaxData = { errorThrown: xhr.statusText, status: 'error', response: xhr };\n\n            _executeCallback.call( self, formOptions.onSubmitError, ajaxData );\n        };\n    \n    XHR.addEventListener('loadend', loadendFn,  false);\n    XHR.addEventListener('load',    loadFn,     false);\n    XHR.addEventListener('error',   errorFn,    false);\n    \n    if( xhrOptions.method === 'GET' ){\n        xhrOptions.url += ( /\\?/.test(xhrOptions.url) ? '&' : '?' ) + _serialize( xhrOptions.data );\n        if( xhrOptions.cache === false ){\n            xhrOptions.url +=  (/\\&/.test(xhrOptions.url) ? '&' : '') + '_=' + (new Date().getTime());\n        }\n    }\n    \n    XHR.open(xhrOptions.method, xhrOptions.url, xhrOptions.async);\n\n    if ( xhrOptions.xhrFields ) {\n        for ( let i in xhrOptions.xhrFields ) {\n            XHR[ i ] = xhrOptions.xhrFields[ i ];\n        }\n    }\n\n    if ( xhrOptions.mimeType && XHR.overrideMimeType ) {\n        XHR.overrideMimeType( xhrOptions.mimeType );\n    }\n    \n    if( xhrOptions.data && xhrOptions.contentType !== 'multipart/form-data' ){\n        XHR.setRequestHeader('Content-Type', xhrOptions.contentType);\n    }\n    \n    for( let h in xhrOptions.headers ){\n        XHR.setRequestHeader( h, xhrOptions.headers[h] );\n    }\n    \n    XHR.send( (xhrOptions.method === 'GET' ? null : xhrOptions.data) );\n\n    if ( xhrOptions.async && xhrOptions.timeout > 0 ) {\n        timeoutTimer = window.setTimeout(function() {\n            XHR.abort();\n        }, xhrOptions.timeout);\n    }\n    \n}\n","\nimport { _executeCallback, _isDOMNode } from './helper.js';\n\nexport function validateField( fieldElem ){\n\n    const self = this,\n          fieldEl = (typeof fieldElem === 'string' ? self.formEl.querySelector(fieldElem) : fieldElem);\n            \n    let obj = { result: false };\n\n    if( _isDOMNode(fieldEl) ){\n        obj = self.isValidField( fieldEl );\n        _executeCallback.call( self, self.options.fieldOptions.onValidation, [obj] );\n    }\n\n    return obj;\n    \n}\n","\nimport { _executeCallback } from './helper.js';\n\nexport function validateForm(){\n\n    const self = this,\n          obj = self.isValidForm();\n\n    _executeCallback.call( self, self.options.fieldOptions.onValidation, obj.fields );\n\n    return obj;\n    \n}\n"],"sourceRoot":""}