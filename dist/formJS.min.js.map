{"version":3,"sources":["webpack:///webpack/bootstrap","webpack:///./src/modules/helper.js","webpack:///./src/modules/validationRules.js","webpack:///./src/index.js","webpack:///./src/modules/listenerCallbacks.js","webpack:///./src/modules/options.js","webpack:///./src/modules/formStartup.js","webpack:///./src/modules/destroy.js","webpack:///./src/modules/getFormJSON.js","webpack:///./src/modules/init.js","webpack:///./src/modules/isValidField.js","webpack:///./src/modules/isValid.js","webpack:///./src/modules/checkDirtyField.js","webpack:///./src/modules/isValidForm.js","webpack:///./src/modules/submit.js","webpack:///./src/modules/xhrCall.js"],"names":["installedModules","__webpack_require__","moduleId","exports","module","i","l","modules","call","m","c","d","name","getter","o","Object","defineProperty","enumerable","get","r","Symbol","toStringTag","value","t","mode","__esModule","ns","create","key","bind","n","default","object","property","prototype","hasOwnProperty","p","s","e","iterator","constructor","_isDOMNode","_fieldsStringSelector","_addClass","element","cssClasses","split","forEach","className","classList","add","_executeCallback","callbackOption","callbackData","self","this","callbackFnList","push","Array","isArray","cbFn","node","Element","isPrototypeOf","_isNodeList","nodeList","NodeList","_isPlainObject","toString","_checkFormEl","formEl","isString","_typeof","isFormSelector","document","querySelector","tagName","toLowerCase","result","_mergeObjects","out","arguments","length","obj","isObject","_removeClass","remove","_serialize","keys","reduce","a","k","encodeURIComponent","join","_toCamelCase","string","replace","all","letter","toUpperCase","validationRules","cap","test","date","dateIT","dateISO8601ext","email","fiscalCode","hexColor","landlineNumber","mobileNumber","number","numberFloat","numberInteger","password","url","username","vatNumber","_validationRulesAttributes","checkbox","data","isValid","fieldEl","checked","dataChecksEl","closest","checks","attrValue","getAttribute","JSON","parse","checkedElLength","querySelectorAll","Error","equalTo","checkFromEl","exactLength","file","MIMEtype","accept","RegExp","from","files","exceedMaxFileSize","fieldOptions","maxFileSize","size","isAcceptedFileType","type","valueL","max","maxlength","min","minlength","pattern","fieldPattern","radio","fieldChecked","trim","requiredFrom","isValidValue","reqMoreEl","checkedEl","required","_helper","_listenerCallbacks2","_options","_validationRules","_formStartup2","_destroy2","_getFormJSON2","_init2","_isValidField2","_isValidForm2","_submit2","_listenerCallbacks","WeakMap","Form","optionsObj","TypeError","argsL","checkFormEl","isInitialized","options","set","charCount","_callbackFns","dataTypeNumber","keypressMaxlength","pastePrevent","submit","validation","_formStartup","destroy","customFn","getFormJSON","init","isValidField","isValidForm","event","rulesObj","version","window","FormJS","eventOrField","target","matches","containerEL","usedChars","textContent","fieldValue","stopImmediatePropagation","valueReplaced","maxLength","keyPressed","which","keyCode","indexOf","preventPasteFields","preventDefault","onPastePrevented","eventName","isFieldForChangeEvent","isRadio","isReqFrom","isReqMore","findReqMoreEl","findReqFromEl","id","focusOnRelated","focus","field","onValidation","checkDirtyField","dirty","error","valid","handleFileUpload","handleValidation","skipUIfeedback","strictHtmlValidation","validateOnEvents","formOptions","ajaxOptions","async","cache","contentType","headers","X-Requested-With","method","timeout","location","href","ajaxSubmit","beforeSend","handleSubmit","onSubmitComplete","onSubmitError","onSubmitSuccess","addEventListener","listenerCallbacks","useCapturing","validationListenerNames","removeEventListener","formData","formFieldsEl","filteredFields","filter","elem","isCheckbox","isSelect","checkboxes","checkedRadio","selectedOpts","option","selected","formFields","containerEl","isCheckboxOrRadio","fieldElem","fieldOptionsObj","isRequired","isValidateIfFilled","_isValid","_checkDirtyField2","_checkDirtyField","_isValid2","fieldType","attrValidations","attrValidationsResult","attributes","sort","b","attr","attrName","isTypeValueWithFn","isAttrNameWithFn","extraValObj","unshift","item","fields","currentFieldName","currentFieldType","fieldData","fieldResult","eventPreventDefault","enableBtn","btnEl","disabled","formValidation","isAjaxForm","formDataJSON","callbacksBeforeSend","beforeSendOpt","beforeSendData","stopExecution","stopCallbackLoop","beforeSendFn","_xhrCall","submitEvent","Event","bubbles","cancelable","dispatchEvent","_xhrCall2","timeoutTimer","xhrOptions","formDataMultipart","FormData","append","idx","XHR","XMLHttpRequest","parseResponse","xhr","responseText","responseXML","isXML","DOMParser","parseFromString","errorFn","ajaxData","errorThrown","statusText","status","response","responseData","readyStateOK","readyState","statusOK","dataOrXHR","XHRorResponse","clearTimeout","Date","getTime","open","xhrFields","h","mimeType","overrideMimeType","setRequestHeader","send","setTimeout","abort"],"mappings":"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","file":"formJS.min.js","sourcesContent":[" \t// The module cache\n \tvar installedModules = {};\n\n \t// The require function\n \tfunction __webpack_require__(moduleId) {\n\n \t\t// Check if module is in cache\n \t\tif(installedModules[moduleId]) {\n \t\t\treturn installedModules[moduleId].exports;\n \t\t}\n \t\t// Create a new module (and put it into the cache)\n \t\tvar module = installedModules[moduleId] = {\n \t\t\ti: moduleId,\n \t\t\tl: false,\n \t\t\texports: {}\n \t\t};\n\n \t\t// Execute the module function\n \t\tmodules[moduleId].call(module.exports, module, module.exports, __webpack_require__);\n\n \t\t// Flag the module as loaded\n \t\tmodule.l = true;\n\n \t\t// Return the exports of the module\n \t\treturn module.exports;\n \t}\n\n\n \t// expose the modules object (__webpack_modules__)\n \t__webpack_require__.m = modules;\n\n \t// expose the module cache\n \t__webpack_require__.c = installedModules;\n\n \t// define getter function for harmony exports\n \t__webpack_require__.d = function(exports, name, getter) {\n \t\tif(!__webpack_require__.o(exports, name)) {\n \t\t\tObject.defineProperty(exports, name, { enumerable: true, get: getter });\n \t\t}\n \t};\n\n \t// define __esModule on exports\n \t__webpack_require__.r = function(exports) {\n \t\tif(typeof Symbol !== 'undefined' && Symbol.toStringTag) {\n \t\t\tObject.defineProperty(exports, Symbol.toStringTag, { value: 'Module' });\n \t\t}\n \t\tObject.defineProperty(exports, '__esModule', { value: true });\n \t};\n\n \t// create a fake namespace object\n \t// mode & 1: value is a module id, require it\n \t// mode & 2: merge all properties of value into the ns\n \t// mode & 4: return value when already ns object\n \t// mode & 8|1: behave like require\n \t__webpack_require__.t = function(value, mode) {\n \t\tif(mode & 1) value = __webpack_require__(value);\n \t\tif(mode & 8) return value;\n \t\tif((mode & 4) && typeof value === 'object' && value && value.__esModule) return value;\n \t\tvar ns = Object.create(null);\n \t\t__webpack_require__.r(ns);\n \t\tObject.defineProperty(ns, 'default', { enumerable: true, value: value });\n \t\tif(mode & 2 && typeof value != 'string') for(var key in value) __webpack_require__.d(ns, key, function(key) { return value[key]; }.bind(null, key));\n \t\treturn ns;\n \t};\n\n \t// getDefaultExport function for compatibility with non-harmony modules\n \t__webpack_require__.n = function(module) {\n \t\tvar getter = module && module.__esModule ?\n \t\t\tfunction getDefault() { return module['default']; } :\n \t\t\tfunction getModuleExports() { return module; };\n \t\t__webpack_require__.d(getter, 'a', getter);\n \t\treturn getter;\n \t};\n\n \t// Object.prototype.hasOwnProperty.call\n \t__webpack_require__.o = function(object, property) { return Object.prototype.hasOwnProperty.call(object, property); };\n\n \t// __webpack_public_path__\n \t__webpack_require__.p = \"\";\n\n\n \t// Load entry module and return exports\n \treturn __webpack_require__(__webpack_require__.s = 2);\n","export const\n\n_fieldsStringSelector = 'input:not([type=\"reset\"]):not([type=\"submit\"]):not([type=button]):not([type=hidden]), select, textarea',\n\n_addClass = function( element, cssClasses ){\n    cssClasses.split(' ').forEach(function(className){\n        element.classList.add( className );\n    });\n},\n\n_executeCallback = function( callbackOption, callbackData ){\n    let self = this,\n        callbackFnList = [];\n\n    if( typeof callbackOption === 'function' ){\n        callbackFnList.push( callbackOption );\n    } else if( Array.isArray(callbackOption) ) {\n        callbackFnList = callbackOption;\n    }\n\n    callbackFnList.forEach(function(cbFn){\n        cbFn.call(self, callbackData );\n    });\n},\n\n_isDOMNode = function( node ){\n    return Element.prototype.isPrototypeOf( node );\n},\n\n_isNodeList = function( nodeList ){\n    return NodeList.prototype.isPrototypeOf( nodeList );\n},\n\n_isPlainObject = function( object ){\n    return Object.prototype.toString.call( object ) === '[object Object]';\n},\n\n_checkFormEl = function( formEl ){\n    let isString = typeof formEl,\n        isValidNodeSelector = isString === 'string' && _isDOMNode(document.querySelector(formEl)),\n        isFormSelector = isValidNodeSelector && document.querySelector(formEl).tagName.toLowerCase() === 'form',\n        obj = {\n            result: _isDOMNode(formEl) || isFormSelector,\n            element: (isString === 'string' ? document.querySelector(formEl) : formEl)\n        };\n\n    return obj;\n},\n\n_mergeObjects = function( out = {} ){\n    for(let i=1; i<arguments.length; i++){\n        let obj = arguments[i];\n\n        if(!obj){ continue; }\n\n        for(let key in obj){\n            let isArray = Object.prototype.toString.call(obj[key]) === \"[object Array]\";\n            let isObject = Object.prototype.toString.call(obj[key]) === \"[object Object]\";\n\n            if( (!out.hasOwnProperty(key) && !isObject) || isArray ){\n                out[key] = obj[key];\n            } else {\n                if( isObject ){\n                    out[key] = _mergeObjects(out[key], obj[key]);\n                }\n            }\n        }\n    }\n\n    return out;\n},\n\n_removeClass = function( element, cssClasses ){\n    cssClasses.split(' ').forEach(function(className){\n        element.classList.remove( className );\n    });\n},\n\n_serialize = function( obj ){\n    var objToString = (\n            (obj && typeof obj === 'object' && obj.constructor === Object) ? \n            Object.keys(obj).reduce(function(a,k){a.push(k+'='+encodeURIComponent(obj[k]));return a},[]).join('&') : \n            obj\n    );\n    return objToString;\n},\n\n_toCamelCase = function( string ){\n    return string.replace(/-([a-z])/ig, function(all, letter){ return letter.toUpperCase(); });\n};","export const validationRules = {\n            \n    cap: function( string ){\n        // VALID ITALIAN CAP WITH 5 DIGITS\n        return /^[0-9]{5}$/.test( string );\n    },\n    \n    date: function( string ){\n        // DATE AS ITALIAN SYNTAX       DD MM YYYY | DD/MM/YYYY | DD.MM.YYYY | DD-MM-YYYY\n        // OR AS ISO 8601 DATE FORMAT   YYYY MM DD | YYYY/MM/DD | YYYY.MM.DD | YYYY-MM-DD\n\n        let dateIT = /^(((0[1-9]|[12]\\d|3[01])[ \\/\\-.](0[13578]|1[02])[ \\/\\-.]((19|[2-9]\\d)\\d{2}))|((0[1-9]|[12]\\d|30)[ \\/\\-.](0[13456789]|1[012])[ \\/\\-.]((19|[2-9]\\d)\\d{2}))|((0[1-9]|1\\d|2[0-8])[ \\/\\-.]02[ \\/\\-.]((19|[2-9]\\d)\\d{2}))|(29[ \\/\\-.]02[ \\/\\-.]((1[6-9]|[2-9]\\d)(0[48]|[2468][048]|[13579][26])|((16|[2468][048]|[3579][26])00))))$/g.test( string ),\n\n            dateISO8601ext = /^(((19|[2-9]\\d)\\d{2})[ \\/\\-.](0[13578]|1[02])[ \\/\\-.](0[1-9]|[12]\\d|3[01]))|(((19|[2-9]\\d)\\d{2})[ \\/\\-.](0[13456789]|1[012])[ \\/\\-.](0[1-9]|[12]\\d|30))|(((19|[2-9]\\d)\\d{2})[ \\/\\-.]02[ \\/\\-.](0[1-9]|1\\d|2[0-8]))|(((1[6-9]|[2-9]\\d)(0[48]|[2468][048]|[13579][26])|((16|[2468][048]|[3579][26])00))[ \\/\\-.]02[ \\/\\-.]29)$/g.test( string );\n\n        return dateIT || dateISO8601ext;\n    },\n    \n    email: function( string ){\n        // FROM https://emailregex.com\n        // AS FOR RFC 5322 Official Standard\n        // EMAIL MUST BE AT LEAST ( FOR EXAMPLE ):\n        // a@a.aa\n        return /^(([^<>()\\[\\]\\\\.,;:\\s@\"]+(\\.[^<>()\\[\\]\\\\.,;:\\s@\"]+)*)|(\".+\"))@((\\[[0-9]{1,3}\\.[0-9]{1,3}\\.[0-9]{1,3}\\.[0-9]{1,3}])|(([a-zA-Z\\-0-9]+\\.)+[a-zA-Z]{2,}))$/.test( string );\n    },\n    \n    fiscalCode: function( string ){\n        // http://blog.marketto.it/2016/01/regex-validazione-codice-fiscale-con-omocodia/\n        return /^(?:[B-DF-HJ-NP-TV-Z](?:[AEIOU]{2}|[AEIOU]X)|[AEIOU]{2}X|[B-DF-HJ-NP-TV-Z]{2}[A-Z]){2}[\\dLMNP-V]{2}(?:[A-EHLMPR-T](?:[04LQ][1-9MNP-V]|[1256LMRS][\\dLMNP-V])|[DHPS][37PT][0L]|[ACELMRT][37PT][01LM])(?:[A-MZ][1-9MNP-V][\\dLMNP-V]{2}|[A-M][0L](?:[\\dLMNP-V][1-9MNP-V]|[1-9MNP-V][0L]))[A-Z]$/i.test( string );\n    },\n    \n    hexColor: function( string ){\n        // HEX COLOR WITH/WITHOUT #\n        // CAN BE 3 OR 6 CHARACTERS ( fff | FFF | ffffff | FFFFFF )\n        return /^#?([a-fA-F0-9]{6}|[a-fA-F0-9]{3})$/.test( string );\n    },\n    \n    landlineNumber: function( string ){\n        // LANDLINE PREFIX:\n        // +39 | 0039 | not-set ( ALSO WITH INTERNATIONAL PREFIXES WITH 2 DIGITS )\n        // LANDLINE NUMBER MUST START WITH 0 ( AS FOR ITALIAN ONES ):\n        // 1234567890 | 12 34567890 | 123456789 | 1234 56789 ( ALSO WITH . - / AS SEPARATOR )\n        return /^((00|\\+)\\d{2}[\\-\\. ]??)??(((0[\\d]{1,4}))([\\/\\-\\. ]){0,1}([\\d, ]{5,10}))$/.test( string ); \n    },\n    \n    mobileNumber: function( string ){\n        // +39 | 0039 | 39 | not-set ( ALSO WITH ALL INTERNATIONAL PREFIXES WITH 2 DIGITS )\n        // MOBILE NUMBER MUST START WITH 3\n        // 3234567890 | 323 4567890 | 323 45 67 890 ( ALSO WITH . OR - AS SEPARATOR )\n        return /^((00|\\+)??\\d{2}[\\-\\. ]??)??3\\d{2}[\\-\\. ]??(\\d{6,7}|\\d{2}[\\-\\. ]??\\d{2}[\\-\\. ]??\\d{3})$/.test( string );\n    },\n    \n    number: function( string ){\n        // ALL NUMBERS ( INTEGERS AND FLOATING )\n        // VALID NUMBERS: 123 | 123.456 | .123                \n        return /[+-]?([0-9]*[.])?[0-9]+/.test( string );\n    },\n    \n    numberFloat: function( string ){\n        // ONLY FLOATING NUMBERS\n        // VALID NUMBERS: 123.456 | .123                \n        return /[+-]?([0-9]*[.])[0-9]+/.test( string );\n    },\n    \n    numberInteger: function( string ){\n        // ONLY INTEGER NUMBERS                \n        return /^\\d+$/.test( string );\n    },\n    \n    password: function( string ){\n        // PASSWORD ( NO SPECIAL CHARACTERS ) WITH AT LEAST:\n        // ONE DIGIT + ONE LOWERCASE + ONE UPPERCASE + MIN LENGTH OF 8 CHARACTERS\n        return /^(?=.*[0-9])(?=.*[a-z])(?=.*[A-Z])[0-9a-zA-Z]{8,}$/.test(string);\n    },\n    \n    url: function( string ){\n        // MUST NOT CONTAIN PARAMETERS:\n        // www.mysite.com/index.html         --> VALID URL\n        // www.mysite.com/index.html?v=hello --> INVALID URL\n        return /^((https?|ftp|file):\\/\\/)?([\\da-z\\.-]+)\\.([a-z\\.]{2,6})([\\/\\w \\.-]*)*\\/?$/.test( string );\n    },\n    \n    username: function( string ){\n        // USERNAME WITH LETTERS/NUMBERS/UNDERSCORE AND . - @ WITH MIN LENGTH 3 AND MAX LENGTH 24\n        //return /^[\\w\\.\\-\\@]{3,24}$/.test( string );\n        \n        // USERNAME MUST START WITH A LETTER/NUMBER/UNDERSCORE AND CAN ALSO CONTAIN . - @ WITH MIN LENGTH 3 AND MAX LENGTH\n        return /^(?=\\w)(?=[\\-\\.\\@]?)[\\w\\-\\.\\@]{3,24}$/.test( string );\n    },\n    \n    vatNumber: function( string ){\n        // VAT NUMBER CAN CONTAIN OR NOT THE 'IT' STRING AND THEN 11 NUMBERS\n        return /^(IT){0,1}[0-9]{11}$/i.test( string );\n    }\n    \n};\n\nexport const _validationRulesAttributes = {\n\n    checkbox: function( data ){\n        let isValid = data.fieldEl.checked,\n            formEl = data.fieldEl.closest('form'),\n            dataChecksEl = formEl.querySelector('[name=\"' + data.fieldEl.name + '\"][data-checks]');\n\n        if( dataChecksEl !== null ){\n            isValid = this.checks({ attrValue: dataChecksEl.getAttribute('data-checks'), fieldEl: dataChecksEl});\n        }\n\n        return isValid;\n    },\n\n    checks: function( data ){\n        try{\n            let attrValue = JSON.parse(data.attrValue),\n                fieldEl = data.fieldEl,\n                formEl = fieldEl.closest('form'),\n                checkedElLength = formEl.querySelectorAll('[name=\"' + fieldEl.name + '\"]:checked').length;\n\n            return checkedElLength >= attrValue[0] && checkedElLength <= attrValue[1];\n        } catch(e){\n            throw new Error('\"data-checks\" attribute is not a valid array!');\n        }\n    },\n\n    equalTo: function( data ){\n        let fieldEl = data.fieldEl,\n            formEl = fieldEl.closest('form'),\n            checkFromEl = formEl.querySelector( '[name=\"' + fieldEl.getAttribute('data-equal-to') + '\"]' );\n\n        return fieldEl.value === checkFromEl.value;\n    },\n    \n    exactLength: function( data ){\n        return data.fieldEl.value.length === (data.attrValue * 1);\n    },\n\n    file: function( data ){\n        let isValid = true,\n            fieldEl = data.fieldEl,\n            MIMEtype = (fieldEl.accept ? new RegExp(fieldEl.accept.replace( '*', '[^\\\\/,]+' )) : null),\n            filesList = Array.from(fieldEl.files);\n\n        filesList.forEach(function( file ){\n            let exceedMaxFileSize = data.fieldOptions.maxFileSize > 0 && (file.size/1024/1024) > data.fieldOptions.maxFileSize,\n                isAcceptedFileType = (MIMEtype !== null ? MIMEtype.test(file.type) : true);\n\n            if( exceedMaxFileSize || !isAcceptedFileType ){\n                isValid = false;\n            }\n        });\n\n        return isValid;\n    },\n\n    length: function( data ){\n        try{\n            var valueL = data.fieldEl.value.length,\n                attrValue = JSON.parse(data.attrValue);\n\n            return valueL >= attrValue[0] && valueL <= attrValue[1];\n        } catch(e){\n            throw new Error('\"data-length\" attribute is not a valid array!');\n        }\n    },\n    \n    max: function( data ){\n        var value = data.fieldEl.value * 1,\n            maxVal = data.attrValue * 1;\n        \n        return value <= maxVal;\n    },\n    \n    maxlength: function( data ){\n        return data.fieldEl.value.length <= (data.attrValue * 1);\n    },\n    \n    min: function( data ){\n        var value = data.fieldEl.value * 1,\n            minVal = data.attrValue * 1;\n        \n        return value >= minVal;\n    },\n\n    minlength: function( data ){\n        return data.fieldEl.value.length >= (data.attrValue * 1);\n    },\n\n    pattern: function( data ){\n        let fieldEl = data.fieldEl,\n            fieldPattern = fieldEl.pattern,\n            fieldRegex = new RegExp( fieldPattern );\n\n        return fieldRegex.test( fieldEl.value );\n    },\n\n    radio: function( data ){\n        let fieldEl = data.fieldEl,\n            fieldChecked = fieldEl.closest('form').querySelector( '[name=\"'+ fieldEl.name +'\"]:checked' ),\n            isValid = fieldChecked !== null && fieldChecked.value.trim().length > 0;\n\n        return isValid;\n    },\n\n    requiredFrom: function( data ){\n        let fieldEl = data.fieldEl,\n            formEl = fieldEl.closest('form'),\n            isValidValue = fieldEl.value.trim().length > 0,\n            reqMoreEl = formEl.querySelector( fieldEl.getAttribute('data-required-from') ),\n            checkedEl = formEl.querySelector( '[name=\"'+ reqMoreEl.name +'\"]:checked' );\n\n        if( !reqMoreEl.checked ){\n            return true;\n        }\n        \n        return ((reqMoreEl.required && reqMoreEl.checked) ? isValidValue : (reqMoreEl.required ? checkedEl !== null : true));\n    }\n    \n};","/**! formJS v2.3.1 | Valerio Di Punzio (@SimplySayHi) | https://valeriodipunzio.com/plugins/formJS/ | https://github.com/SimplySayHi/formJS | MIT license */\n\nimport { _checkFormEl, _isNodeList, _mergeObjects } from './modules/helper.js';\nimport { _callbackFns }         from './modules/listenerCallbacks.js';\n\nimport { options }              from './modules/options.js';\nimport { validationRules }      from './modules/validationRules.js';\n\nimport { _formStartup }         from './modules/formStartup.js';\n\nimport { destroy }              from './modules/destroy.js';\nimport { getFormJSON }          from './modules/getFormJSON.js';\nimport { init }                 from './modules/init.js';\nimport { isValidField }         from './modules/isValidField.js';\nimport { isValidForm }          from './modules/isValidForm.js';\nimport { submit }               from './modules/submit.js';\n\nconst version = '2.3.1';\nconst _listenerCallbacks = new WeakMap();\n\nclass Form {\n    constructor( formEl, optionsObj = {} ){\n        let self = this,\n            argsL = arguments.length,\n            checkFormEl = _checkFormEl(formEl);\n\n        if( argsL === 0 || (argsL > 0 && !formEl) ){ throw new Error('First argument \"formEl\" is missing or falsy!'); }\n        if( _isNodeList(formEl) ){ throw new Error('First argument \"formEl\" must be a single DOM node or a form CSS selector, not a NodeList!'); }\n        if( !checkFormEl.result ){ throw new Error('First argument \"formEl\" is not a DOM node nor a form CSS selector!'); }\n\n        self.isInitialized = false;\n        self.formEl = checkFormEl.element;\n        self.options = _mergeObjects({}, optionsObj, Form.prototype.options);\n\n        _listenerCallbacks.set(self, {\n            charCount:          _callbackFns.charCount,\n            dataTypeNumber:     _callbackFns.dataTypeNumber,\n            keypressMaxlength:  _callbackFns.keypressMaxlength,\n            pastePrevent:       _callbackFns.pastePrevent.bind(self),\n            submit:             _callbackFns.submit.bind(self),\n            validation:         _callbackFns.validation.bind(self)\n        });\n\n        _formStartup.call( self );\n    }\n\n    get listenerCallbacks(){\n        return _listenerCallbacks.get(this);\n    }\n\n    destroy(){\n        destroy.call(this);\n    }\n    \n    getFormJSON( customFn ){\n        return getFormJSON.call(this, customFn);\n    }\n\n    init(){\n        const self = this;\n\n        init.call(self);\n        self.isInitialized = true;\n\n        return self;\n    }\n    \n    isValidField( fieldEl, fieldOptions ){\n        return isValidField.call(this, fieldEl, fieldOptions);\n    }\n    \n    isValidForm( optionsObj ){\n        return isValidForm.call(this, optionsObj);\n    }\n\n    submit( optionsObj, event ){\n        submit.call(this, optionsObj, event);\n    }\n    \n    static addValidationRules( rulesObj ){\n        this.prototype.validationRules = _mergeObjects({}, rulesObj, this.prototype.validationRules);\n    }\n    \n    static setOptions( optionsObj ){\n        this.prototype.options = _mergeObjects({}, optionsObj, this.prototype.options);\n    }\n}\n\nForm.prototype.version = version;\nForm.prototype.validationRules = validationRules;\nForm.prototype.options = options;\n\nif( !window.Form ){ window.Form = Form; }\nif( !window.FormJS ) { window.FormJS = Form; }\n","import { _executeCallback, _fieldsStringSelector } from './helper.js';\n\nexport const _callbackFns = {\n\n    charCount: function( eventOrField ){\n        const fieldEl = eventOrField.target || eventOrField;\n\n        if( fieldEl.matches( '[data-char-count]' ) ){\n            let containerEL = fieldEl.closest('[data-formjs-question]');\n\n            if( containerEL && containerEL.querySelector('[data-char-length]') ){\n                let usedChars = fieldEl.value.length;\n                containerEL.querySelector('[data-char-length]').textContent = usedChars;\n            }\n        }\n    },\n\n    dataTypeNumber: function( event ){\n        const fieldEl = event.target;\n        \n        if( fieldEl.matches('[data-type=\"number\"]') ){\n            let fieldValue = fieldEl.value,\n                hasInvalidChars = /[^\\d.,+\\-]/.test(fieldValue);\n            \n            if( hasInvalidChars ){\n                event.stopImmediatePropagation();\n                let valueReplaced = fieldValue.replace(/[^\\d.,+\\-]/g, '');\n                fieldEl.value = valueReplaced;\n            }\n        }\n    },\n\n    keypressMaxlength: function( event ){\n        const fieldEl = event.target;\n        \n        if( fieldEl.matches( '[maxlength]' ) ){\n            const maxLength = fieldEl.maxLength * 1,\n                keyPressed = event.which || event.keyCode,\n                allowedKeys = [8, 37, 38, 39, 46];\n\n            if( fieldEl.value.length >= maxLength && allowedKeys.indexOf(keyPressed) === -1 ){\n                return false;\n            }\n        }\n    },\n\n    pastePrevent: function( event ){\n        const self = this,\n              fieldEl = event.target;\n        let fieldOptions = self.options.fieldOptions;\n\n        if( fieldEl.matches( fieldOptions.preventPasteFields ) ){\n            \n            event.preventDefault();\n            _executeCallback.call( self, fieldOptions.onPastePrevented, fieldEl );\n\n        }\n    },\n\n    submit: function( event ){\n        this.submit( {}, event );\n    },\n\n    validation: function( event ){\n        const self = this,\n            eventName = event.type,\n            fieldEl = event.target;\n\n        if( fieldEl.matches( _fieldsStringSelector ) ){\n            const isFieldForChangeEvent = fieldEl.matches( 'select, [type=\"radio\"], [type=\"checkbox\"], [type=\"file\"]' ),\n                isRadio = fieldEl.type === 'radio',\n                isReqFrom = fieldEl.matches('[data-required-from]'),\n                isReqMore = fieldEl.matches('[data-require-more]'),\n                isValidValue = fieldEl.value.trim().length > 0;\n\n            // HANDLE data-require-more FIELDS\n            if( isRadio && eventName === 'change' ){\n                let findReqMoreEl = (isReqMore ? fieldEl : self.formEl.querySelector('[name=\"'+ fieldEl.name +'\"][data-require-more]')),\n                    findReqFromEl = (findReqMoreEl !== null ? self.formEl.querySelector('[data-required-from=\"#'+ findReqMoreEl.id +'\"]') : null);\n\n                if( isReqMore ){\n\n                    if( findReqFromEl !== null ){\n                        findReqFromEl.required = true;\n\n                        if( self.options.fieldOptions.focusOnRelated ){\n                            findReqFromEl.focus();\n                        }\n                    }\n\n                } else if( findReqMoreEl !== null ){\n\n                    if( findReqFromEl !== null ){\n                        findReqFromEl.required = false;\n                        findReqFromEl.value = '';\n                    }\n\n                }\n            }\n\n            // HANDLE data-required-from FIELDS\n            if( isReqFrom ){\n                if( isValidValue ){\n                    let reqMoreEl = self.formEl.querySelector( fieldEl.getAttribute('data-required-from') );\n\n                    reqMoreEl.checked = true;\n\n                    if( reqMoreEl.required ){\n                        fieldEl.required = true;\n                    }\n                }\n            }\n            \n            if(\n                (isFieldForChangeEvent && eventName === 'change') ||\n                (!isFieldForChangeEvent && eventName !== 'change')\n            ){\n\n                const validationResult = self.isValidField( fieldEl ),\n                    callbackData = [ { field: fieldEl, result: validationResult} ];\n\n                _executeCallback.call( self, self.options.fieldOptions.onValidation, callbackData );\n\n            }\n        }\n    }\n\n};","export const options = {\n    fieldOptions: {\n        checkDirtyField:        false,\n        cssClasses: {\n            dirty:              'is-dirty',\n            error:              'has-error',\n            valid:              'is-valid'\n        },\n        focusOnRelated:         true,\n        handleFileUpload:       true,\n        handleValidation:       true,\n        maxFileSize:            10,\n        onPastePrevented:       null,\n        onValidation:           null,\n        preventPasteFields:     '[type=\"password\"], [data-equal-to]',\n        skipUIfeedback:         false,\n        strictHtmlValidation:   true,\n        validateOnEvents:       'input change'\n    },\n    formOptions: {\n        ajaxOptions:            {\n            async:              true,\n            cache:              false,\n            contentType:        'application/x-www-form-urlencoded; charset=UTF-8',\n            headers: {\n                                'X-Requested-With': 'XMLHttpRequest'\n            },\n            method:             'POST',\n            timeout:            0,\n            url:                location.href\n        },\n        ajaxSubmit:             true,\n        beforeSend:             null,\n        getFormJSON:            null,\n        handleSubmit:           true,\n        onSubmitComplete:       null,\n        onSubmitError:          null,\n        onSubmitSuccess:        null\n    }\n}","export function _formStartup(){\n    const self = this,\n          formEl = self.formEl;\n\n    if( !formEl || !formEl.matches('[novalidate]') ){ return false; }\n    \n    let fieldOptions = self.options.fieldOptions,\n        formOptions = self.options.formOptions;\n\n    // HANDLE FIELD VALIDATION\n    if( fieldOptions.handleValidation ){\n        \n        // VALIDATION WITH ATTRIBUTES LIKE HTML ONES ( ALSO FOR BUG FIXING, EG: maxlength IN ANDROID )\n        if( fieldOptions.strictHtmlValidation ){\n            \n            // maxlength\n            // BUGGY IN ANDROID BROWSERS\n            formEl.addEventListener('keypress', self.listenerCallbacks.keypressMaxlength, false);\n\n            // data-type=\"number\"\n            // SINCE VALIDATING type=\"number\" WITH NON NUMERIC CHARS WILL RETURN EMPTY STRING IN SOME BROWSERS ( EG: FIREFOX )\n            formEl.addEventListener('input', self.listenerCallbacks.dataTypeNumber, false);\n            \n        }\n        \n        if( fieldOptions.preventPasteFields && formEl.querySelectorAll( fieldOptions.preventPasteFields ).length ){\n            // INIT EVENT LISTENER FOR \"PASTE\" EVENT TO PREVENT IT ON SPECIFIED FIELDS\n            formEl.addEventListener('paste', self.listenerCallbacks.pastePrevent, false);\n        }\n\n        if( formEl.querySelectorAll('[data-char-count]').length > 0 ){\n            // INIT EVENT LISTENER FOR FIELDS WITH \"data-char-count\" ATTRIBUTE\n            formEl.addEventListener('input', self.listenerCallbacks.charCount, false);\n        }\n\n        // INIT EVENTS LISTENER ( AS IN fieldOptions )\n        fieldOptions.validateOnEvents.split(' ').forEach(function( eventName ){\n            let useCapturing = (eventName === 'blur' ? true : false);\n            formEl.addEventListener(eventName, self.listenerCallbacks.validation, useCapturing);\n        });\n\n    }\n    \n    // HANDLE FORM SUBMIT\n    if( formOptions.handleSubmit ){\n        // INIT FORM SUBMIT ( DEFAULT AND AJAX )\n        formEl.addEventListener('submit', self.listenerCallbacks.submit);\n\n        if( formOptions.ajaxSubmit ){\n            if( formEl.getAttribute('enctype') ){\n                formOptions.ajaxOptions.contentType = formEl.getAttribute('enctype');\n            }\n\n            if( formEl.getAttribute('method') ){\n                formOptions.ajaxOptions.method = formEl.getAttribute('method').toUpperCase();\n            }\n\n            if( formEl.getAttribute('action') ){\n                formOptions.ajaxOptions.url = formEl.getAttribute('action');\n            }\n        }\n    }\n\n}","export function destroy(){\n    const self = this,\n          formEl = self.formEl,\n          validationListenerNames = self.options.fieldOptions.validateOnEvents;\n\n    if( formEl.querySelectorAll('[data-char-count]').length > 0 ){\n        formEl.removeEventListener('input', self.listenerCallbacks.charCount, false);\n    }\n\n    if( self.options.fieldOptions.strictHtmlValidation ){\n        formEl.removeEventListener('keypress', self.listenerCallbacks.keypressMaxlength, false);\n        formEl.removeEventListener('input', self.listenerCallbacks.dataTypeNumber, false);\n    }\n\n    if( self.options.fieldOptions.preventPasteFields ){\n        formEl.removeEventListener('paste', self.listenerCallbacks.pastePrevent, false);\n    }\n\n    if( self.options.formOptions.handleSubmit ){\n        formEl.removeEventListener('submit', self.listenerCallbacks.submit);\n    }\n\n    validationListenerNames.split(' ').forEach(function( eventName ){\n        let useCapturing = (eventName === 'blur' ? true : false);\n        formEl.removeEventListener(eventName, self.listenerCallbacks.validation, useCapturing);\n    });\n}","export function getFormJSON( customFn = this.options.formOptions.getFormJSON ){\n    let formData = {},\n        self = this,\n        formEl = self.formEl,\n        formFieldsEl = formEl.querySelectorAll('input, select, textarea'),\n        excludeSelectors = ':not([type=\"reset\"]):not([type=\"submit\"]):not([type=\"button\"]):not([type=\"file\"]):not([data-exclude-json])',\n        filteredFields = Array.from(formFieldsEl).filter(elem => elem.matches(excludeSelectors) );\n    \n    if( typeof customFn === 'function' ){\n\n        formData = customFn.call( self, filteredFields );\n\n    } else {\n\n        filteredFields.forEach(function( fieldEl ){\n            let isCheckbox = fieldEl.type === 'checkbox',\n                isRadio = fieldEl.type === 'radio',\n                isSelect = fieldEl.matches('select'),\n                name = fieldEl.name,\n                value = fieldEl.value;\n                         \n            if( isCheckbox ) {\n                \n                value = fieldEl.checked;\n                let checkboxes = Array.from( formEl.querySelectorAll('[name=\"'+ name +'\"]') );\n                if( checkboxes.length > 1 ){\n\n                    value = [];\n                    let checkedElems = checkboxes.filter(field => field.checked);\n                    checkedElems.forEach(fieldEl => {\n                        value.push( fieldEl.value );\n                    });\n\n                }\n                    \n            } else if( isRadio ){\n                \n                let checkedRadio = formEl.querySelector('[name=\"'+ name +'\"]:checked');\n                value = (checkedRadio === null ? null : checkedRadio.value);\n                \n            } else if( isSelect ){\n\n                let selectedOpts = Array.from( fieldEl.options ).filter(option => option.selected);\n                if( selectedOpts.length > 1 ){\n\n                    value = [];\n                    selectedOpts.forEach(fieldEl => {\n                        value.push( fieldEl.value );\n                    });\n\n                }\n            }\n\n            formData[ name ] = value;\n        });\n\n    }\n    \n    return formData;\n}","import { _executeCallback, _fieldsStringSelector } from './helper.js';\n\nexport const init = function(){\n    const self = this,\n          fieldOptions = self.options.fieldOptions,\n          formEl = self.formEl,\n          formFields = formEl.querySelectorAll( _fieldsStringSelector );\n\n    Array.from( formFields ).forEach(function( fieldEl ){\n        const containerEl = fieldEl.closest('[data-formjs-question]'),\n              isCheckboxOrRadio = (fieldEl.type === 'checkbox' || fieldEl.type === 'radio'),\n              fieldChecked = formEl.querySelector('[name=\"' + fieldEl.name + '\"]:checked'),\n              isReqFrom = fieldEl.matches('[data-required-from]'),\n              reqMoreEl = (isReqFrom ? formEl.querySelector(fieldEl.getAttribute('data-required-from')) : null);\n        \n        if( !isCheckboxOrRadio ){\n            if( fieldEl.matches('[data-char-count]') ){\n                // PRINT RELATED MAX LENGTH IN HTML\n                if( fieldEl.matches('[maxlength]') && containerEl.querySelector('[data-char-maxlength]') ){\n                    let maxlength = fieldEl.getAttribute('maxlength');\n                    containerEl.querySelector('[data-char-maxlength]').textContent = maxlength;\n                }\n\n                // PRINT CHAR COUNT IN HTML\n                self.listenerCallbacks.charCount.call( null, fieldEl );\n            }\n\n            // PRINT MAX FILE SIZE FOR INPUTS WITH type=\"file\"\n            if( fieldEl.type === 'file' && fieldOptions.maxFileSize > 0 ){\n                if( containerEl && containerEl.querySelector('[data-max-file-size]') ){\n                    containerEl.querySelector('[data-max-file-size]').textContent = fieldOptions.maxFileSize;\n                }\n            }\n        }\n        \n        // VALIDATE FIELDS WITH SELECTED/INSERTED VALUE\n        if(\n            (!isCheckboxOrRadio && fieldEl.value) || \n            (isCheckboxOrRadio && fieldChecked !== null) ||\n            (isReqFrom && reqMoreEl.checked)\n        ){\n\n            if( isCheckboxOrRadio ){\n                fieldEl = fieldChecked;\n            }\n\n            const validationResult = self.isValidField( fieldEl ),\n                  callbackData = [ { field: fieldEl, result: validationResult} ];\n\n            _executeCallback.call( self, fieldOptions.onValidation, callbackData );\n\n        }\n    });\n}","import { _addClass, _mergeObjects, _removeClass } from './helper.js';\n\nimport { _isValid }             from './isValid.js';\nimport { _checkDirtyField }     from './checkDirtyField.js';\n\nexport function isValidField( fieldElem, fieldOptionsObj = {} ){\n    if( !fieldElem ){ return false; }\n\n    const self = this,\n          fieldEl = (typeof fieldElem === 'string' ? self.formEl.querySelector(fieldElem) : fieldElem);\n\n    let options =           _mergeObjects( {}, fieldOptionsObj, self.options.fieldOptions ),\n        \n        isValidValue =      fieldEl.value.trim().length > 0,\n        \n        isRequired =        fieldEl.required,\n        isReqFrom =         fieldEl.matches('[data-required-from]'),\n        reqMoreEl =         self.formEl.querySelector( fieldEl.getAttribute('data-required-from') ),\n        isValidateIfFilled =fieldEl.matches('[data-validate-if-filled]'),\n        isValid =           isValidValue,\n        \n        containerEl =       fieldEl.closest('[data-formjs-question]');\n    \n    if(\n        (!isRequired && !isValidateIfFilled && !isReqFrom) || \n        (isValidateIfFilled && !isValidValue) ||\n        (isReqFrom && !isRequired && !reqMoreEl.checked)\n    ){\n\n        isValid = true;\n       \n    } else {\n        \n        isValid =  _isValid.call( self, fieldEl, options );\n        \n    }\n\n    if( options.checkDirtyField ){\n        _checkDirtyField( fieldEl, options.cssClasses.dirty );\n    }\n    \n    // VALIDATION VISUAL FEEDBACK\n    if( containerEl !== null && !options.skipUIfeedback ){\n        if( isValid ){\n\n            if( !isReqFrom || (isReqFrom && reqMoreEl.checked) ){\n                _removeClass( containerEl, options.cssClasses.error );\n                _addClass( containerEl, options.cssClasses.valid );\n            }\n\n        } else {\n\n            _removeClass( containerEl, options.cssClasses.valid );\n            _addClass( containerEl, options.cssClasses.error );\n\n        }\n    }\n    \n    return isValid;\n}","import { _toCamelCase } from './helper.js';\n\nimport { _validationRulesAttributes } from './validationRules.js';\n\nexport function _isValid( fieldEl, fieldOptions = {} ){\n    const self = this,\n          fieldType = ( fieldEl.matches('[data-subtype]') ? _toCamelCase( fieldEl.getAttribute('data-subtype') ) : fieldEl.type ),\n          fieldValue = fieldEl.value,\n          isValidValue = fieldValue.trim().length > 0,\n          // ALPHABETICAL REVERSE ORDER\n          fieldAttributes = Array.from(fieldEl.attributes).sort(function(a,b){ return a.name < b.name });\n         \n    let attrValidations = [],\n        attrValidationsResult = true;\n\n    // SPECIFIC VALIDATIONS FOR _validationRulesAttributes\n    fieldAttributes.forEach(function(attr){\n        // FOR data-* ATTRIBUTES -> REMOVE \"data-\" AND TRANSFORM TO CAMELCASE\n        let attrName = _toCamelCase( attr.name.replace('data-', '') ),\n            attrValue = attr.value,\n            isTypeValueWithFn = attrName === 'type' && typeof _validationRulesAttributes[attrValue] === 'function',\n            isAttrNameWithFn = typeof _validationRulesAttributes[attrName] === 'function';\n\n        if( isTypeValueWithFn || isAttrNameWithFn ){\n\n            let extraValObj = {\n                    attrName: (isTypeValueWithFn ? attrValue : attrName),\n                    attrValue: attrValue,\n                    fieldEl,\n                    fieldOptions\n                };\n\n            if( isTypeValueWithFn || attrName === 'requiredFrom' ){\n                // THESE VALIDATIONS MUST RUN BEFORE ALL OTHERS\n                attrValidations.unshift( extraValObj );\n            } else {\n                attrValidations.push( extraValObj );\n            }\n\n        }\n    });\n\n    attrValidations.forEach(function(item){\n        let extraVal = _validationRulesAttributes[item.attrName]( item, fieldEl );\n        if( !extraVal ){ attrValidationsResult = false; }\n    });\n\n    attrValidationsResult = attrValidations.length > 0 ? (attrValidationsResult && isValidValue) : isValidValue; \n    \n    return (\n        typeof self.validationRules[fieldType] === 'function' ? \n        self.validationRules[fieldType]( fieldValue, fieldEl ) && attrValidationsResult : \n        attrValidationsResult\n    );\n}","import { _addClass, _isNodeList, _removeClass } from './helper.js';\n\nexport function _checkDirtyField( fields, cssClasses = '' ){ \n    var fields = (_isNodeList(fields) ? Array.from( fields ) : [fields]);\n    \n    fields.forEach(function(fieldEl){\n        if( fieldEl.type !== 'checkbox' && fieldEl.type !== 'radio' ){\n            let containerEl = fieldEl.closest('[data-formjs-question]') || fieldEl;\n\n            if( fieldEl.value ){\n                \n                _addClass( containerEl, cssClasses );\n                \n            } else {\n                \n                _removeClass( containerEl, cssClasses );\n                \n            }\n        }\n    });\n}","import { _fieldsStringSelector, _mergeObjects } from './helper.js';\n\nexport function isValidForm( options = {} ){\n    const self = this,\n          formEl = self.formEl;\n\n    if( formEl === null || !formEl.matches('[novalidate]') ){ return false; }\n    \n    var fieldOptions = _mergeObjects( {}, options.fieldOptions || {}, self.options.fieldOptions ),\n        obj = {\n            fields: [],\n            result: true\n        },\n        currentFieldName = '',\n        currentFieldType = '';\n    \n    if( typeof fieldOptions.focusOnRelated === 'undefined' ){\n        fieldOptions.focusOnRelated = false;\n    }\n    \n    Array.from( formEl.querySelectorAll(_fieldsStringSelector) ).forEach(function( fieldEl ){\n        let name = fieldEl.name,\n            type = fieldEl.type,\n            fieldData = {\n                field: fieldEl,\n                result: true\n            };\n        \n        if( (name === currentFieldName && type === currentFieldType) ){ return true; }\n        \n        if( !fieldEl.matches('[data-required-from]') ){\n            currentFieldName = name;\n            currentFieldType = type;\n        }\n        \n        const fieldResult = self.isValidField( fieldEl, fieldOptions );\n        fieldData.result = fieldResult;\n\n        if( !fieldResult ){\n            obj.result = false;\n        }\n        \n        obj.fields.push( fieldData );\n    });\n    \n    return obj;\n}","import { _executeCallback, _isPlainObject, _mergeObjects } from './helper.js';\n\nimport { _xhrCall } from './xhrCall.js';\n\nexport function submit( options = {}, event = null ){\n    const self = this,\n          formEl = self.formEl,\n          eventPreventDefault = ( enableBtn = true ) => {\n              if( btnEl && enableBtn ){ btnEl.disabled = false; }\n              if( event ){ event.preventDefault(); }\n          };\n    \n    options.fieldOptions = _mergeObjects( {}, (options.fieldOptions || {}), self.options.fieldOptions );\n    options.formOptions = _mergeObjects( {}, (options.formOptions || {}), self.options.formOptions );\n    \n    const handleValidation = options.fieldOptions.handleValidation,\n          formValidation = (handleValidation ? self.isValidForm( options ) : { result: true });\n\n    const btnEl = formEl.querySelector('[type=\"submit\"]'),\n          isAjaxForm = options.formOptions.ajaxSubmit;\n    \n    if( handleValidation ){\n        _executeCallback.call( self, options.fieldOptions.onValidation, formValidation.fields );\n    }\n    \n    let formDataJSON = (isAjaxForm ? self.getFormJSON() : null),\n        callbacksBeforeSend = [],\n        beforeSendOpt = options.formOptions.beforeSend;\n\n    if( typeof beforeSendOpt === 'function' || Array.isArray(beforeSendOpt) ){\n        let beforeSendData = {\n                stopExecution: false\n            },\n            stopCallbackLoop = false;\n\n        if( formDataJSON ){\n            beforeSendData.formData = formDataJSON;\n        }\n\n        if( typeof beforeSendOpt === 'function' ){\n            callbacksBeforeSend.push( beforeSendOpt );\n        } else if( Array.isArray(beforeSendOpt) ) {\n            callbacksBeforeSend = beforeSendOpt;\n        }\n\n        callbacksBeforeSend.forEach(function(cbFn){\n            if( !stopCallbackLoop ){\n                let beforeSendFn = cbFn.call( self, beforeSendData );\n                \n                if( _isPlainObject(beforeSendFn) ){\n                    formDataJSON = beforeSendFn.formData || formDataJSON;\n                    if( beforeSendFn.stopExecution ){\n                        stopCallbackLoop = true;\n                    }\n                }\n            }\n        });\n\n        if( stopCallbackLoop ){\n            eventPreventDefault();\n            return false;\n        }\n    }\n\n    if( !formValidation.result || (btnEl && btnEl.disabled) ){\n        eventPreventDefault();\n        return false;\n    }\n\n    if( btnEl ){\n        btnEl.disabled = true;\n    }\n    \n    if( isAjaxForm ){\n\n        // AJAX FORM SUBMIT\n        eventPreventDefault(false);\n        _xhrCall.call( self, formDataJSON );\n\n    } else if( !event ){\n\n        // TRIGGER SUBMIT EVENT\n        let submitEvent = new Event('submit', {'bubbles': true, 'cancelable': true});\n        formEl.dispatchEvent(submitEvent);\n\n    }\n}","import { _executeCallback, _mergeObjects, _serialize } from './helper.js';\n\nexport function _xhrCall( formDataJSON ){\n    let self = this,\n        formEl = self.formEl,\n        fieldOptions = self.options.fieldOptions,\n        formOptions = self.options.formOptions,\n        btnEl = formEl.querySelector('[type=\"submit\"]'),\n        timeoutTimer,\n        xhrOptions = _mergeObjects( {}, formOptions.ajaxOptions );\n\n    xhrOptions.data = formDataJSON;\n    \n    if( xhrOptions.contentType === 'multipart/form-data' && fieldOptions.handleFileUpload ){\n        let formDataMultipart = new FormData();\n        \n        for(let key in xhrOptions.data){\n            formDataMultipart.append( key, xhrOptions.data[key] );\n        }\n        \n        Array.from( formEl.querySelectorAll('[type=\"file\"]') ).forEach(function( field ){\n            Array.from(field.files).forEach(function( file, idx ){\n                let name = field.name+'['+ idx +']';\n                formDataMultipart.append( name, file, file.name );\n            });\n        });\n        \n        xhrOptions.data = formDataMultipart;\n    }\n    \n    let XHR = new XMLHttpRequest(),\n        parseResponse = function( xhr ){\n            let data = xhr.responseText,\n                getJSON = function(){\n                    try{\n                        let obj = JSON.parse(data);\n                        return obj;\n                    } catch(e){\n                        return false;\n                    }\n                },\n                getXML_HTML = function(){\n                    try{\n                        let isXML = xhr.responseXML !== null,\n                            obj = (isXML ? new DOMParser().parseFromString(data, 'text/xml') : data);\n                        return obj;\n                    } catch(e){\n                        return false;\n                    }\n                };\n            \n            return (getJSON() || getXML_HTML() || data);\n        },\n        loadendFn = function(e) {\n            let xhr = e.target,\n                responseData = parseResponse(xhr);\n\n            let readyStateOK = xhr.readyState === 4,\n                statusOK = xhr.status === 200,\n                ajaxData = {\n                    dataOrXHR:      ( readyStateOK && statusOK ? responseData   : xhr           ),\n                    status:         ( readyStateOK && statusOK ? 'success'      : 'error'       ),\n                    XHRorResponse:  ( readyStateOK && statusOK ? xhr            : responseData  )\n                };\n            \n            if( timeoutTimer ){\n                window.clearTimeout( timeoutTimer );\n            }\n\n            btnEl.disabled = false;\n\n            _executeCallback.call( self, formOptions.onSubmitComplete, ajaxData );\n        },\n        loadFn = function(e) {\n            let xhr = e.target;\n\n            if( xhr.status === 200 ){\n                let responseData = parseResponse(xhr),\n                    ajaxData = { data: responseData, status: 'success', response: xhr };\n\n                _executeCallback.call( self, formOptions.onSubmitSuccess, ajaxData );\n            } else {\n                errorFn(e);\n            }\n        },\n        errorFn = function(e) {\n            let xhr = e.target,\n                ajaxData = { errorThrown: xhr.statusText, status: 'error', response: xhr };\n\n            _executeCallback.call( self, formOptions.onSubmitError, ajaxData );\n        };\n    \n    XHR.addEventListener('loadend', loadendFn,  false);\n    XHR.addEventListener('load',    loadFn,     false);\n    XHR.addEventListener('error',   errorFn,    false);\n    \n    if( xhrOptions.method === 'GET' ){\n        xhrOptions.url += ( /\\?/.test(xhrOptions.url) ? '&' : '?' ) + _serialize( xhrOptions.data );\n        if( xhrOptions.cache === false ){\n            xhrOptions.url +=  (/\\&/.test(xhrOptions.url) ? '&' : '') + '_=' + (new Date().getTime());\n        }\n    }\n    \n    XHR.open(xhrOptions.method, xhrOptions.url, xhrOptions.async);\n\n    if ( xhrOptions.xhrFields ) {\n        for ( let i in xhrOptions.xhrFields ) {\n            XHR[ i ] = xhrOptions.xhrFields[ i ];\n        }\n    }\n\n    if ( xhrOptions.mimeType && XHR.overrideMimeType ) {\n        XHR.overrideMimeType( xhrOptions.mimeType );\n    }\n    \n    if( xhrOptions.data && xhrOptions.contentType !== 'multipart/form-data' ){\n        XHR.setRequestHeader('Content-Type', xhrOptions.contentType);\n    }\n    \n    for( let h in xhrOptions.headers ){\n        XHR.setRequestHeader( h, xhrOptions.headers[h] );\n    }\n    \n    XHR.send( (xhrOptions.method === 'GET' ? null : xhrOptions.data) );\n\n    if ( xhrOptions.async && xhrOptions.timeout > 0 ) {\n        timeoutTimer = window.setTimeout(function() {\n            XHR.abort();\n        }, xhrOptions.timeout);\n    }\n    \n}"],"sourceRoot":""}