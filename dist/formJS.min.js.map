{"version":3,"sources":["webpack:///webpack/bootstrap","webpack:///./src/modules/helper.js","webpack:///./src/modules/validationRules.js","webpack:///./src/index.js","webpack:///./src/modules/listenerCallbacks.js","webpack:///./src/modules/optionsUtils.js","webpack:///./src/modules/options.js","webpack:///./src/modules/formStartup.js","webpack:///./src/modules/destroy.js","webpack:///./src/modules/getFormJSON.js","webpack:///./src/modules/init.js","webpack:///./src/modules/isValidField.js","webpack:///./src/modules/isValid.js","webpack:///./src/modules/checkDirtyField.js","webpack:///./src/modules/isValidForm.js","webpack:///./src/modules/submit.js","webpack:///./src/modules/xhrCall.js"],"names":["installedModules","__webpack_require__","moduleId","exports","module","i","l","modules","call","m","c","d","name","getter","o","Object","defineProperty","enumerable","get","r","Symbol","toStringTag","value","t","mode","__esModule","ns","create","key","bind","n","default","object","property","prototype","hasOwnProperty","p","s","e","iterator","constructor","_isDOMNode","_fieldsStringSelector","_addClass","element","cssClasses","split","forEach","className","classList","add","_executeCallback","callbackOption","callbackData","self","this","callbackFnList","push","Array","isArray","cbFn","node","Element","isPrototypeOf","_isFieldForChangeEvent","fieldEl","matches","_isNodeList","nodeList","NodeList","_isPlainObject","toString","_checkFormEl","formEl","isString","_typeof","isFormSelector","document","querySelector","tagName","toLowerCase","result","_mergeObjects","out","arguments","length","obj","isObject","concat","slice","_removeClass","remove","_serialize","keys","reduce","a","k","encodeURIComponent","join","_toCamelCase","string","replace","all","letter","toUpperCase","validationRules","cap","test","date","dateIT","dateISO8601ext","email","fiscalCode","hexColor","landlineNumber","mobileNumber","number","numberFloat","numberInteger","password","url","username","vatNumber","_validationRulesAttributes","checkbox","data","isValid","checked","dataChecksEl","closest","checks","attrValue","getAttribute","JSON","parse","checkedElLength","querySelectorAll","Error","equalTo","checkFromEl","exactLength","file","MIMEtype","accept","RegExp","from","files","exceedMaxFileSize","fieldOptions","maxFileSize","size","isAcceptedFileType","type","valueL","max","maxlength","min","minlength","pattern","fieldPattern","radio","fieldChecked","trim","requiredFrom","isValidValue","reqMoreEl","checkedEl","required","_helper","_listenerCallbacks2","_optionsUtils","_options","_validationRules","_formStartup2","_destroy2","_getFormJSON2","_init2","_isValidField2","_isValidForm2","_submit2","_listenerCallbacks","WeakMap","Form","optionsObj","TypeError","argsL","checkFormEl","options","set","charCount","_callbackFns","dataTypeNumber","keypressMaxlength","pastePrevent","submit","validation","_formStartup","destroy","customFn","getFormJSON","init","isValidField","isValidForm","event","rulesObj","isInitialized","version","_setCallbackFunctionsInOptions","window","FormJS","eventOrField","target","containerEL","usedChars","textContent","fieldValue","stopImmediatePropagation","valueReplaced","maxLength","keyPressed","which","keyCode","indexOf","preventPasteFields","preventDefault","onPastePrevented","eventName","isFieldForChangeEvent","isRadio","isReqFrom","isReqMore","findReqMoreEl","findReqFromEl","id","focusOnRelated","focus","field","onValidation","callbacks","formOptions","_loop","opt","fnName","fnInOptions","fnList","checkDirtyField","dirty","error","valid","handleFileUpload","handleValidation","skipUIfeedback","strictHtmlValidation","validateOnEvents","ajaxOptions","async","cache","contentType","headers","X-Requested-With","method","timeout","location","href","ajaxSubmit","beforeSend","handleSubmit","onSubmitComplete","onSubmitError","onSubmitSuccess","addEventListener","listenerCallbacks","useCapturing","validationListenerNames","removeEventListener","formData","formFieldsEl","filteredFields","filter","elem","isCheckbox","isSelect","checkboxes","checkedRadio","selectedOpts","option","selected","formFields","currentFieldName","currentFieldType","isCheckboxOrRadio","isFieldForChangeEventBoolean","fakeEventObj","fieldElem","fieldOptionsObj","isRequired","isValidateIfFilled","containerEl","_isValid","_checkDirtyField2","_checkDirtyField","_isValid2","fieldType","attrValidations","attrValidationsResult","attributes","sort","b","attr","attrName","isTypeValueWithFn","isAttrNameWithFn","extraValObj","unshift","item","fields","fieldData","fieldResult","btnEl","eventPreventDefault","enableBtn","disabled","isAjaxForm","formValidation","formDataJSON","callbacksBeforeSend","beforeSendOpt","beforeSendData","stopExecution","stopCallbackLoop","beforeSendFn","_xhrCall","submitEvent","Event","bubbles","cancelable","dispatchEvent","_xhrCall2","timeoutTimer","xhrOptions","formDataMultipart","FormData","append","idx","XHR","XMLHttpRequest","parseResponse","xhr","responseText","responseXML","isXML","DOMParser","parseFromString","errorFn","ajaxData","errorThrown","statusText","status","response","responseData","readyStateOK","readyState","statusOK","dataOrXHR","XHRorResponse","clearTimeout","Date","getTime","open","xhrFields","h","mimeType","overrideMimeType","setRequestHeader","send","setTimeout","abort"],"mappings":"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","file":"formJS.min.js","sourcesContent":[" \t// The module cache\n \tvar installedModules = {};\n\n \t// The require function\n \tfunction __webpack_require__(moduleId) {\n\n \t\t// Check if module is in cache\n \t\tif(installedModules[moduleId]) {\n \t\t\treturn installedModules[moduleId].exports;\n \t\t}\n \t\t// Create a new module (and put it into the cache)\n \t\tvar module = installedModules[moduleId] = {\n \t\t\ti: moduleId,\n \t\t\tl: false,\n \t\t\texports: {}\n \t\t};\n\n \t\t// Execute the module function\n \t\tmodules[moduleId].call(module.exports, module, module.exports, __webpack_require__);\n\n \t\t// Flag the module as loaded\n \t\tmodule.l = true;\n\n \t\t// Return the exports of the module\n \t\treturn module.exports;\n \t}\n\n\n \t// expose the modules object (__webpack_modules__)\n \t__webpack_require__.m = modules;\n\n \t// expose the module cache\n \t__webpack_require__.c = installedModules;\n\n \t// define getter function for harmony exports\n \t__webpack_require__.d = function(exports, name, getter) {\n \t\tif(!__webpack_require__.o(exports, name)) {\n \t\t\tObject.defineProperty(exports, name, { enumerable: true, get: getter });\n \t\t}\n \t};\n\n \t// define __esModule on exports\n \t__webpack_require__.r = function(exports) {\n \t\tif(typeof Symbol !== 'undefined' && Symbol.toStringTag) {\n \t\t\tObject.defineProperty(exports, Symbol.toStringTag, { value: 'Module' });\n \t\t}\n \t\tObject.defineProperty(exports, '__esModule', { value: true });\n \t};\n\n \t// create a fake namespace object\n \t// mode & 1: value is a module id, require it\n \t// mode & 2: merge all properties of value into the ns\n \t// mode & 4: return value when already ns object\n \t// mode & 8|1: behave like require\n \t__webpack_require__.t = function(value, mode) {\n \t\tif(mode & 1) value = __webpack_require__(value);\n \t\tif(mode & 8) return value;\n \t\tif((mode & 4) && typeof value === 'object' && value && value.__esModule) return value;\n \t\tvar ns = Object.create(null);\n \t\t__webpack_require__.r(ns);\n \t\tObject.defineProperty(ns, 'default', { enumerable: true, value: value });\n \t\tif(mode & 2 && typeof value != 'string') for(var key in value) __webpack_require__.d(ns, key, function(key) { return value[key]; }.bind(null, key));\n \t\treturn ns;\n \t};\n\n \t// getDefaultExport function for compatibility with non-harmony modules\n \t__webpack_require__.n = function(module) {\n \t\tvar getter = module && module.__esModule ?\n \t\t\tfunction getDefault() { return module['default']; } :\n \t\t\tfunction getModuleExports() { return module; };\n \t\t__webpack_require__.d(getter, 'a', getter);\n \t\treturn getter;\n \t};\n\n \t// Object.prototype.hasOwnProperty.call\n \t__webpack_require__.o = function(object, property) { return Object.prototype.hasOwnProperty.call(object, property); };\n\n \t// __webpack_public_path__\n \t__webpack_require__.p = \"\";\n\n\n \t// Load entry module and return exports\n \treturn __webpack_require__(__webpack_require__.s = 2);\n","export const\n\n_fieldsStringSelector = 'input:not([type=\"reset\"]):not([type=\"submit\"]):not([type=button]):not([type=hidden]), select, textarea',\n\n_addClass = function( element, cssClasses ){\n    cssClasses.split(' ').forEach(function(className){\n        element.classList.add( className );\n    });\n},\n\n_executeCallback = function( callbackOption, callbackData ){\n    let self = this,\n        callbackFnList = [];\n\n    if( typeof callbackOption === 'function' ){\n        callbackFnList.push( callbackOption );\n    } else if( Array.isArray(callbackOption) ) {\n        callbackFnList = callbackOption;\n    }\n\n    callbackFnList.forEach(function(cbFn){\n        cbFn.call(self, callbackData );\n    });\n},\n\n_isDOMNode = function( node ){\n    return Element.prototype.isPrototypeOf( node );\n},\n\n_isFieldForChangeEvent = function ( fieldEl ) {\n    return fieldEl.matches('select, [type=\"radio\"], [type=\"checkbox\"], [type=\"file\"]');\n},\n\n_isNodeList = function( nodeList ){\n    return NodeList.prototype.isPrototypeOf( nodeList );\n},\n\n_isPlainObject = function( object ){\n    return Object.prototype.toString.call( object ) === '[object Object]';\n},\n\n_checkFormEl = function( formEl ){\n    let isString = typeof formEl,\n        isValidNodeSelector = isString === 'string' && _isDOMNode(document.querySelector(formEl)),\n        isFormSelector = isValidNodeSelector && document.querySelector(formEl).tagName.toLowerCase() === 'form',\n        obj = {\n            result: _isDOMNode(formEl) || isFormSelector,\n            element: (isString === 'string' ? document.querySelector(formEl) : formEl)\n        };\n\n    return obj;\n},\n\n_mergeObjects = function( out = {} ){\n    for(let i=1; i<arguments.length; i++){\n        let obj = arguments[i];\n\n        if(!obj){ continue; }\n\n        for(let key in obj){\n            let isArray = Object.prototype.toString.call(obj[key]) === \"[object Array]\";\n            let isObject = Object.prototype.toString.call(obj[key]) === \"[object Object]\";\n\n            // COPY ONLY ENUMERABLE PROPERTIES\n            if( obj.hasOwnProperty(key) ){\n                if( isArray ){\n\n                    if( typeof out[key] === 'undefined' || out[key] === null ){\n                        out[key] = [];\n                    }\n                    out[key] = out[key].concat( obj[key].slice(0) );\n\n                } else if( isObject ){\n\n                    out[key] = _mergeObjects(out[key], obj[key]);\n\n                } else {\n\n                    // STRING | NUMBER | BOOLEAN | FUNCTION\n                    if( Array.isArray(out[key]) ){\n                        out[key].push(obj[key]);\n                    } else {\n                        out[key] = obj[key];\n                    }\n\n                }\n            }\n        }\n    }\n\n    return out;\n},\n\n_removeClass = function( element, cssClasses ){\n    cssClasses.split(' ').forEach(function(className){\n        element.classList.remove( className );\n    });\n},\n\n_serialize = function( obj ){\n    var objToString = (\n            (obj && typeof obj === 'object' && obj.constructor === Object) ? \n            Object.keys(obj).reduce(function(a,k){a.push(k+'='+encodeURIComponent(obj[k]));return a},[]).join('&') : \n            obj\n    );\n    return objToString;\n},\n\n_toCamelCase = function( string ){\n    return string.replace(/-([a-z])/ig, function(all, letter){ return letter.toUpperCase(); });\n};","export const validationRules = {\n            \n    cap: function( string ){\n        // VALID ITALIAN CAP WITH 5 DIGITS\n        return /^[0-9]{5}$/.test( string );\n    },\n    \n    date: function( string ){\n        // DATE AS ITALIAN SYNTAX       DD MM YYYY | DD/MM/YYYY | DD.MM.YYYY | DD-MM-YYYY\n        // OR AS ISO 8601 DATE FORMAT   YYYY MM DD | YYYY/MM/DD | YYYY.MM.DD | YYYY-MM-DD\n\n        let dateIT = /^(((0[1-9]|[12]\\d|3[01])[ \\/\\-.](0[13578]|1[02])[ \\/\\-.]((19|[2-9]\\d)\\d{2}))|((0[1-9]|[12]\\d|30)[ \\/\\-.](0[13456789]|1[012])[ \\/\\-.]((19|[2-9]\\d)\\d{2}))|((0[1-9]|1\\d|2[0-8])[ \\/\\-.]02[ \\/\\-.]((19|[2-9]\\d)\\d{2}))|(29[ \\/\\-.]02[ \\/\\-.]((1[6-9]|[2-9]\\d)(0[48]|[2468][048]|[13579][26])|((16|[2468][048]|[3579][26])00))))$/g.test( string ),\n\n            dateISO8601ext = /^(((19|[2-9]\\d)\\d{2})[ \\/\\-.](0[13578]|1[02])[ \\/\\-.](0[1-9]|[12]\\d|3[01]))|(((19|[2-9]\\d)\\d{2})[ \\/\\-.](0[13456789]|1[012])[ \\/\\-.](0[1-9]|[12]\\d|30))|(((19|[2-9]\\d)\\d{2})[ \\/\\-.]02[ \\/\\-.](0[1-9]|1\\d|2[0-8]))|(((1[6-9]|[2-9]\\d)(0[48]|[2468][048]|[13579][26])|((16|[2468][048]|[3579][26])00))[ \\/\\-.]02[ \\/\\-.]29)$/g.test( string );\n\n        return dateIT || dateISO8601ext;\n    },\n    \n    email: function( string ){\n        // FROM https://emailregex.com\n        // AS FOR RFC 5322 Official Standard\n        // EMAIL MUST BE AT LEAST ( FOR EXAMPLE ):\n        // a@a.aa\n        return /^(([^<>()\\[\\]\\\\.,;:\\s@\"]+(\\.[^<>()\\[\\]\\\\.,;:\\s@\"]+)*)|(\".+\"))@((\\[[0-9]{1,3}\\.[0-9]{1,3}\\.[0-9]{1,3}\\.[0-9]{1,3}])|(([a-zA-Z\\-0-9]+\\.)+[a-zA-Z]{2,}))$/.test( string );\n    },\n    \n    fiscalCode: function( string ){\n        // http://blog.marketto.it/2016/01/regex-validazione-codice-fiscale-con-omocodia/\n        return /^(?:[B-DF-HJ-NP-TV-Z](?:[AEIOU]{2}|[AEIOU]X)|[AEIOU]{2}X|[B-DF-HJ-NP-TV-Z]{2}[A-Z]){2}[\\dLMNP-V]{2}(?:[A-EHLMPR-T](?:[04LQ][1-9MNP-V]|[1256LMRS][\\dLMNP-V])|[DHPS][37PT][0L]|[ACELMRT][37PT][01LM])(?:[A-MZ][1-9MNP-V][\\dLMNP-V]{2}|[A-M][0L](?:[\\dLMNP-V][1-9MNP-V]|[1-9MNP-V][0L]))[A-Z]$/i.test( string );\n    },\n    \n    hexColor: function( string ){\n        // HEX COLOR WITH/WITHOUT #\n        // CAN BE 3 OR 6 CHARACTERS ( fff | FFF | ffffff | FFFFFF )\n        return /^#?([a-fA-F0-9]{6}|[a-fA-F0-9]{3})$/.test( string );\n    },\n    \n    landlineNumber: function( string ){\n        // LANDLINE PREFIX:\n        // +39 | 0039 | not-set ( ALSO WITH INTERNATIONAL PREFIXES WITH 2 DIGITS )\n        // LANDLINE NUMBER MUST START WITH 0 ( AS FOR ITALIAN ONES ):\n        // 1234567890 | 12 34567890 | 123456789 | 1234 56789 ( ALSO WITH . - / AS SEPARATOR )\n        return /^((00|\\+)\\d{2}[\\-\\. ]??)??(((0[\\d]{1,4}))([\\/\\-\\. ]){0,1}([\\d, ]{5,10}))$/.test( string ); \n    },\n    \n    mobileNumber: function( string ){\n        // +39 | 0039 | 39 | not-set ( ALSO WITH ALL INTERNATIONAL PREFIXES WITH 2 DIGITS )\n        // MOBILE NUMBER MUST START WITH 3\n        // 3234567890 | 323 4567890 | 323 45 67 890 ( ALSO WITH . OR - AS SEPARATOR )\n        return /^((00|\\+)??\\d{2}[\\-\\. ]??)??3\\d{2}[\\-\\. ]??(\\d{6,7}|\\d{2}[\\-\\. ]??\\d{2}[\\-\\. ]??\\d{3})$/.test( string );\n    },\n    \n    number: function( string ){\n        // ALL NUMBERS ( INTEGERS AND FLOATING )\n        // VALID NUMBERS: 123 | 123.456 | .123                \n        return /[+-]?([0-9]*[.])?[0-9]+/.test( string );\n    },\n    \n    numberFloat: function( string ){\n        // ONLY FLOATING NUMBERS\n        // VALID NUMBERS: 123.456 | .123                \n        return /[+-]?([0-9]*[.])[0-9]+/.test( string );\n    },\n    \n    numberInteger: function( string ){\n        // ONLY INTEGER NUMBERS                \n        return /^\\d+$/.test( string );\n    },\n    \n    password: function( string ){\n        // PASSWORD ( NO SPECIAL CHARACTERS ) WITH AT LEAST:\n        // ONE DIGIT + ONE LOWERCASE + ONE UPPERCASE + MIN LENGTH OF 8 CHARACTERS\n        return /^(?=.*[0-9])(?=.*[a-z])(?=.*[A-Z])[0-9a-zA-Z]{8,}$/.test(string);\n    },\n    \n    url: function( string ){\n        // MUST NOT CONTAIN PARAMETERS:\n        // www.mysite.com/index.html         --> VALID URL\n        // www.mysite.com/index.html?v=hello --> INVALID URL\n        return /^((https?|ftp|file):\\/\\/)?([\\da-z\\.-]+)\\.([a-z\\.]{2,6})([\\/\\w \\.-]*)*\\/?$/.test( string );\n    },\n    \n    username: function( string ){\n        // USERNAME WITH LETTERS/NUMBERS/UNDERSCORE AND . - @ WITH MIN LENGTH 3 AND MAX LENGTH 24\n        //return /^[\\w\\.\\-\\@]{3,24}$/.test( string );\n        \n        // USERNAME MUST START WITH A LETTER/NUMBER/UNDERSCORE AND CAN ALSO CONTAIN . - @ WITH MIN LENGTH 3 AND MAX LENGTH\n        return /^(?=\\w)(?=[\\-\\.\\@]?)[\\w\\-\\.\\@]{3,24}$/.test( string );\n    },\n    \n    vatNumber: function( string ){\n        // VAT NUMBER CAN CONTAIN OR NOT THE 'IT' STRING AND THEN 11 NUMBERS\n        return /^(IT){0,1}[0-9]{11}$/i.test( string );\n    }\n    \n};\n\nexport const _validationRulesAttributes = {\n\n    checkbox: function( data ){\n        let isValid = data.fieldEl.checked,\n            formEl = data.fieldEl.closest('form'),\n            dataChecksEl = formEl.querySelector('[name=\"' + data.fieldEl.name + '\"][data-checks]');\n\n        if( dataChecksEl !== null ){\n            isValid = this.checks({ attrValue: dataChecksEl.getAttribute('data-checks'), fieldEl: dataChecksEl});\n        }\n\n        return isValid;\n    },\n\n    checks: function( data ){\n        try{\n            let attrValue = JSON.parse(data.attrValue),\n                fieldEl = data.fieldEl,\n                formEl = fieldEl.closest('form'),\n                checkedElLength = formEl.querySelectorAll('[name=\"' + fieldEl.name + '\"]:checked').length;\n\n            return checkedElLength >= attrValue[0] && checkedElLength <= attrValue[1];\n        } catch(e){\n            throw new Error('\"data-checks\" attribute is not a valid array!');\n        }\n    },\n\n    equalTo: function( data ){\n        let fieldEl = data.fieldEl,\n            formEl = fieldEl.closest('form'),\n            checkFromEl = formEl.querySelector( '[name=\"' + fieldEl.getAttribute('data-equal-to') + '\"]' );\n\n        return fieldEl.value === checkFromEl.value;\n    },\n    \n    exactLength: function( data ){\n        return data.fieldEl.value.length === (data.attrValue * 1);\n    },\n\n    file: function( data ){\n        let isValid = true,\n            fieldEl = data.fieldEl,\n            MIMEtype = (fieldEl.accept ? new RegExp(fieldEl.accept.replace( '*', '[^\\\\/,]+' )) : null),\n            filesList = Array.from(fieldEl.files);\n\n        filesList.forEach(function( file ){\n            let exceedMaxFileSize = data.fieldOptions.maxFileSize > 0 && (file.size/1024/1024) > data.fieldOptions.maxFileSize,\n                isAcceptedFileType = (MIMEtype !== null ? MIMEtype.test(file.type) : true);\n\n            if( exceedMaxFileSize || !isAcceptedFileType ){\n                isValid = false;\n            }\n        });\n\n        return isValid;\n    },\n\n    length: function( data ){\n        try{\n            var valueL = data.fieldEl.value.length,\n                attrValue = JSON.parse(data.attrValue);\n\n            return valueL >= attrValue[0] && valueL <= attrValue[1];\n        } catch(e){\n            throw new Error('\"data-length\" attribute is not a valid array!');\n        }\n    },\n    \n    max: function( data ){\n        var value = data.fieldEl.value * 1,\n            maxVal = data.attrValue * 1;\n        \n        return value <= maxVal;\n    },\n    \n    maxlength: function( data ){\n        return data.fieldEl.value.length <= (data.attrValue * 1);\n    },\n    \n    min: function( data ){\n        var value = data.fieldEl.value * 1,\n            minVal = data.attrValue * 1;\n        \n        return value >= minVal;\n    },\n\n    minlength: function( data ){\n        return data.fieldEl.value.length >= (data.attrValue * 1);\n    },\n\n    pattern: function( data ){\n        let fieldEl = data.fieldEl,\n            fieldPattern = fieldEl.pattern,\n            fieldRegex = new RegExp( fieldPattern );\n\n        return fieldRegex.test( fieldEl.value );\n    },\n\n    radio: function( data ){\n        let fieldEl = data.fieldEl,\n            fieldChecked = fieldEl.closest('form').querySelector( '[name=\"'+ fieldEl.name +'\"]:checked' ),\n            isValid = fieldChecked !== null && fieldChecked.value.trim().length > 0;\n\n        return isValid;\n    },\n\n    requiredFrom: function( data ){\n        let fieldEl = data.fieldEl,\n            formEl = fieldEl.closest('form'),\n            isValidValue = fieldEl.value.trim().length > 0,\n            reqMoreEl = formEl.querySelector( fieldEl.getAttribute('data-required-from') ),\n            checkedEl = formEl.querySelector( '[name=\"'+ reqMoreEl.name +'\"]:checked' );\n\n        if( reqMoreEl.checked && reqMoreEl.required ){\n            return isValidValue;\n        }\n        \n        return checkedEl !== null;\n    }\n    \n};","/**! formJS v2.3.3 | Valerio Di Punzio (@SimplySayHi) | https://valeriodipunzio.com/plugins/formJS/ | https://github.com/SimplySayHi/formJS | MIT license */\n\nimport { _checkFormEl, _isNodeList, _mergeObjects } from './modules/helper.js';\nimport { _callbackFns }         from './modules/listenerCallbacks.js';\nimport { _setCallbackFunctionsInOptions } from './modules/optionsUtils.js';\n\nimport { options }              from './modules/options.js';\nimport { validationRules }      from './modules/validationRules.js';\n\nimport { _formStartup }         from './modules/formStartup.js';\n\nimport { destroy }              from './modules/destroy.js';\nimport { getFormJSON }          from './modules/getFormJSON.js';\nimport { init }                 from './modules/init.js';\nimport { isValidField }         from './modules/isValidField.js';\nimport { isValidForm }          from './modules/isValidForm.js';\nimport { submit }               from './modules/submit.js';\n\nconst version = '2.3.3';\nconst _listenerCallbacks = new WeakMap();\n\nclass Form {\n    constructor( formEl, optionsObj = {} ){\n        let self = this,\n            argsL = arguments.length,\n            checkFormEl = _checkFormEl(formEl);\n\n        if( argsL === 0 || (argsL > 0 && !formEl) ){ throw new Error('First argument \"formEl\" is missing or falsy!'); }\n        if( _isNodeList(formEl) ){ throw new Error('First argument \"formEl\" must be a single DOM node or a form CSS selector, not a NodeList!'); }\n        if( !checkFormEl.result ){ throw new Error('First argument \"formEl\" is not a DOM node nor a form CSS selector!'); }\n\n        self.formEl = checkFormEl.element;\n        self.options = _mergeObjects({}, Form.prototype.options, optionsObj);\n\n        _listenerCallbacks.set(self, {\n            charCount:          _callbackFns.charCount,\n            dataTypeNumber:     _callbackFns.dataTypeNumber,\n            keypressMaxlength:  _callbackFns.keypressMaxlength,\n            pastePrevent:       _callbackFns.pastePrevent.bind(self),\n            submit:             _callbackFns.submit.bind(self),\n            validation:         _callbackFns.validation.bind(self)\n        });\n\n        _formStartup.call( self );\n    }\n\n    get listenerCallbacks(){\n        return _listenerCallbacks.get(this);\n    }\n\n    destroy(){\n        destroy.call(this);\n    }\n    \n    getFormJSON( customFn ){\n        return getFormJSON.call(this, customFn);\n    }\n\n    init(){\n        return init.call(this);\n    }\n    \n    isValidField( fieldEl, fieldOptions ){\n        return isValidField.call(this, fieldEl, fieldOptions);\n    }\n    \n    isValidForm( optionsObj ){\n        return isValidForm.call(this, optionsObj);\n    }\n\n    submit( optionsObj, event ){\n        submit.call(this, optionsObj, event);\n    }\n    \n    static addValidationRules( rulesObj ){\n        this.prototype.validationRules = _mergeObjects({}, this.prototype.validationRules, rulesObj);\n    }\n    \n    static setOptions( optionsObj ){\n        this.prototype.options = _mergeObjects({}, this.prototype.options, optionsObj);\n    }\n}\n\nForm.prototype.isInitialized = false;\nForm.prototype.validationRules = validationRules;\nForm.prototype.options = options;\nForm.prototype.version = version;\n\n_setCallbackFunctionsInOptions.call(Form.prototype);\n\nif( !window.Form ){ window.Form = Form; }\nif( !window.FormJS ) { window.FormJS = Form; }\n","import { _executeCallback, _fieldsStringSelector } from './helper.js';\n\nexport const _callbackFns = {\n\n    charCount: function( eventOrField ){\n        const fieldEl = eventOrField.target || eventOrField;\n\n        if( fieldEl.matches( '[data-char-count]' ) ){\n            let containerEL = fieldEl.closest('[data-formjs-question]');\n\n            if( containerEL && containerEL.querySelector('[data-char-length]') ){\n                let usedChars = fieldEl.value.length;\n                containerEL.querySelector('[data-char-length]').textContent = usedChars;\n            }\n        }\n    },\n\n    dataTypeNumber: function( event ){\n        const fieldEl = event.target;\n        \n        if( fieldEl.matches('[data-type=\"number\"]') ){\n            let fieldValue = fieldEl.value,\n                hasInvalidChars = /[^\\d.,+\\-]/.test(fieldValue);\n            \n            if( hasInvalidChars ){\n                event.stopImmediatePropagation();\n                let valueReplaced = fieldValue.replace(/[^\\d.,+\\-]/g, '');\n                fieldEl.value = valueReplaced;\n            }\n        }\n    },\n\n    keypressMaxlength: function( event ){\n        const fieldEl = event.target;\n        \n        if( fieldEl.matches( '[maxlength]' ) ){\n            const maxLength = fieldEl.maxLength * 1,\n                keyPressed = event.which || event.keyCode,\n                allowedKeys = [8, 37, 38, 39, 46];\n\n            if( fieldEl.value.length >= maxLength && allowedKeys.indexOf(keyPressed) === -1 ){\n                return false;\n            }\n        }\n    },\n\n    pastePrevent: function( event ){\n        const self = this,\n              fieldEl = event.target;\n        let fieldOptions = self.options.fieldOptions;\n\n        if( fieldEl.matches( fieldOptions.preventPasteFields ) ){\n            \n            event.preventDefault();\n            _executeCallback.call( self, fieldOptions.onPastePrevented, fieldEl );\n\n        }\n    },\n\n    submit: function( event ){\n        this.submit( {}, event );\n    },\n\n    validation: function( event ){\n\n        const self = this,\n            eventName = event.type,\n            fieldEl = event.target;\n\n        if( fieldEl.matches( _fieldsStringSelector ) ){\n            const isFieldForChangeEvent = fieldEl.matches( 'select, [type=\"radio\"], [type=\"checkbox\"], [type=\"file\"]' ),\n                isRadio = fieldEl.type === 'radio',\n                isReqFrom = fieldEl.matches('[data-required-from]'),\n                isReqMore = fieldEl.matches('[data-require-more]'),\n                isValidValue = fieldEl.value.trim().length > 0;\n\n            // HANDLE data-require-more FIELDS\n            if( isRadio && eventName === 'change' ){\n                let findReqMoreEl = (isReqMore ? fieldEl : self.formEl.querySelector('[name=\"'+ fieldEl.name +'\"][data-require-more]')),\n                    findReqFromEl = (findReqMoreEl !== null ? self.formEl.querySelector('[data-required-from=\"#'+ findReqMoreEl.id +'\"]') : null);\n\n                if( isReqMore ){\n\n                    if( findReqFromEl !== null ){\n                        findReqFromEl.required = fieldEl.required;\n                        if( self.options.fieldOptions.focusOnRelated ){\n                            findReqFromEl.focus();\n                        }\n                    }\n\n                } else if( findReqMoreEl !== null ){\n\n                    if( findReqFromEl !== null ){\n                        findReqFromEl.required = findReqMoreEl.required && findReqMoreEl.checked;\n                        findReqFromEl.value = '';\n                    }\n\n                }\n            }\n\n            // HANDLE data-required-from FIELDS\n            if( isReqFrom ){\n                if( isValidValue ){\n\n                    let reqMoreEl = self.formEl.querySelector( fieldEl.getAttribute('data-required-from') );\n                    reqMoreEl.checked = true;\n                    fieldEl.required = reqMoreEl.required;\n                }\n            }\n            \n            if(\n                (isFieldForChangeEvent && eventName === 'change') ||\n                (!isFieldForChangeEvent && eventName !== 'change')\n            ){\n                \n                const validationResult = self.isValidField( fieldEl ),\n                    callbackData = [ { field: fieldEl, result: validationResult} ];\n\n                _executeCallback.call( self, self.options.fieldOptions.onValidation, callbackData );\n\n            }\n        }\n        \n    }\n\n};","\nexport const _setCallbackFunctionsInOptions = function(){\n    const   self = this,\n            callbacks = {\n                fieldOptions: ['onPastePrevented', 'onValidation'],\n                formOptions: ['beforeSend', 'onSubmitComplete', 'onSubmitError', 'onSubmitSuccess']\n            };\n\n    for(let opt in callbacks){\n        let fjsOpt = callbacks[opt];\n\n        fjsOpt.forEach(function(fnName){\n            let fnInOptions = self.options[opt][fnName],\n                fnList = [];\n\n            if( Array.isArray(fnInOptions) ) {\n                fnList.concat(fnInOptions);\n            } else if( fnInOptions ) {\n                fnList.push(fnInOptions);\n            }\n\n            self.options[opt][fnName] = fnList;\n        });\n    }\n\n}\n","export const options = {\n    fieldOptions: {\n        checkDirtyField:        false,\n        cssClasses: {\n            dirty:              'is-dirty',\n            error:              'has-error',\n            valid:              'is-valid'\n        },\n        focusOnRelated:         true,\n        handleFileUpload:       true,\n        handleValidation:       true,\n        maxFileSize:            10,\n        onPastePrevented:       null,\n        onValidation:           null,\n        preventPasteFields:     '[type=\"password\"], [data-equal-to]',\n        skipUIfeedback:         false,\n        strictHtmlValidation:   true,\n        validateOnEvents:       'input change'\n    },\n    formOptions: {\n        ajaxOptions:            {\n            async:              true,\n            cache:              false,\n            contentType:        'application/x-www-form-urlencoded; charset=UTF-8',\n            headers: {\n                                'X-Requested-With': 'XMLHttpRequest'\n            },\n            method:             'POST',\n            timeout:            0,\n            url:                location.href\n        },\n        ajaxSubmit:             true,\n        beforeSend:             null,\n        getFormJSON:            null,\n        handleSubmit:           true,\n        onSubmitComplete:       null,\n        onSubmitError:          null,\n        onSubmitSuccess:        null\n    }\n}","export function _formStartup(){\n    const self = this,\n          formEl = self.formEl;\n\n    if( !formEl || !formEl.matches('[novalidate]') ){ return false; }\n    \n    let fieldOptions = self.options.fieldOptions,\n        formOptions = self.options.formOptions;\n\n    // HANDLE FIELD VALIDATION\n    if( fieldOptions.handleValidation ){\n        \n        // VALIDATION WITH ATTRIBUTES LIKE HTML ONES ( ALSO FOR BUG FIXING, EG: maxlength IN ANDROID )\n        if( fieldOptions.strictHtmlValidation ){\n            \n            // maxlength\n            // BUGGY IN ANDROID BROWSERS\n            formEl.addEventListener('keypress', self.listenerCallbacks.keypressMaxlength, false);\n\n            // data-type=\"number\"\n            // SINCE VALIDATING type=\"number\" WITH NON NUMERIC CHARS WILL RETURN EMPTY STRING IN SOME BROWSERS ( EG: FIREFOX )\n            formEl.addEventListener('input', self.listenerCallbacks.dataTypeNumber, false);\n            \n        }\n        \n        if( fieldOptions.preventPasteFields && formEl.querySelectorAll( fieldOptions.preventPasteFields ).length ){\n            // INIT EVENT LISTENER FOR \"PASTE\" EVENT TO PREVENT IT ON SPECIFIED FIELDS\n            formEl.addEventListener('paste', self.listenerCallbacks.pastePrevent, false);\n        }\n\n        if( formEl.querySelectorAll('[data-char-count]').length > 0 ){\n            // INIT EVENT LISTENER FOR FIELDS WITH \"data-char-count\" ATTRIBUTE\n            formEl.addEventListener('input', self.listenerCallbacks.charCount, false);\n        }\n\n        // INIT EVENTS LISTENER ( AS IN fieldOptions )\n        fieldOptions.validateOnEvents.split(' ').forEach(function( eventName ){\n            let useCapturing = (eventName === 'blur' ? true : false);\n            formEl.addEventListener(eventName, self.listenerCallbacks.validation, useCapturing);\n        });\n\n    }\n    \n    // HANDLE FORM SUBMIT\n    if( formOptions.handleSubmit ){\n        // INIT FORM SUBMIT ( DEFAULT AND AJAX )\n        formEl.addEventListener('submit', self.listenerCallbacks.submit);\n\n        if( formOptions.ajaxSubmit ){\n            if( formEl.getAttribute('enctype') ){\n                formOptions.ajaxOptions.contentType = formEl.getAttribute('enctype');\n            }\n\n            if( formEl.getAttribute('method') ){\n                formOptions.ajaxOptions.method = formEl.getAttribute('method').toUpperCase();\n            }\n\n            if( formEl.getAttribute('action') ){\n                formOptions.ajaxOptions.url = formEl.getAttribute('action');\n            }\n        }\n    }\n\n}","export function destroy(){\n    const self = this,\n          formEl = self.formEl,\n          validationListenerNames = self.options.fieldOptions.validateOnEvents;\n\n    if( formEl.querySelectorAll('[data-char-count]').length > 0 ){\n        formEl.removeEventListener('input', self.listenerCallbacks.charCount, false);\n    }\n\n    if( self.options.fieldOptions.strictHtmlValidation ){\n        formEl.removeEventListener('keypress', self.listenerCallbacks.keypressMaxlength, false);\n        formEl.removeEventListener('input', self.listenerCallbacks.dataTypeNumber, false);\n    }\n\n    if( self.options.fieldOptions.preventPasteFields ){\n        formEl.removeEventListener('paste', self.listenerCallbacks.pastePrevent, false);\n    }\n\n    if( self.options.formOptions.handleSubmit ){\n        formEl.removeEventListener('submit', self.listenerCallbacks.submit);\n    }\n\n    validationListenerNames.split(' ').forEach(function( eventName ){\n        let useCapturing = (eventName === 'blur' ? true : false);\n        formEl.removeEventListener(eventName, self.listenerCallbacks.validation, useCapturing);\n    });\n}","export function getFormJSON( customFn = this.options.formOptions.getFormJSON ){\n    let formData = {},\n        self = this,\n        formEl = self.formEl,\n        formFieldsEl = formEl.querySelectorAll('input, select, textarea'),\n        excludeSelectors = ':not([type=\"reset\"]):not([type=\"submit\"]):not([type=\"button\"]):not([type=\"file\"]):not([data-exclude-json])',\n        filteredFields = Array.from(formFieldsEl).filter(elem => elem.matches(excludeSelectors) );\n    \n    if( typeof customFn === 'function' ){\n\n        formData = customFn.call( self, filteredFields );\n\n    } else {\n\n        filteredFields.forEach(function( fieldEl ){\n            let isCheckbox = fieldEl.type === 'checkbox',\n                isRadio = fieldEl.type === 'radio',\n                isSelect = fieldEl.matches('select'),\n                name = fieldEl.name,\n                value = fieldEl.value;\n                         \n            if( isCheckbox ) {\n                \n                value = fieldEl.checked;\n                let checkboxes = Array.from( formEl.querySelectorAll('[name=\"'+ name +'\"]') );\n                if( checkboxes.length > 1 ){\n\n                    value = [];\n                    let checkedElems = checkboxes.filter(field => field.checked);\n                    checkedElems.forEach(fieldEl => {\n                        value.push( fieldEl.value );\n                    });\n\n                }\n                    \n            } else if( isRadio ){\n                \n                let checkedRadio = formEl.querySelector('[name=\"'+ name +'\"]:checked');\n                value = (checkedRadio === null ? null : checkedRadio.value);\n                \n            } else if( isSelect ){\n\n                let selectedOpts = Array.from( fieldEl.options ).filter(option => option.selected);\n                if( selectedOpts.length > 1 ){\n\n                    value = [];\n                    selectedOpts.forEach(fieldEl => {\n                        value.push( fieldEl.value );\n                    });\n\n                }\n            }\n\n            formData[ name ] = value;\n        });\n\n    }\n    \n    return formData;\n}","\nimport { _fieldsStringSelector, _isFieldForChangeEvent } from './helper.js';\n\nexport const init = function(){\n\n    const self = this,\n          formEl = self.formEl,\n          formFields = formEl.querySelectorAll( _fieldsStringSelector );\n\n    let currentFieldName = '',\n        currentFieldType = '';\n\n    Array.from( formFields ).forEach(function( fieldEl ){\n        const   name = fieldEl.name,\n                type = fieldEl.type;\n        \n        // AVOID REPEATING VALIDATION IF THE FIELD HAS THE SAME NAME OF THE PREVIOUS ONE\n        if( (name === currentFieldName && type === currentFieldType) ){ return true; }\n\n        const isCheckboxOrRadio = (fieldEl.type === 'checkbox' || fieldEl.type === 'radio'),\n              isFieldForChangeEventBoolean = _isFieldForChangeEvent(fieldEl),\n              fieldChecked = formEl.querySelector('[name=\"' + fieldEl.name + '\"]:checked'),\n              isReqFrom = fieldEl.matches('[data-required-from]'),\n              reqMoreEl = (isReqFrom ? formEl.querySelector(fieldEl.getAttribute('data-required-from')) : null);\n\n        if( !isReqFrom ){\n            currentFieldName = name;\n            currentFieldType = type;\n        }\n        \n        // VALIDATE FIELD ( BY TRIGGERING THE validation CALLBACK ) IF IT ALREADY HAS A VALUE\n        if(\n            (!isCheckboxOrRadio && fieldEl.value) || \n            (isCheckboxOrRadio && fieldChecked !== null) ||\n            (isReqFrom && reqMoreEl.checked)\n        ){\n\n            let fakeEventObj = { target: fieldEl, type: (isFieldForChangeEventBoolean ? 'change': '') };\n            self.listenerCallbacks.validation.call( self, fakeEventObj );\n\n        }\n    });\n\n    self.isInitialized = true;\n\n    return self;\n\n}\n","import { _addClass, _mergeObjects, _removeClass } from './helper.js';\n\nimport { _isValid }             from './isValid.js';\nimport { _checkDirtyField }     from './checkDirtyField.js';\n\nexport function isValidField( fieldElem, fieldOptionsObj = {} ){\n    if( !fieldElem ){ return false; }\n\n    const self = this,\n          fieldEl = (typeof fieldElem === 'string' ? self.formEl.querySelector(fieldElem) : fieldElem);\n\n    let options =           _mergeObjects( {}, self.options.fieldOptions, fieldOptionsObj ),\n        \n        isValidValue =      fieldEl.value.trim().length > 0,\n        \n        isRequired =        fieldEl.required,\n        isReqFrom =         fieldEl.matches('[data-required-from]'),\n        reqMoreEl =         self.formEl.querySelector( fieldEl.getAttribute('data-required-from') ),\n        isValidateIfFilled =fieldEl.matches('[data-validate-if-filled]'),\n        isValid =           isValidValue,\n        \n        containerEl =       fieldEl.closest('[data-formjs-question]');\n    \n    if(\n        (!isRequired && !isValidateIfFilled && !isReqFrom) || \n        (isValidateIfFilled && !isValidValue) ||\n        (isReqFrom && !isRequired)\n    ){\n\n        isValid = true;\n       \n    } else {\n        \n        isValid =  _isValid.call( self, fieldEl, options );\n        \n    }\n\n    if( options.checkDirtyField ){\n        _checkDirtyField( fieldEl, options.cssClasses.dirty );\n    }\n    \n    // VALIDATION VISUAL FEEDBACK\n    if( containerEl !== null && !options.skipUIfeedback ){\n        if( isValid ){\n\n            if( !isReqFrom || (isReqFrom && reqMoreEl.checked) ){\n                _removeClass( containerEl, options.cssClasses.error );\n                _addClass( containerEl, options.cssClasses.valid );\n            }\n\n        } else {\n\n            _removeClass( containerEl, options.cssClasses.valid );\n            _addClass( containerEl, options.cssClasses.error );\n\n        }\n    }\n    \n    return isValid;\n}","import { _toCamelCase } from './helper.js';\n\nimport { _validationRulesAttributes } from './validationRules.js';\n\nexport function _isValid( fieldEl, fieldOptions = {} ){\n    const self = this,\n          fieldType = ( fieldEl.matches('[data-subtype]') ? _toCamelCase( fieldEl.getAttribute('data-subtype') ) : fieldEl.type ),\n          fieldValue = fieldEl.value,\n          isValidValue = fieldValue.trim().length > 0,\n          // ALPHABETICAL REVERSE ORDER\n          fieldAttributes = Array.from(fieldEl.attributes).sort(function(a,b){ return a.name < b.name });\n         \n    let attrValidations = [],\n        attrValidationsResult = true;\n\n    // SPECIFIC VALIDATIONS FOR _validationRulesAttributes\n    fieldAttributes.forEach(function(attr){\n        // FOR data-* ATTRIBUTES -> REMOVE \"data-\" AND TRANSFORM TO CAMELCASE\n        let attrName = _toCamelCase( attr.name.replace('data-', '') ),\n            attrValue = attr.value,\n            isTypeValueWithFn = attrName === 'type' && typeof _validationRulesAttributes[attrValue] === 'function',\n            isAttrNameWithFn = typeof _validationRulesAttributes[attrName] === 'function';\n\n        if( isTypeValueWithFn || isAttrNameWithFn ){\n\n            let extraValObj = {\n                    attrName: (isTypeValueWithFn ? attrValue : attrName),\n                    attrValue: attrValue,\n                    fieldEl,\n                    fieldOptions\n                };\n\n            if( isTypeValueWithFn || attrName === 'requiredFrom' ){\n                // THESE VALIDATIONS MUST RUN BEFORE ALL OTHERS\n                attrValidations.unshift( extraValObj );\n            } else {\n                attrValidations.push( extraValObj );\n            }\n\n        }\n    });\n\n    attrValidations.forEach(function(item){\n        let extraVal = _validationRulesAttributes[item.attrName]( item, fieldEl );\n        if( !extraVal ){ attrValidationsResult = false; }\n    });\n\n    attrValidationsResult = attrValidations.length > 0 ? (attrValidationsResult && isValidValue) : isValidValue; \n    \n    return (\n        typeof self.validationRules[fieldType] === 'function' ? \n        self.validationRules[fieldType]( fieldValue, fieldEl ) && attrValidationsResult : \n        attrValidationsResult\n    );\n}","import { _addClass, _isNodeList, _removeClass } from './helper.js';\n\nexport function _checkDirtyField( fields, cssClasses = '' ){ \n    var fields = (_isNodeList(fields) ? Array.from( fields ) : [fields]);\n    \n    fields.forEach(function(fieldEl){\n        if( fieldEl.type !== 'checkbox' && fieldEl.type !== 'radio' ){\n            let containerEl = fieldEl.closest('[data-formjs-question]') || fieldEl;\n\n            if( fieldEl.value ){\n                \n                _addClass( containerEl, cssClasses );\n                \n            } else {\n                \n                _removeClass( containerEl, cssClasses );\n                \n            }\n        }\n    });\n}","import { _fieldsStringSelector, _mergeObjects } from './helper.js';\n\nexport function isValidForm( options = {} ){\n    const self = this,\n          formEl = self.formEl;\n\n    if( formEl === null || !formEl.matches('[novalidate]') ){ return false; }\n    \n    var fieldOptions = _mergeObjects( {}, self.options.fieldOptions, options.fieldOptions || {} ),\n        obj = {\n            fields: [],\n            result: true\n        },\n        currentFieldName = '',\n        currentFieldType = '';\n    \n    if( typeof fieldOptions.focusOnRelated === 'undefined' ){\n        fieldOptions.focusOnRelated = false;\n    }\n    \n    Array.from( formEl.querySelectorAll(_fieldsStringSelector) ).forEach(function( fieldEl ){\n        let name = fieldEl.name,\n            type = fieldEl.type,\n            fieldData = {\n                field: fieldEl,\n                result: true\n            };\n        \n        if( (name === currentFieldName && type === currentFieldType) ){ return true; }\n        \n        if( !fieldEl.matches('[data-required-from]') ){\n            currentFieldName = name;\n            currentFieldType = type;\n        }\n        \n        const fieldResult = self.isValidField( fieldEl, fieldOptions );\n        fieldData.result = fieldResult;\n\n        if( !fieldResult ){\n            obj.result = false;\n        }\n        \n        obj.fields.push( fieldData );\n    });\n    \n    return obj;\n}","import { _executeCallback, _isPlainObject, _mergeObjects } from './helper.js';\n\nimport { _xhrCall } from './xhrCall.js';\n\nexport function submit( options = {}, event = null ){\n    const self = this,\n          formEl = self.formEl,\n          btnEl = formEl.querySelector('[type=\"submit\"]'),\n          eventPreventDefault = ( enableBtn = true ) => {\n              if( btnEl && enableBtn ){ btnEl.disabled = false; }\n              if( event ){ event.preventDefault(); }\n          };\n\n    if( btnEl ){\n        if( btnEl.disabled ){\n            eventPreventDefault(false);\n            return false;\n        }\n        btnEl.disabled = true;\n    }\n    \n    options.fieldOptions = _mergeObjects( {}, self.options.fieldOptions, options.fieldOptions || {} );\n    options.formOptions = _mergeObjects( {}, self.options.formOptions, options.formOptions || {} );\n    \n    const isAjaxForm = options.formOptions.ajaxSubmit,\n          handleValidation = options.fieldOptions.handleValidation,\n          formValidation = (handleValidation ? self.isValidForm( options ) : { result: true });\n\n    if( handleValidation ){\n        _executeCallback.call( self, options.fieldOptions.onValidation, formValidation.fields );\n    }\n\n    if( !formValidation.result ){\n        eventPreventDefault();\n        return false;\n    }\n    \n    let formDataJSON = (isAjaxForm ? self.getFormJSON() : null),\n        callbacksBeforeSend = [],\n        beforeSendOpt = options.formOptions.beforeSend;\n\n    if( typeof beforeSendOpt === 'function' || Array.isArray(beforeSendOpt) ){\n        let beforeSendData = {\n                stopExecution: false\n            },\n            stopCallbackLoop = false;\n\n        if( formDataJSON ){\n            beforeSendData.formData = formDataJSON;\n        }\n\n        if( typeof beforeSendOpt === 'function' ){\n            callbacksBeforeSend.push( beforeSendOpt );\n        } else if( Array.isArray(beforeSendOpt) ) {\n            callbacksBeforeSend = beforeSendOpt;\n        }\n\n        callbacksBeforeSend.forEach(function(cbFn){\n            if( !stopCallbackLoop ){\n                let beforeSendFn = cbFn.call( self, beforeSendData );\n                \n                if( _isPlainObject(beforeSendFn) ){\n                    formDataJSON = beforeSendFn.formData || formDataJSON;\n                    if( beforeSendFn.stopExecution ){\n                        stopCallbackLoop = true;\n                    }\n                }\n            }\n        });\n\n        if( stopCallbackLoop ){\n            eventPreventDefault();\n            return false;\n        }\n    }\n    \n    if( isAjaxForm ){\n\n        // AJAX FORM SUBMIT\n        eventPreventDefault(false);\n        _xhrCall.call( self, formDataJSON );\n\n    } else if( !event ){\n\n        // TRIGGER SUBMIT EVENT\n        let submitEvent = new Event('submit', {'bubbles': true, 'cancelable': true});\n        formEl.dispatchEvent(submitEvent);\n\n    }\n}","import { _executeCallback, _mergeObjects, _serialize } from './helper.js';\n\nexport function _xhrCall( formDataJSON ){\n    let self = this,\n        formEl = self.formEl,\n        fieldOptions = self.options.fieldOptions,\n        formOptions = self.options.formOptions,\n        btnEl = formEl.querySelector('[type=\"submit\"]'),\n        timeoutTimer,\n        xhrOptions = _mergeObjects( {}, formOptions.ajaxOptions );\n\n    xhrOptions.data = formDataJSON;\n    \n    if( xhrOptions.contentType === 'multipart/form-data' && fieldOptions.handleFileUpload ){\n        let formDataMultipart = new FormData();\n        \n        for(let key in xhrOptions.data){\n            formDataMultipart.append( key, xhrOptions.data[key] );\n        }\n        \n        Array.from( formEl.querySelectorAll('[type=\"file\"]') ).forEach(function( field ){\n            Array.from(field.files).forEach(function( file, idx ){\n                let name = field.name+'['+ idx +']';\n                formDataMultipart.append( name, file, file.name );\n            });\n        });\n        \n        xhrOptions.data = formDataMultipart;\n    }\n    \n    let XHR = new XMLHttpRequest(),\n        parseResponse = function( xhr ){\n            let data = xhr.responseText,\n                getJSON = function(){\n                    try{\n                        let obj = JSON.parse(data);\n                        return obj;\n                    } catch(e){\n                        return false;\n                    }\n                },\n                getXML_HTML = function(){\n                    try{\n                        let isXML = xhr.responseXML !== null,\n                            obj = (isXML ? new DOMParser().parseFromString(data, 'text/xml') : data);\n                        return obj;\n                    } catch(e){\n                        return false;\n                    }\n                };\n            \n            return (getJSON() || getXML_HTML() || data);\n        },\n        loadendFn = function(e) {\n            let xhr = e.target,\n                responseData = parseResponse(xhr);\n\n            let readyStateOK = xhr.readyState === 4,\n                statusOK = xhr.status === 200,\n                ajaxData = {\n                    dataOrXHR:      ( readyStateOK && statusOK ? responseData   : xhr           ),\n                    status:         ( readyStateOK && statusOK ? 'success'      : 'error'       ),\n                    XHRorResponse:  ( readyStateOK && statusOK ? xhr            : responseData  )\n                };\n            \n            if( timeoutTimer ){\n                window.clearTimeout( timeoutTimer );\n            }\n\n            btnEl.disabled = false;\n\n            _executeCallback.call( self, formOptions.onSubmitComplete, ajaxData );\n        },\n        loadFn = function(e) {\n            let xhr = e.target;\n\n            if( xhr.status === 200 ){\n                let responseData = parseResponse(xhr),\n                    ajaxData = { data: responseData, status: 'success', response: xhr };\n\n                _executeCallback.call( self, formOptions.onSubmitSuccess, ajaxData );\n            } else {\n                errorFn(e);\n            }\n        },\n        errorFn = function(e) {\n            let xhr = e.target,\n                ajaxData = { errorThrown: xhr.statusText, status: 'error', response: xhr };\n\n            _executeCallback.call( self, formOptions.onSubmitError, ajaxData );\n        };\n    \n    XHR.addEventListener('loadend', loadendFn,  false);\n    XHR.addEventListener('load',    loadFn,     false);\n    XHR.addEventListener('error',   errorFn,    false);\n    \n    if( xhrOptions.method === 'GET' ){\n        xhrOptions.url += ( /\\?/.test(xhrOptions.url) ? '&' : '?' ) + _serialize( xhrOptions.data );\n        if( xhrOptions.cache === false ){\n            xhrOptions.url +=  (/\\&/.test(xhrOptions.url) ? '&' : '') + '_=' + (new Date().getTime());\n        }\n    }\n    \n    XHR.open(xhrOptions.method, xhrOptions.url, xhrOptions.async);\n\n    if ( xhrOptions.xhrFields ) {\n        for ( let i in xhrOptions.xhrFields ) {\n            XHR[ i ] = xhrOptions.xhrFields[ i ];\n        }\n    }\n\n    if ( xhrOptions.mimeType && XHR.overrideMimeType ) {\n        XHR.overrideMimeType( xhrOptions.mimeType );\n    }\n    \n    if( xhrOptions.data && xhrOptions.contentType !== 'multipart/form-data' ){\n        XHR.setRequestHeader('Content-Type', xhrOptions.contentType);\n    }\n    \n    for( let h in xhrOptions.headers ){\n        XHR.setRequestHeader( h, xhrOptions.headers[h] );\n    }\n    \n    XHR.send( (xhrOptions.method === 'GET' ? null : xhrOptions.data) );\n\n    if ( xhrOptions.async && xhrOptions.timeout > 0 ) {\n        timeoutTimer = window.setTimeout(function() {\n            XHR.abort();\n        }, xhrOptions.timeout);\n    }\n    \n}"],"sourceRoot":""}