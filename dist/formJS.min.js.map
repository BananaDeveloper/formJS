{"version":3,"sources":["webpack:///webpack/bootstrap","webpack:///./src/modules/helper.js","webpack:///./src/modules/validationRules.js","webpack:///./src/index.js","webpack:///./src/modules/listenerCallbacks.js","webpack:///./src/modules/optionsUtils.js","webpack:///./src/modules/checkDirtyField.js","webpack:///./src/modules/options.js","webpack:///./src/modules/optionsAjax.js","webpack:///./src/modules/constructor.js","webpack:///./src/modules/formStartup.js","webpack:///./src/modules/destroy.js","webpack:///./src/modules/getFormData.js","webpack:///./src/modules/init.js","webpack:///./src/modules/isValidField.js","webpack:///./src/modules/isValid.js","webpack:///./src/modules/isValidForm.js","webpack:///./src/modules/submit.js","webpack:///./src/modules/ajaxCall.js","webpack:///./src/modules/validateField.js","webpack:///./src/modules/validateForm.js"],"names":["installedModules","__webpack_require__","moduleId","exports","module","i","l","modules","call","m","c","d","name","getter","o","Object","defineProperty","enumerable","get","r","Symbol","toStringTag","value","t","mode","__esModule","ns","create","key","bind","n","default","object","property","prototype","hasOwnProperty","p","s","e","iterator","constructor","_isDOMNode","_fieldsStringSelector","_addClass","element","cssClasses","split","forEach","className","classList","add","_checkFormEl","formEl","isString","_typeof","isFormSelector","document","querySelector","tagName","toLowerCase","result","_executeCallback","callbackOption","callbackData","self","this","callbackFnList","push","Array","isArray","cbFn","_getSplitChar","string","splitChar","indexOf","node","Element","isPrototypeOf","_isFieldForChangeEvent","fieldEl","matches","_isNodeList","nodeList","NodeList","_isPlainObject","toString","_mergeObjects","out","arguments","length","obj","isObject","concat","slice","_removeClass","remove","_serialize","keys","reduce","a","k","encodeURIComponent","join","_toCamelCase","replace","all","letter","toUpperCase","_validateFieldObjDefault","_validateFormObjDefault","fields","_validationRulesAttributes","validationRules","_helper","cap","RegExp","test","errors","strLength","maxlength","minlength","invalidChars","color","date","dateDDMMYYYY","email","missingAtChar","splitAt_at","missingUserName","missingDomain","missingExtensionDot","missingExtension","extLength","minlengthExtension","fiscalCode","landlineNumber","mobileNumber","number","numberFloat","numberInteger","password","missingNumber","missingLowercase","missingUppercase","tel","url","username","invalidStartChar","vatNumber","indexOfIT","checkbox","data","dataChecksEl","closest","checked","checks","attrValue","getAttribute","JSON","parse","checkedElLength","querySelectorAll","isMinOk","isMaxOk","minChecks","maxChecks","Error","equalTo","checkFromEl","exactLength","valueLength","file","MIMEtype","accept","from","files","exceedMaxFileSize","fieldOptions","maxFileSize","size","isAcceptedFileType","type","acceptedFileType","valueL","isMinlengthOk","isMaxlengthOk","stringLength","max","isDate","maxVal","reverse","min","minVal","pattern","fieldPattern","radio","fieldChecked","trim","requiredFrom","isValidValue","reqMoreEl","required","_listenerCallbacks2","_optionsUtils","_options","_validationRules","_constructor2","_destroy2","_getFormData2","_init2","_isValidField2","_isValidForm2","_submit2","_validateField2","_validateForm2","_listenerCallbacks","WeakMap","Form","optionsObj","set","charCount","_callbackFns","dataTypeNumber","keypressMaxlength","pastePrevent","submit","validation","_constructor","destroy","customFn","getFormData","init","isValidField","isValidForm","event","fieldElem","validateField","validateForm","rulesObj","options","isInitialized","version","_setCallbackFunctionsInOptions","window","FormJS","eventOrField","target","charLengthEl","usedChars","textContent","error","fieldValue","stopImmediatePropagation","valueReplaced","maxLength","keyPressed","which","keyCode","preventPasteFields","preventDefault","onPastePrevented","eventName","isFieldForChangeEvent","isRadio","isReqFrom","isReqMore","findReqMoreEl","findReqFromEl","id","focusOnRelated","focus","_checkDirtyField2","_defaultCallbacksInOptions","onValidation","fieldsArray","containerEl","checkDirtyField","_checkDirtyField","skipUIfeedback","errorClasses","errorEmpty","errorRule","valid","extraErrorClass","isChecks","empty","errorClassToRemove","callbacks","formOptions","_loop","opt","fnName","fnInOptions","fnList","unshift","dirty","_optionsAjax","handleFileUpload","handleValidation","strictHtmlValidation","validateOnEvents","ajaxOptions","ajaxSubmit","beforeSend","handleSubmit","onSubmitComplete","onSubmitError","onSubmitSuccess","cache","credentials","headers","Content-Type","method","redirect","timeout","location","href","argsL","checkFormEl","_formStartup","_formStartup2","charLengthElems","listenerCallbacks","maxFileSizeElems","addEventListener","useCapturing","contentType","validationListenerNames","removeEventListener","formData","formFieldsEl","filteredFields","filter","elem","isCheckbox","isSelect","checkboxes","field","checkedRadio","selectedOpts","option","selected","formFields","currentFieldName","currentFieldType","isCheckboxOrRadio","eventToTrigger","evName","newEvent","Event","bubbles","cancelable","dispatchEvent","fieldOptionsObj","isRequired","isValidateIfFilled","_isValid","_isValid2","fieldType","fieldAttributes","attributes","sort","b","attrValidations","attrValidationsResult","attr","attrName","isTypeValueWithFn","isAttrNameWithFn","extraValObj","item","extraVal","rule","fieldData","eventPreventDefault","enableBtn","btnEl","disabled","formValidation","isAjaxForm","formDataObj","callbacksBeforeSend","beforeSendOpt","beforeSendData","stopExecution","stopCallbackLoop","beforeSendFn","_ajaxCall","submitEvent","_ajaxCall2","timeoutTimer","isMultipart","body","formDataMultipart","FormData","append","idx","stringify","Headers","controller","AbortController","signal","setTimeout","abort","fetch","then","response","methodName","catch","finally","clearTimeout"],"mappings":"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","file":"formJS.min.js","sourcesContent":[" \t// The module cache\n \tvar installedModules = {};\n\n \t// The require function\n \tfunction __webpack_require__(moduleId) {\n\n \t\t// Check if module is in cache\n \t\tif(installedModules[moduleId]) {\n \t\t\treturn installedModules[moduleId].exports;\n \t\t}\n \t\t// Create a new module (and put it into the cache)\n \t\tvar module = installedModules[moduleId] = {\n \t\t\ti: moduleId,\n \t\t\tl: false,\n \t\t\texports: {}\n \t\t};\n\n \t\t// Execute the module function\n \t\tmodules[moduleId].call(module.exports, module, module.exports, __webpack_require__);\n\n \t\t// Flag the module as loaded\n \t\tmodule.l = true;\n\n \t\t// Return the exports of the module\n \t\treturn module.exports;\n \t}\n\n\n \t// expose the modules object (__webpack_modules__)\n \t__webpack_require__.m = modules;\n\n \t// expose the module cache\n \t__webpack_require__.c = installedModules;\n\n \t// define getter function for harmony exports\n \t__webpack_require__.d = function(exports, name, getter) {\n \t\tif(!__webpack_require__.o(exports, name)) {\n \t\t\tObject.defineProperty(exports, name, { enumerable: true, get: getter });\n \t\t}\n \t};\n\n \t// define __esModule on exports\n \t__webpack_require__.r = function(exports) {\n \t\tif(typeof Symbol !== 'undefined' && Symbol.toStringTag) {\n \t\t\tObject.defineProperty(exports, Symbol.toStringTag, { value: 'Module' });\n \t\t}\n \t\tObject.defineProperty(exports, '__esModule', { value: true });\n \t};\n\n \t// create a fake namespace object\n \t// mode & 1: value is a module id, require it\n \t// mode & 2: merge all properties of value into the ns\n \t// mode & 4: return value when already ns object\n \t// mode & 8|1: behave like require\n \t__webpack_require__.t = function(value, mode) {\n \t\tif(mode & 1) value = __webpack_require__(value);\n \t\tif(mode & 8) return value;\n \t\tif((mode & 4) && typeof value === 'object' && value && value.__esModule) return value;\n \t\tvar ns = Object.create(null);\n \t\t__webpack_require__.r(ns);\n \t\tObject.defineProperty(ns, 'default', { enumerable: true, value: value });\n \t\tif(mode & 2 && typeof value != 'string') for(var key in value) __webpack_require__.d(ns, key, function(key) { return value[key]; }.bind(null, key));\n \t\treturn ns;\n \t};\n\n \t// getDefaultExport function for compatibility with non-harmony modules\n \t__webpack_require__.n = function(module) {\n \t\tvar getter = module && module.__esModule ?\n \t\t\tfunction getDefault() { return module['default']; } :\n \t\t\tfunction getModuleExports() { return module; };\n \t\t__webpack_require__.d(getter, 'a', getter);\n \t\treturn getter;\n \t};\n\n \t// Object.prototype.hasOwnProperty.call\n \t__webpack_require__.o = function(object, property) { return Object.prototype.hasOwnProperty.call(object, property); };\n\n \t// __webpack_public_path__\n \t__webpack_require__.p = \"\";\n\n\n \t// Load entry module and return exports\n \treturn __webpack_require__(__webpack_require__.s = 2);\n","\nexport const\n\n_fieldsStringSelector = 'input:not([type=\"reset\"]):not([type=\"submit\"]):not([type=button]):not([type=hidden]), select, textarea',\n\n_addClass = function( element, cssClasses ){\n    cssClasses.split(' ').forEach(function(className){\n        element.classList.add( className );\n    });\n},\n\n_checkFormEl = function( formEl ){\n    let isString = typeof formEl,\n        isValidNodeSelector = isString === 'string' && _isDOMNode(document.querySelector(formEl)),\n        isFormSelector = isValidNodeSelector && document.querySelector(formEl).tagName.toLowerCase() === 'form',\n        obj = {\n            result: _isDOMNode(formEl) || isFormSelector,\n            element: (isString === 'string' ? document.querySelector(formEl) : formEl)\n        };\n\n    return obj;\n},\n\n_executeCallback = function( callbackOption, callbackData ){\n    let self = this,\n        callbackFnList = [];\n\n    if( typeof callbackOption === 'function' ){\n        callbackFnList.push( callbackOption );\n    } else if( Array.isArray(callbackOption) ) {\n        callbackFnList = callbackOption;\n    }\n\n    callbackFnList.forEach(function(cbFn){\n        cbFn.call(self, callbackData );\n    });\n},\n\n_getSplitChar = function( string ){\n    let splitChar = '.';\n\n    if( string.indexOf(splitChar) === -1 ){\n        if( string.indexOf('-') >= 0 ){\n            splitChar = '-';\n        } else if( string.indexOf('/') >= 0 ){\n            splitChar = '/';\n        }\n    }\n\n    return splitChar;\n},\n\n_isDOMNode = function( node ){\n    return Element.prototype.isPrototypeOf( node );\n},\n\n_isFieldForChangeEvent = function ( fieldEl ) {\n    return fieldEl.matches('select, [type=\"radio\"], [type=\"checkbox\"], [type=\"file\"]');\n},\n\n_isNodeList = function( nodeList ){\n    return NodeList.prototype.isPrototypeOf( nodeList );\n},\n\n_isPlainObject = function( object ){\n    return Object.prototype.toString.call( object ) === '[object Object]';\n},\n\n_mergeObjects = function( out = {} ){\n    for(let i=1; i<arguments.length; i++){\n        let obj = arguments[i];\n\n        if(!obj){ continue; }\n\n        for(let key in obj){\n            let isArray = Object.prototype.toString.call(obj[key]) === \"[object Array]\";\n            let isObject = Object.prototype.toString.call(obj[key]) === \"[object Object]\";\n\n            // COPY ONLY ENUMERABLE PROPERTIES\n            if( obj.hasOwnProperty(key) ){\n                if( isArray ){\n\n                    if( typeof out[key] === 'undefined' || out[key] === null ){\n                        out[key] = [];\n                    }\n                    out[key] = out[key].concat( obj[key].slice(0) );\n\n                } else if( isObject ){\n\n                    out[key] = _mergeObjects(out[key], obj[key]);\n\n                } else {\n\n                    // STRING | NUMBER | BOOLEAN | FUNCTION\n                    if( Array.isArray(out[key]) ){\n                        out[key].push(obj[key]);\n                    } else {\n                        out[key] = obj[key];\n                    }\n\n                }\n            }\n        }\n    }\n\n    return out;\n},\n\n_removeClass = function( element, cssClasses ){\n    cssClasses.split(' ').forEach(function(className){\n        element.classList.remove( className );\n    });\n},\n\n_serialize = function( obj ){\n    var objToString = (\n            (obj && typeof obj === 'object' && obj.constructor === Object) ? \n            Object.keys(obj)\n                .reduce(function(a,k){\n                    a.push(k+'='+encodeURIComponent(obj[k]));\n                    return a\n                },[]).join('&') : \n            obj\n    );\n    return objToString;\n},\n\n_toCamelCase = function( string ){\n    return string.replace(/-([a-z])/ig, function(all, letter){ return letter.toUpperCase(); });\n},\n\n_validateFieldObjDefault = { result: false, fieldEl: null },\n\n_validateFormObjDefault = { result: true, fields: [] }\n","\nimport { _getSplitChar } from './helper.js';\n\nexport const validationRules = {\n            \n    cap: function( string ){\n        // VALID ITALIAN CAP WITH 5 DIGITS\n        const\n            regex = new RegExp(/^[0-9]{5}$/),\n            obj = {\n                result: regex.test( string )\n            };\n\n        if( !obj.result ){\n\n            obj.errors = {};\n            const strLength = string.length;\n            if( strLength > 5 ){ obj.errors.maxlength = true; }\n            if( strLength > 0 && strLength < 5 ){ obj.errors.minlength = true; }\n            if( /[^0-9]/.test(string) ){ obj.errors.invalidChars = true; }\n        }\n\n        return obj;\n    },\n\n    color: function( string ){\n        // HEX COLOR WITH/WITHOUT #\n        // CAN BE 3 OR 6 CHARACTERS ( fff | FFF | ffffff | FFFFFF )\n        let obj = {\n            result: /^#?([a-fA-F0-9]{6}|[a-fA-F0-9]{3})$/.test( string )\n        };\n\n        return obj;\n    },\n    \n    date: function( string ){\n        // DATE AS ISO 8601 DATE FORMAT     YYYY MM DD | YYYY/MM/DD | YYYY.MM.DD | YYYY-MM-DD\n\n        let date = /^(((19|[2-9]\\d)\\d{2})[ \\/\\-.](0[13578]|1[02])[ \\/\\-.](0[1-9]|[12]\\d|3[01]))|(((19|[2-9]\\d)\\d{2})[ \\/\\-.](0[13456789]|1[012])[ \\/\\-.](0[1-9]|[12]\\d|30))|(((19|[2-9]\\d)\\d{2})[ \\/\\-.]02[ \\/\\-.](0[1-9]|1\\d|2[0-8]))|(((1[6-9]|[2-9]\\d)(0[48]|[2468][048]|[13579][26])|((16|[2468][048]|[3579][26])00))[ \\/\\-.]02[ \\/\\-.]29)$/g.test( string ),\n            obj = {\n                result: date\n            };\n\n        return obj;\n    },\n\n    dateDDMMYYYY: function( string ){\n        // DATE AS ITALIAN SYNTAX       DD MM YYYY | DD/MM/YYYY | DD.MM.YYYY | DD-MM-YYYY\n\n        let date = /^(((0[1-9]|[12]\\d|3[01])[ \\/\\-.](0[13578]|1[02])[ \\/\\-.]((19|[2-9]\\d)\\d{2}))|((0[1-9]|[12]\\d|30)[ \\/\\-.](0[13456789]|1[012])[ \\/\\-.]((19|[2-9]\\d)\\d{2}))|((0[1-9]|1\\d|2[0-8])[ \\/\\-.]02[ \\/\\-.]((19|[2-9]\\d)\\d{2}))|(29[ \\/\\-.]02[ \\/\\-.]((1[6-9]|[2-9]\\d)(0[48]|[2468][048]|[13579][26])|((16|[2468][048]|[3579][26])00))))$/g.test( string ),\n            obj = {\n                result: date\n            };\n\n        return obj;\n    },\n    \n    email: function( string ){\n        // FROM https://emailregex.com\n        // AS FOR RFC 5322 Official Standard EMAIL MUST BE AT LEAST:\n        // a@a.aa\n        const obj = {\n            result: /^(([^<>()\\[\\]\\\\.,;:\\s@\"]+(\\.[^<>()\\[\\]\\\\.,;:\\s@\"]+)*)|(\".+\"))@((\\[[0-9]{1,3}\\.[0-9]{1,3}\\.[0-9]{1,3}\\.[0-9]{1,3}])|(([a-zA-Z\\-0-9]+\\.)+[a-zA-Z]{2,}))$/.test( string )\n        };\n\n        if( !obj.result ){\n\n            obj.errors = {};\n            if( string.indexOf('@') === -1 ){\n\n                // @ IS MISSING\n                obj.errors.missingAtChar = true;\n\n            } else {\n\n                let splitAt_at = string.split('@');\n                if( splitAt_at[0].length === 0 ){\n\n                    // USER NAME IS MISSING\n                    obj.errors.missingUserName = true;\n\n                }\n\n                if( splitAt_at[1].length === 0 ){\n\n                    // IS EMPTY AFTER @\n                    obj.errors.missingDomain = true;\n                    obj.errors.missingExtensionDot = true;\n                    obj.errors.missingExtension = true;\n\n                } else if( splitAt_at[1].indexOf('.') === -1 ) {\n\n                    // DOT IS MISSING\n                    obj.errors.missingExtensionDot = true;\n                    obj.errors.missingExtension = true;\n\n                } else {\n\n                    // EXTENSION MISSING OR NOT LONG ENOUGH\n                    let splitAt_dot = splitAt_at[1].split('.'),\n                        extLength = splitAt_dot[1].length;\n                    if( extLength === 0 ) {\n                        obj.errors.missingExtension = true;\n                    } else if( extLength < 2 ){\n                        obj.errors.minlengthExtension = true;\n                    }\n\n                }\n            }\n\n        }\n\n        return obj;\n    },\n    \n    fiscalCode: function( string ){\n        // http://blog.marketto.it/2016/01/regex-validazione-codice-fiscale-con-omocodia/\n        let obj = {\n                result: /^(?:[B-DF-HJ-NP-TV-Z](?:[AEIOU]{2}|[AEIOU]X)|[AEIOU]{2}X|[B-DF-HJ-NP-TV-Z]{2}[A-Z]){2}[\\dLMNP-V]{2}(?:[A-EHLMPR-T](?:[04LQ][1-9MNP-V]|[1256LMRS][\\dLMNP-V])|[DHPS][37PT][0L]|[ACELMRT][37PT][01LM])(?:[A-MZ][1-9MNP-V][\\dLMNP-V]{2}|[A-M][0L](?:[\\dLMNP-V][1-9MNP-V]|[1-9MNP-V][0L]))[A-Z]$/i.test( string )\n            };\n        \n        return obj;\n    },\n    \n    landlineNumber: function( string ){\n        // LANDLINE PREFIX:\n        // +39 | 0039 | not-set ( ALSO WITH INTERNATIONAL PREFIXES WITH 2 DIGITS )\n        // LANDLINE NUMBER MUST START WITH 0 ( AS FOR ITALIAN ONES ):\n        // 1234567890 | 12 34567890 | 123456789 | 1234 56789 ( ALSO WITH . - / AS SEPARATOR )\n        let obj = {\n            result: /^((00|\\+)\\d{2}[\\-\\. ]??)??(((0[\\d]{1,4}))([\\/\\-\\. ]){0,1}([\\d, ]{5,10}))$/.test( string )\n        };\n\n        return obj; \n    },\n    \n    mobileNumber: function( string ){\n        // +39 | 0039 | 39 | not-set ( ALSO WITH ALL INTERNATIONAL PREFIXES WITH 2 DIGITS )\n        // MOBILE NUMBER MUST START WITH 3\n        // 3234567890 | 323 4567890 | 323 45 67 890 ( ALSO WITH . OR - AS SEPARATOR )\n        let obj = {\n            result: /^((00|\\+)??\\d{2}[\\-\\. ]??)??3\\d{2}[\\-\\. ]??(\\d{6,7}|\\d{2}[\\-\\. ]??\\d{2}[\\-\\. ]??\\d{3})$/.test( string )\n        };\n\n        return obj;\n    },\n    \n    number: function( string ){\n        // ALL NUMBERS ( INTEGERS AND FLOATING )\n        // VALID NUMBERS: 123 | 123.456 | .123\n        let obj = {\n            result: /[+-]?([0-9]*[.])?[0-9]+/.test( string )\n        };\n\n        return obj;\n    },\n    \n    numberFloat: function( string ){\n        // ONLY FLOATING NUMBERS\n        // VALID NUMBERS: 123.456 | .123\n        let obj = {\n            result: /[+-]?([0-9]*[.])[0-9]+/.test( string )\n        };\n\n        return obj;\n    },\n    \n    numberInteger: function( string ){\n        // ONLY INTEGER NUMBERS\n        let obj = {\n            result: /^\\d+$/.test( string )\n        };\n\n        return obj;\n    },\n    \n    password: function( string ){\n        // PASSWORD ( NO SPECIAL CHARACTERS ) WITH AT LEAST:\n        // ONE DIGIT + ONE LOWERCASE + ONE UPPERCASE + MIN LENGTH OF 8 CHARACTERS\n        let obj = {\n            result: /^(?=.*[0-9])(?=.*[a-z])(?=.*[A-Z])[0-9a-zA-Z]{8,}$/.test(string)\n        };\n\n        if( !obj.result ){\n\n            obj.errors = {};\n            let strLength = string.length;\n            if( strLength < 8 ){ obj.errors.minlength = true; }\n            if( !/\\d/.test(string) ){ obj.errors.missingNumber = true; }\n            if( !/[a-z]/.test(string) ){ obj.errors.missingLowercase = true; }\n            if( !/[A-Z]/.test(string) ){ obj.errors.missingUppercase = true; }\n            if( /[^0-9a-zA-Z]/.test(string) ){ obj.errors.invalidChars = true; }\n\n        }\n\n        return obj;\n    },\n\n    tel: function( string ){\n        // CHECK IF ONE OF landlineNumber OR mobileNumber IS VALID\n        let obj = {\n            result: this.landlineNumber(string).result || this.mobileNumber(string).result\n        };\n\n        return obj;\n    },\n    \n    url: function( string ){\n        // MUST NOT CONTAIN PARAMETERS:\n        // www.mysite.com/index.html         --> VALID URL\n        // www.mysite.com/index.html?v=hello --> INVALID URL\n        let obj = {\n            result: /^((https?|ftp|file):\\/\\/)?([\\da-z\\.-]+)\\.([a-z\\.]{2,6})([\\/\\w \\.-]*)*\\/?$/.test( string )\n        };\n\n        return obj;\n    },\n    \n    username: function( string ){\n        // USERNAME WITH LETTERS/NUMBERS/UNDERSCORE AND . - @ WITH MIN LENGTH 3 AND MAX LENGTH 24\n        //return /^[\\w\\.\\-\\@]{3,24}$/.test( string );\n        \n        // USERNAME MUST START WITH A LETTER/NUMBER/UNDERSCORE AND CAN ALSO CONTAIN . - @ WITH MIN LENGTH 3 AND MAX LENGTH 24\n        let obj = {\n            result: /^(?=\\w)(?=[\\-\\.\\@]?)[\\w\\-\\.\\@]{3,24}$/.test( string )\n        };\n\n        if( !obj.result ){\n\n            obj.errors = {};\n            let strLength = string.length;\n            if( strLength < 3 ){ obj.errors.minlength = true; }\n            if( strLength > 24 ){ obj.errors.maxlength = true; }\n            if( /[^\\w\\-\\.\\@]/.test(string) ){ obj.errors.invalidChars = true; }\n            if( !/^[\\w]/.test(string) ){ obj.errors.invalidStartChar = true; }\n\n        }\n\n        return obj;\n    },\n    \n    vatNumber: function( string ){\n        // VAT NUMBER CAN CONTAIN OR NOT THE 'IT' STRING AND THEN 11 NUMBERS\n        let obj = {\n            result: /^(IT){0,1}[0-9]{11}$/i.test( string )\n        };\n\n        if( !obj.result ){\n            obj.errors = {};\n            var strLength = string.length,\n                indexOfIT = string.indexOf('IT'),\n                checkLength = (indexOfIT === 0 ? 13 : 11);\n            if( indexOfIT < 1 ){\n                if( strLength < checkLength ){ obj.errors.minlength = true; }\n                else { obj.errors.maxlength = true; }\n            }\n        }\n\n        return obj;\n    }\n    \n}\n\nexport const _validationRulesAttributes = {\n\n    checkbox: function( data ){\n        let formEl = data.fieldEl.closest('form'),\n            dataChecksEl = formEl.querySelector('[name=\"' + data.fieldEl.name + '\"][data-checks]'),\n            obj = { result: data.fieldEl.checked };\n\n        if( dataChecksEl !== null ){\n            obj = this.checks({ attrValue: dataChecksEl.getAttribute('data-checks'), fieldEl: dataChecksEl});\n        }\n\n        return obj;\n    },\n\n    checks: function( data ){\n        try{\n            let attrValue = JSON.parse(data.attrValue),\n                fieldEl = data.fieldEl,\n                formEl = fieldEl.closest('form'),\n                checkedElLength = formEl.querySelectorAll('[name=\"' + fieldEl.name + '\"]:checked').length,\n                isMinOk = checkedElLength >= attrValue[0],\n                isMaxOk = checkedElLength <= attrValue[1],\n                obj = {\n                    result: isMinOk && isMaxOk\n                };\n\n            if( !obj.result ){\n\n                obj.errors = { checks: true };\n                if( !isMinOk ){ obj.errors.minChecks = true; }\n                if( !isMaxOk ){ obj.errors.maxChecks = true; }\n\n            }\n\n            return obj;\n        } catch(e){\n            throw new Error('\"data-checks\" attribute is not a valid array!');\n        }\n    },\n\n    equalTo: function( data ){\n        let fieldEl = data.fieldEl,\n            formEl = fieldEl.closest('form'),\n            checkFromEl = formEl.querySelector( '[name=\"' + fieldEl.getAttribute('data-equal-to') + '\"]' ),\n            obj = {\n                result: fieldEl.value === checkFromEl.value\n            };\n\n        if( !obj.result ){\n            \n            obj.errors = { equalTo: true };\n        }\n\n        return obj;\n    },\n    \n    exactLength: function( data ){\n        let valueLength = data.fieldEl.value.length,\n            exactLength = (data.attrValue * 1),\n            obj = {\n                result: valueLength === exactLength\n            };\n\n        if( !obj.result ){\n\n            obj.errors = { exactLength: true };\n            if( valueLength < exactLength ){ obj.errors.minlength = true; }\n            else { obj.errors.maxlength = true; }\n\n        }\n\n        return obj;\n    },\n\n    file: function( data ){\n        let fieldEl = data.fieldEl,\n            MIMEtype = (fieldEl.accept ? new RegExp(fieldEl.accept.replace( '*', '[^\\\\/,]+' )) : null),\n            filesList = Array.from(fieldEl.files),\n            obj = { result: true };\n\n        filesList.forEach(function( file ){\n            let exceedMaxFileSize = data.fieldOptions.maxFileSize > 0 && (file.size/1024/1024) > data.fieldOptions.maxFileSize,\n                isAcceptedFileType = (MIMEtype !== null ? MIMEtype.test(file.type) : true);\n\n            if( exceedMaxFileSize || !isAcceptedFileType ){\n                obj.result = false;\n                if( typeof obj.errors === 'undefined' ){\n                    obj.errors = {};\n                }\n                obj.errors.file = true;\n                if( exceedMaxFileSize ){ obj.errors.maxFileSize = true; }\n                if( !isAcceptedFileType ){ obj.errors.acceptedFileType = true; }\n\n            }\n        });\n\n        return obj;\n    },\n\n    length: function( data ){\n        try{\n            let valueL = data.fieldEl.value.length,\n                attrValue = JSON.parse(data.attrValue),\n                isMinlengthOk = valueL >= attrValue[0],\n                isMaxlengthOk = valueL <= attrValue[1],\n                obj = { result: isMinlengthOk && isMaxlengthOk };\n\n            if( !obj.result ){\n\n                obj.errors = { stringLength: true };\n                if( !isMinlengthOk ){ obj.errors.minlength = true; }\n                if( !isMaxlengthOk ){ obj.errors.maxlength = true; }\n\n            }\n\n            return obj;\n        } catch(e){\n            throw new Error('\"data-length\" attribute is not a valid array!');\n        }\n    },\n    \n    max: function( data ){\n        let fieldEl = data.fieldEl,\n            isDate = (fieldEl.matches('[type=\"date\"]') || fieldEl.matches('[data-subtype=\"date\"]') || fieldEl.matches('[data-subtype=\"dateDDMMYYYY\"]')),\n            value = data.fieldEl.value,\n            maxVal = data.attrValue;\n        \n        if( isDate ){\n\n            let splitChar = _getSplitChar( value );\n\n            if( value.indexOf(splitChar) === 2 ){\n                // DD MM YYYY\n                value = value.split( splitChar ).reverse();\n            } else {\n                // YYYY MM DD\n                value = value.split( splitChar );\n            }\n\n            value = value.join('');\n            maxVal = maxVal.split('-').join('');\n\n        }\n\n        value = value * 1;\n        maxVal = maxVal * 1;\n\n        let obj = {\n                result: value <= maxVal\n            };\n\n        if( !obj.result ){\n            \n            obj.errors = { max: true };\n        }\n        \n        return obj;\n    },\n    \n    maxlength: function( data ){\n        const obj = {\n            result: data.fieldEl.value.length <= (data.attrValue * 1)\n        };\n\n        if( !obj.result ){\n\n            obj.errors = { maxlength: true };\n        }\n\n        return obj;\n    },\n    \n    min: function( data ){\n        let fieldEl = data.fieldEl,\n            isDate = (fieldEl.matches('[type=\"date\"]') || fieldEl.matches('[data-subtype=\"date\"]') || fieldEl.matches('[data-subtype=\"dateDDMMYYYY\"]')),\n            value = data.fieldEl.value,\n            minVal = data.attrValue;\n        \n        if( isDate ){\n\n            let splitChar = _getSplitChar( value );\n\n            if( value.indexOf(splitChar) === 2 ){\n                // DD MM YYYY\n                value = value.split( splitChar ).reverse();\n            } else {\n                // YYYY MM DD\n                value = value.split( splitChar );\n            }\n\n            value = value.join('');\n            minVal = minVal.split('-').join('');\n\n        }\n\n        value = value * 1;\n        minVal = minVal * 1;\n\n        let obj = {\n                result: value >= minVal\n            };\n\n        if( !obj.result ){\n            \n            obj.errors = { min: true };\n        }\n        \n        return obj;\n    },\n\n    minlength: function( data ){\n        const obj = {\n            result: data.fieldEl.value.length >= (data.attrValue * 1)\n        };\n\n        if( !obj.result ){\n\n            obj.errors = { minlength: true };\n        }\n\n        return obj;\n    },\n\n    pattern: function( data ){\n        let fieldEl = data.fieldEl,\n            fieldPattern = fieldEl.pattern,\n            fieldRegex = new RegExp( fieldPattern ),\n            obj = {\n                result: fieldRegex.test( fieldEl.value )\n            };\n\n        if( !obj.result ){\n\n            obj.errors = { pattern: true };\n        }\n\n        return obj;\n    },\n\n    radio: function( data ){\n        let fieldEl = data.fieldEl,\n            fieldChecked = fieldEl.closest('form').querySelector( '[name=\"'+ fieldEl.name +'\"]:checked' ),\n            isValid = fieldChecked !== null && fieldChecked.value.trim().length > 0,\n            obj = { result: isValid };\n\n        return obj;\n    },\n\n    requiredFrom: function( data ){\n        let fieldEl = data.fieldEl,\n            formEl = fieldEl.closest('form'),\n            isValidValue = fieldEl.value.trim().length > 0,\n            reqMoreEl = formEl.querySelector( fieldEl.getAttribute('data-required-from') ),\n            checkedEl = formEl.querySelector( '[name=\"'+ reqMoreEl.name +'\"]:checked' ),\n            obj = { result: checkedEl !== null };\n\n        if( reqMoreEl.checked && reqMoreEl.required ){\n            obj.result = isValidValue;\n        }\n\n        if( !obj.result ){\n            obj.errors = { requiredFrom: true };\n        }\n        \n        return obj;\n    }\n    \n}\n","\n/**! formJS v3.0.0 | Valerio Di Punzio (@SimplySayHi) | https://valeriodipunzio.com/plugins/formJS/ | https://github.com/SimplySayHi/formJS | MIT license */\n\nimport { _mergeObjects }        from './modules/helper.js';\nimport { _callbackFns }         from './modules/listenerCallbacks.js';\nimport { _setCallbackFunctionsInOptions } from './modules/optionsUtils.js';\n\nimport { options }              from './modules/options.js';\nimport { validationRules }      from './modules/validationRules.js';\n\n// CONSTRUCTOR FUNCTION & PUBLIC METHODS\nimport { _constructor }         from './modules/constructor.js';\nimport { destroy }              from './modules/destroy.js';\nimport { getFormData }          from './modules/getFormData.js';\nimport { init }                 from './modules/init.js';\nimport { isValidField }         from './modules/isValidField.js';\nimport { isValidForm }          from './modules/isValidForm.js';\nimport { submit }               from './modules/submit.js';\nimport { validateField }        from './modules/validateField.js';\nimport { validateForm }         from './modules/validateForm.js';\n\nconst version = '3.0.0';\nconst _listenerCallbacks = new WeakMap();\n\nclass Form {\n\n    constructor( formEl, optionsObj ){\n        const self = this;\n\n        _listenerCallbacks.set(self, {\n            charCount:          _callbackFns.charCount,\n            dataTypeNumber:     _callbackFns.dataTypeNumber,\n            keypressMaxlength:  _callbackFns.keypressMaxlength,\n            pastePrevent:       _callbackFns.pastePrevent.bind(self),\n            submit:             _callbackFns.submit.bind(self),\n            validation:         _callbackFns.validation.bind(self)\n        });\n        \n        _constructor.call( self, formEl, optionsObj );\n    }\n\n    get listenerCallbacks(){\n        return _listenerCallbacks.get(this);\n    }\n\n    destroy(){\n        destroy.call(this);\n    }\n    \n    getFormData( customFn ){\n        return getFormData.call(this, customFn);\n    }\n\n    init(){\n        return init.call(this);\n    }\n    \n    isValidField( fieldEl, fieldOptions ){\n        return isValidField.call(this, fieldEl, fieldOptions);\n    }\n    \n    isValidForm( optionsObj ){\n        return isValidForm.call(this, optionsObj);\n    }\n\n    submit( optionsObj, event ){\n        submit.call(this, optionsObj, event);\n    }\n\n    validateField( fieldElem, fieldOptions ){\n        return validateField.call(this, fieldElem, fieldOptions);\n    }\n\n    validateForm( optionsObj ){\n        return validateForm.call(this, optionsObj);\n    }\n    \n    static addValidationRules( rulesObj ){\n        this.prototype.validationRules = _mergeObjects({}, this.prototype.validationRules, rulesObj);\n    }\n    \n    static setOptions( optionsObj ){\n        this.prototype.options = _mergeObjects({}, this.prototype.options, optionsObj);\n    }\n\n}\n\nForm.prototype.isInitialized = false;\nForm.prototype.options = options;\nForm.prototype.validationRules = validationRules;\nForm.prototype.version = version;\n\n_setCallbackFunctionsInOptions.call(Form.prototype);\n\nif( !window.Form ){ window.Form = Form; }\nif( !window.FormJS ) { window.FormJS = Form; }\n","\nimport { _executeCallback, _fieldsStringSelector, _isFieldForChangeEvent } from './helper.js';\n\nexport const _callbackFns = {\n\n    charCount: function( eventOrField ){\n\n        const fieldEl = eventOrField.target || eventOrField;\n\n        if( fieldEl.matches( '[data-char-count]' ) ){\n            try {\n                let charLengthEl = fieldEl.closest('[data-formjs-question]').querySelector('[data-char-length]');\n\n                if( charLengthEl !== null ){\n                    let usedChars = fieldEl.value.length;\n                    charLengthEl.textContent = usedChars;\n                }\n            } catch (error) {}\n        }\n\n    },\n\n    dataTypeNumber: function( event ){\n\n        const fieldEl = event.target;\n        \n        if( fieldEl.matches('[data-type=\"number\"]') ){\n            let fieldValue = fieldEl.value,\n                hasInvalidChars = /[^\\d.,+\\-]/.test(fieldValue);\n            \n            if( hasInvalidChars ){\n                event.stopImmediatePropagation();\n                let valueReplaced = fieldValue.replace(/[^\\d.,+\\-]/g, '');\n                fieldEl.value = valueReplaced;\n            }\n        }\n\n    },\n\n    keypressMaxlength: function( event ){\n\n        const fieldEl = event.target;\n        \n        if( fieldEl.matches( '[maxlength]' ) ){\n            const maxLength = fieldEl.maxLength * 1,\n                keyPressed = event.which || event.keyCode,\n                allowedKeys = [8, 37, 38, 39, 46];\n\n            if( fieldEl.value.length >= maxLength && allowedKeys.indexOf(keyPressed) === -1 ){\n                return false;\n            }\n        }\n\n    },\n\n    pastePrevent: function( event ){\n\n        const self = this,\n              fieldEl = event.target;\n        let fieldOptions = self.options.fieldOptions;\n\n        if( fieldEl.matches( fieldOptions.preventPasteFields ) ){     \n            event.preventDefault();\n            _executeCallback.call( self, fieldOptions.onPastePrevented, fieldEl );\n        }\n\n    },\n\n    submit: function( event ){\n        this.submit( {}, event );\n    },\n\n    validation: function( event ){\n\n        const self = this,\n            eventName = event.type,\n            fieldEl = event.target;\n\n        if( fieldEl.matches( _fieldsStringSelector ) ){\n            const isFieldForChangeEvent = _isFieldForChangeEvent(fieldEl),\n                isRadio = fieldEl.type === 'radio',\n                isReqFrom = fieldEl.matches('[data-required-from]'),\n                isReqMore = fieldEl.matches('[data-require-more]'),\n                isValidValue = fieldEl.value.trim().length > 0;\n\n            // HANDLE data-require-more FIELDS\n            if( isRadio && eventName === 'change' ){\n                let findReqMoreEl = (isReqMore ? fieldEl : self.formEl.querySelector('[name=\"'+ fieldEl.name +'\"][data-require-more]')),\n                    findReqFromEl = (findReqMoreEl !== null ? self.formEl.querySelector('[data-required-from=\"#'+ findReqMoreEl.id +'\"]') : null);\n\n                if( isReqMore ){\n\n                    if( findReqFromEl !== null ){\n                        if( fieldEl.required ){\n                            findReqFromEl.required = true;\n                        }\n                        if( self.options.fieldOptions.focusOnRelated ){\n                            findReqFromEl.focus();\n                        }\n                    }\n\n                } else if( findReqMoreEl !== null ){\n\n                    if( findReqFromEl !== null ){\n                        findReqFromEl.required = false;\n                        findReqFromEl.value = '';\n                    }\n\n                }\n            }\n\n            // HANDLE data-required-from FIELDS\n            if( isReqFrom ){\n                if( isValidValue ){\n\n                    let reqMoreEl = self.formEl.querySelector( fieldEl.getAttribute('data-required-from') );\n                    reqMoreEl.checked = true;\n\n                    if( reqMoreEl.required ){\n                        fieldEl.required = true;\n                    }\n                }\n            }\n            \n            if(\n                (isFieldForChangeEvent && eventName === 'change') ||\n                (!isFieldForChangeEvent && eventName !== 'change')\n            ){\n                \n                self.validateField( fieldEl );\n\n            }\n        }\n        \n    }\n\n};\n","\nimport { _addClass, _removeClass }  from './helper.js';\nimport { _checkDirtyField }         from './checkDirtyField.js';\n\nconst _defaultCallbacksInOptions = {\n    fieldOptions: {\n        onValidation: function onValidationDefault ( fieldsArray ) {\n\n            let self = this,\n                options = self.options.fieldOptions;\n\n            fieldsArray.forEach(function( obj ){\n                let fieldEl = obj.fieldEl,\n                    containerEl = fieldEl.closest('[data-formjs-question]'),\n                    isReqFrom = fieldEl.matches('[data-required-from]'),\n                    reqMoreEl = self.formEl.querySelector( fieldEl.getAttribute('data-required-from') );\n\n                if( options.checkDirtyField ){\n                    _checkDirtyField.call( self, fieldEl );\n                }\n                \n                if( containerEl !== null && !options.skipUIfeedback ){\n                    if( obj.result ){\n\n                        if( !isReqFrom || (isReqFrom && reqMoreEl.checked) ){\n                            // IF FIELD IS VALID\n                            let errorClasses = options.cssClasses.error + ' ' + options.cssClasses.errorEmpty + ' ' + options.cssClasses.errorRule;\n                            _removeClass( containerEl, errorClasses );\n                            _addClass( containerEl, options.cssClasses.valid );\n                        }\n\n                    } else {\n\n                        // IF FIELD IS NOT VALID\n                        let extraErrorClass = options.cssClasses.errorRule;\n\n                        // HANDLE CASE OF FIELD data-checks\n                        let isChecks = fieldEl.matches('[data-checks]'),\n                            checkedElLength = (isChecks ? containerEl.querySelectorAll('[name=\"' + fieldEl.name + '\"]:checked').length : 0);\n\n                        if( (!isChecks && (obj.errors && obj.errors.empty)) || (isChecks && checkedElLength === 0) ){\n                            extraErrorClass = options.cssClasses.errorEmpty;\n                        }\n\n                        let errorClasses = options.cssClasses.error + ' ' + extraErrorClass,\n                            errorClassToRemove = options.cssClasses.errorEmpty + ' ' + options.cssClasses.errorRule;\n                        _removeClass( containerEl, options.cssClasses.valid + ' ' + errorClassToRemove );\n                        _addClass( containerEl, errorClasses );\n\n                    }\n                }\n            });\n            \n        }\n    }\n};\n\nexport const _setCallbackFunctionsInOptions = function(){\n    const   self = this,\n            callbacks = {\n                fieldOptions: ['onPastePrevented', 'onValidation'],\n                formOptions: ['beforeSend', 'onSubmitComplete', 'onSubmitError', 'onSubmitSuccess']\n            };\n\n    for(let opt in callbacks){\n        let fjsOpt = callbacks[opt];\n\n        fjsOpt.forEach(function(fnName){\n            let fnInOptions = self.options[opt][fnName],\n                fnList = [];\n\n            if( Array.isArray(fnInOptions) ) {\n                fnList.concat(fnInOptions);\n            } else if( fnInOptions ) {\n                fnList.push(fnInOptions);\n            }\n\n            if( typeof _defaultCallbacksInOptions[opt] !== 'undefined' && typeof _defaultCallbacksInOptions[opt][fnName] === 'function' ){\n                fnList.unshift(_defaultCallbacksInOptions[opt][fnName]);\n            }\n\n            self.options[opt][fnName] = fnList;\n        });\n    }\n\n}\n","\nimport { _addClass, _isNodeList, _removeClass } from './helper.js';\n\nexport function _checkDirtyField( fields, cssClasses = this.options.fieldOptions.cssClasses.dirty ){\n\n    var fields = (_isNodeList(fields) ? Array.from( fields ) : [fields]);\n    \n    fields.forEach(function(fieldEl){\n        if( fieldEl.type !== 'checkbox' && fieldEl.type !== 'radio' ){\n            let containerEl = fieldEl.closest('[data-formjs-question]') || fieldEl;\n\n            if( fieldEl.value ){\n                \n                _addClass( containerEl, cssClasses );\n                \n            } else {\n                \n                _removeClass( containerEl, cssClasses );\n                \n            }\n        }\n    });\n    \n}\n","\nimport { ajaxOptions } from './optionsAjax.js';\n//import { ajaxOptions } from './optionsAjaxXhr.js';\n\nexport const options = {\n\n    fieldOptions: {\n        checkDirtyField:        false,\n        cssClasses: {\n            dirty:              'is-dirty',\n            error:              'has-error',\n            errorEmpty:         'has-error-empty',\n            errorRule:          'has-error-rule',\n            valid:              'is-valid'\n        },\n        focusOnRelated:         true,\n        handleFileUpload:       true,\n        handleValidation:       true,\n        maxFileSize:            10,\n        onPastePrevented:       null,\n        onValidation:           null,\n        preventPasteFields:     '[type=\"password\"], [data-equal-to]',\n        skipUIfeedback:         false,\n        strictHtmlValidation:   true,\n        validateOnEvents:       'input change'\n    },\n\n    formOptions: {\n        ajaxOptions:            ajaxOptions,\n        ajaxSubmit:             true,\n        beforeSend:             null,\n        getFormData:            null,\n        handleSubmit:           true,\n        onSubmitComplete:       null,\n        onSubmitError:          null,\n        onSubmitSuccess:        null\n    }\n    \n}\n","\nexport let ajaxOptions = {\n    cache:              'no-store',\n    credentials:        'same-origin',\n    headers: {\n                        'Content-Type': 'application/json'\n    },\n    method:             'POST',\n    mode:               'same-origin',\n    redirect:           'follow',\n    timeout:            0,\n    url:                location.href\n}\n","\nimport { _checkFormEl, _isNodeList, _mergeObjects } from './helper.js';\nimport { _formStartup }                             from './formStartup.js';\n\nexport function _constructor( formEl, optionsObj = {} ){\n\n    let self = this,\n        argsL = arguments.length,\n        checkFormEl = _checkFormEl(formEl);\n\n    if( argsL === 0 || (argsL > 0 && !formEl) ){\n        throw new Error('First argument \"formEl\" is missing or falsy!');\n    }\n    if( _isNodeList(formEl) ){\n        throw new Error('First argument \"formEl\" must be a single DOM node or a form CSS selector, not a NodeList!');\n    }\n    if( !checkFormEl.result ){\n        throw new Error('First argument \"formEl\" is not a DOM node nor a form CSS selector!');\n    }\n\n    self.formEl = checkFormEl.element;\n    self.options = _mergeObjects({}, Form.prototype.options, optionsObj);\n\n    _formStartup.call( self );\n    \n}\n","\nexport function _formStartup(){\n\n    const self = this,\n          formEl = self.formEl;\n\n    if( !formEl.matches('[novalidate]') ){ return null; }\n\n    let fieldOptions = self.options.fieldOptions,\n        formOptions = self.options.formOptions;\n\n    // INIT FORM UTILITIES - START\n    let charLengthElems = formEl.querySelectorAll('[data-char-length]');\n    if( charLengthElems.length > 0 ){\n        Array.from( charLengthElems ).forEach(function( element ){\n            try {\n                let containerEl = element.closest('[data-formjs-question]'),\n                    fieldEl = containerEl.querySelector('[data-char-count]');\n\n                if( fieldEl !== null && fieldEl.matches('[maxlength]') ){\n                    // PRINT RELATED MAX LENGTH IN HTML\n                    let maxlength = fieldEl.getAttribute('maxlength');\n                    containerEl.querySelector('[data-char-maxlength]').textContent = maxlength;\n                }\n\n                // PRINT CHAR COUNT IN HTML\n                self.listenerCallbacks.charCount.call( null, fieldEl );\n            } catch (error) {}\n        });\n    }\n\n    if( fieldOptions.maxFileSize > 0 ){\n        let maxFileSizeElems = formEl.querySelectorAll('[data-max-file-size]');\n        if( maxFileSizeElems.length > 0 ){\n            Array.from( maxFileSizeElems ).forEach(function( element ){\n                try {\n                    let fieldEl = element.closest('[data-formjs-question]').querySelector('[type=\"file\"]');\n\n                    if( fieldEl !== null ){\n                        // PRINT MAX FILE SIZE FOR INPUTS WITH type=\"file\"\n                        element.textContent = fieldOptions.maxFileSize;\n                    }\n                } catch (error) {}\n            });\n        }\n    }\n    // INIT FORM UTILITIES - END\n\n    // HANDLE FIELD VALIDATION\n    if( fieldOptions.handleValidation ){\n        \n        // VALIDATION WITH ATTRIBUTES LIKE HTML ONES ( ALSO FOR BUG FIXING, EG: maxlength IN ANDROID )\n        if( fieldOptions.strictHtmlValidation ){\n            \n            // maxlength\n            // BUGGY IN ANDROID BROWSERS\n            formEl.addEventListener('keypress', self.listenerCallbacks.keypressMaxlength, false);\n\n            // data-type=\"number\"\n            // SINCE VALIDATING type=\"number\" WITH NON NUMERIC CHARS WILL RETURN EMPTY STRING IN SOME BROWSERS ( EG: FIREFOX )\n            formEl.addEventListener('input', self.listenerCallbacks.dataTypeNumber, false);\n            \n        }\n        \n        if( fieldOptions.preventPasteFields && formEl.querySelectorAll( fieldOptions.preventPasteFields ).length ){\n            // INIT EVENT LISTENER FOR \"PASTE\" EVENT TO PREVENT IT ON SPECIFIED FIELDS\n            formEl.addEventListener('paste', self.listenerCallbacks.pastePrevent, false);\n        }\n\n        if( formEl.querySelectorAll('[data-char-count]').length > 0 ){\n            // INIT EVENT LISTENER FOR FIELDS WITH \"data-char-count\" ATTRIBUTE\n            formEl.addEventListener('input', self.listenerCallbacks.charCount, false);\n        }\n\n        // INIT EVENTS LISTENER ( AS IN fieldOptions )\n        fieldOptions.validateOnEvents.split(' ').forEach(function( eventName ){\n            let useCapturing = (eventName === 'blur' ? true : false);\n            formEl.addEventListener(eventName, self.listenerCallbacks.validation, useCapturing);\n        });\n\n    }\n    \n    // HANDLE FORM SUBMIT\n    if( formOptions.handleSubmit ){\n        // INIT FORM SUBMIT ( DEFAULT AND AJAX )\n        formEl.addEventListener('submit', self.listenerCallbacks.submit);\n\n        if( formOptions.ajaxSubmit ){\n            if( formEl.getAttribute('enctype') ){\n\n                // FOR XMLHttpRequest API\n                formOptions.ajaxOptions.contentType = formEl.getAttribute('enctype');\n\n                // FOR fetch API\n                formOptions.ajaxOptions.headers['Content-Type'] = formEl.getAttribute('enctype');\n                \n            }\n\n            if( formEl.getAttribute('method') ){\n                formOptions.ajaxOptions.method = formEl.getAttribute('method').toUpperCase();\n            }\n\n            if( formEl.getAttribute('action') ){\n                formOptions.ajaxOptions.url = formEl.getAttribute('action');\n            }\n        }\n    }\n\n}\n","\nexport function destroy(){\n\n    const self = this,\n          formEl = self.formEl,\n          validationListenerNames = self.options.fieldOptions.validateOnEvents;\n\n    if( formEl.querySelectorAll('[data-char-count]').length > 0 ){\n        formEl.removeEventListener('input', self.listenerCallbacks.charCount, false);\n    }\n\n    if( self.options.fieldOptions.strictHtmlValidation ){\n        formEl.removeEventListener('keypress', self.listenerCallbacks.keypressMaxlength, false);\n        formEl.removeEventListener('input', self.listenerCallbacks.dataTypeNumber, false);\n    }\n\n    if( self.options.fieldOptions.preventPasteFields ){\n        formEl.removeEventListener('paste', self.listenerCallbacks.pastePrevent, false);\n    }\n\n    if( self.options.formOptions.handleSubmit ){\n        formEl.removeEventListener('submit', self.listenerCallbacks.submit);\n    }\n\n    validationListenerNames.split(' ').forEach(function( eventName ){\n        let useCapturing = (eventName === 'blur' ? true : false);\n        formEl.removeEventListener(eventName, self.listenerCallbacks.validation, useCapturing);\n    });\n    \n}\n","\nexport function getFormData( customFn = this.options.formOptions.getFormData ){\n\n    let formData = {},\n        self = this,\n        formEl = self.formEl,\n        formFieldsEl = formEl.querySelectorAll('input, select, textarea'),\n        excludeSelectors = ':not([type=\"reset\"]):not([type=\"submit\"]):not([type=\"button\"]):not([type=\"file\"]):not([data-exclude-data])',\n        filteredFields = Array.from(formFieldsEl).filter(elem => elem.matches(excludeSelectors) );\n    \n    if( typeof customFn === 'function' ){\n\n        formData = customFn.call( self, filteredFields );\n\n    } else {\n\n        filteredFields.forEach(function( fieldEl ){\n            let isCheckbox = fieldEl.type === 'checkbox',\n                isRadio = fieldEl.type === 'radio',\n                isSelect = fieldEl.matches('select'),\n                name = fieldEl.name,\n                value = fieldEl.value;\n                         \n            if( isCheckbox ) {\n                \n                value = fieldEl.checked;\n                let checkboxes = Array.from( formEl.querySelectorAll('[name=\"'+ name +'\"]') );\n                if( checkboxes.length > 1 ){\n\n                    value = [];\n                    let checkedElems = checkboxes.filter(field => field.checked);\n                    checkedElems.forEach(fieldEl => {\n                        value.push( fieldEl.value );\n                    });\n\n                }\n                    \n            } else if( isRadio ){\n                \n                let checkedRadio = formEl.querySelector('[name=\"'+ name +'\"]:checked');\n                value = (checkedRadio === null ? null : checkedRadio.value);\n                \n            } else if( isSelect ){\n\n                let selectedOpts = Array.from( fieldEl.options ).filter(option => option.selected);\n                if( selectedOpts.length > 1 ){\n\n                    value = [];\n                    selectedOpts.forEach(fieldEl => {\n                        value.push( fieldEl.value );\n                    });\n\n                }\n            }\n\n            formData[ name ] = value;\n        });\n\n    }\n    \n    return formData;\n    \n}\n","\nimport { _fieldsStringSelector, _isFieldForChangeEvent } from './helper.js';\n\nexport const init = function(){\n\n    const self = this,\n          formEl = self.formEl,\n          formFields = formEl.querySelectorAll( _fieldsStringSelector );\n\n    let currentFieldName = '',\n        currentFieldType = '';\n\n    Array.from( formFields ).forEach(function( fieldEl ){\n        const   name = fieldEl.name,\n                type = fieldEl.type;\n        \n        // AVOID REPEATING VALIDATION IF THE FIELD HAS THE SAME NAME OF THE PREVIOUS ONE\n        if( (name === currentFieldName && type === currentFieldType) ){ return true; }\n\n        const isCheckboxOrRadio = (fieldEl.type === 'checkbox' || fieldEl.type === 'radio'),\n              isFieldForChangeEvent = _isFieldForChangeEvent(fieldEl),\n              fieldChecked = formEl.querySelector('[name=\"' + fieldEl.name + '\"]:checked'),\n              isReqFrom = fieldEl.matches('[data-required-from]'),\n              reqMoreEl = (isReqFrom ? formEl.querySelector(fieldEl.getAttribute('data-required-from')) : null);\n\n        if( !isReqFrom ){\n            currentFieldName = name;\n            currentFieldType = type;\n        }\n        \n        // VALIDATE FIELD ( BY TRIGGERING THE EVENT LISTENER ) IF IT ALREADY HAS A VALUE\n        if(\n            (!isCheckboxOrRadio && fieldEl.value) || \n            (isCheckboxOrRadio && fieldChecked !== null) ||\n            (isReqFrom && reqMoreEl.checked)\n        ){\n\n            let eventToTrigger = 'change';\n\n            if( isCheckboxOrRadio ){\n                fieldEl = fieldChecked;\n            } else if( !isFieldForChangeEvent ) {\n                eventToTrigger = self.options.fieldOptions.validateOnEvents.split(' ').filter(function(evName){\n                    return evName !== 'change';\n                })[0] || 'input';\n            }\n\n            let newEvent = new Event(eventToTrigger, {'bubbles': (eventToTrigger !== 'blur'), 'cancelable': true});\n            fieldEl.dispatchEvent(newEvent);\n\n        }\n    });\n\n    self.isInitialized = true;\n\n    return self;\n\n}\n","\nimport { _isDOMNode, _mergeObjects, _validateFieldObjDefault } from './helper.js';\nimport { _isValid } from './isValid.js';\n\nexport function isValidField( fieldElem, fieldOptionsObj = {} ){\n\n    const self = this,\n          fieldEl = (typeof fieldElem === 'string' ? self.formEl.querySelector(fieldElem) : fieldElem);\n\n    let obj = _mergeObjects({}, _validateFieldObjDefault);\n\n    if( !_isDOMNode(fieldEl) ){ return obj; }\n\n    let options =           _mergeObjects( {}, self.options.fieldOptions, fieldOptionsObj ),\n        isValidValue =      fieldEl.value.trim().length > 0,\n        isRequired =        fieldEl.required,\n        isReqFrom =         fieldEl.matches('[data-required-from]'),\n        isValidateIfFilled =fieldEl.matches('[data-validate-if-filled]');\n    \n    if(\n        (!isRequired && !isValidateIfFilled && !isReqFrom) ||   // IT IS A NORMAL FORM FIELD\n        (isValidateIfFilled && !isValidValue) ||                // IT IS data-validate-if-filled AND EMPTY\n        (isReqFrom && !isRequired )                             // IT IS data-required-from AND NOT required\n    ){\n\n        obj.result = true;\n       \n    } else {\n        \n        obj =  _isValid.call( self, fieldEl, options );\n        \n    }\n\n    obj.fieldEl = fieldEl;\n    \n    return obj;\n\n}\n","\nimport { _mergeObjects, _toCamelCase } from './helper.js';\nimport { _validationRulesAttributes } from './validationRules.js';\n\nexport function _isValid( fieldEl, fieldOptions = {} ){\n\n    const self = this,\n          fieldType = ( fieldEl.matches('[data-subtype]') ? _toCamelCase( fieldEl.getAttribute('data-subtype') ) : fieldEl.type ),\n          fieldValue = fieldEl.value,\n          isValidValue = fieldValue.trim().length > 0,\n          // ALPHABETICAL REVERSE ORDER\n          fieldAttributes = Array.from(fieldEl.attributes).sort(function(a,b){ return a.name < b.name });\n\n    let attrValidations = [],\n        attrValidationsResult = isValidValue,\n        obj = { result: isValidValue };\n\n    if( !isValidValue ){\n        obj.errors = { empty: true };\n        obj.result = false;\n        return obj;\n    }\n\n    // COLLECT SPECIFIC VALIDATIONS FOR _validationRulesAttributes\n    fieldAttributes.forEach(function(attr){\n        // FOR data-* ATTRIBUTES -> REMOVE \"data-\" AND TRANSFORM TO CAMELCASE\n        let attrName = _toCamelCase( attr.name.replace('data-', '') ),\n            attrValue = attr.value,\n            isTypeValueWithFn = attrName === 'type' && typeof _validationRulesAttributes[attrValue] === 'function',\n            isAttrNameWithFn = typeof _validationRulesAttributes[attrName] === 'function';\n\n        if( isTypeValueWithFn || isAttrNameWithFn ){\n\n            let extraValObj = {\n                    attrName: (isTypeValueWithFn ? attrValue : attrName),\n                    attrValue: attrValue,\n                    fieldEl,\n                    fieldOptions\n                };\n\n            if( isTypeValueWithFn || attrName === 'requiredFrom' ){\n                // THESE VALIDATIONS MUST RUN BEFORE ALL OTHERS\n                attrValidations.unshift( extraValObj );\n            } else {\n                attrValidations.push( extraValObj );\n            }\n\n        }\n    });\n\n    // RUN SPECIFIC VALIDATIONS FOR _validationRulesAttributes\n    attrValidations.forEach(function(item){\n        let extraVal = _validationRulesAttributes[item.attrName]( item, fieldEl );\n        if( !extraVal.result ){\n            obj = _mergeObjects({}, obj, extraVal);\n            attrValidationsResult = false;\n        }\n    });\n\n    // RUN VALIDATIONS FOR validationRules\n    if( typeof self.validationRules[fieldType] === 'function' ){\n        obj = _mergeObjects( {}, obj, self.validationRules[fieldType](fieldValue, fieldEl) );\n        obj.result = obj.result && attrValidationsResult;\n        if( !obj.result ){\n            if( typeof obj.errors === 'undefined' ){\n                obj.errors = {};\n            }\n            obj.errors.rule = true;\n        }\n    }\n\n    return obj;\n\n}\n","\nimport { _fieldsStringSelector, _isDOMNode, _mergeObjects, _validateFormObjDefault } from './helper.js';\n\nexport function isValidForm( options = {} ){\n\n    const self = this,\n          formEl = self.formEl;\n\n    let obj = _mergeObjects({}, _validateFormObjDefault);\n\n    if( !_isDOMNode(formEl) || !formEl.matches('[novalidate]') ){\n        obj.result = false;\n        return obj;\n    }\n    \n    let fieldOptions = _mergeObjects( {}, self.options.fieldOptions, options.fieldOptions ),\n        currentFieldName = '',\n        currentFieldType = '';\n    \n    if( typeof fieldOptions.focusOnRelated === 'undefined' ){\n        fieldOptions.focusOnRelated = false;\n    }\n    \n    Array.from( formEl.querySelectorAll(_fieldsStringSelector) ).forEach(function( fieldEl ){\n        let name = fieldEl.name,\n            type = fieldEl.type,\n            fieldData = {};\n        \n        if( (name === currentFieldName && type === currentFieldType) ){ return true; }\n        \n        if( !fieldEl.matches('[data-required-from]') ){\n            currentFieldName = name;\n            currentFieldType = type;\n        }\n        \n        fieldData = self.isValidField( fieldEl, fieldOptions );\n\n        if( !fieldData.result ){\n            obj.result = false;\n        }\n        \n        obj.fields.push( fieldData );\n    });\n    \n    return obj;\n\n}\n","\nimport { _executeCallback, _isPlainObject, _mergeObjects } from './helper.js';\n\nimport { _ajaxCall } from './ajaxCall.js';\n//import { _ajaxCall } from './ajaxCallXhr.js';\n\nexport function submit( options = {}, event = null ){\n\n    const self = this,\n          formEl = self.formEl,\n          eventPreventDefault = ( enableBtn = true ) => {\n              if( btnEl && enableBtn ){ btnEl.disabled = false; }\n              if( event ){ event.preventDefault(); }\n          };\n    \n    options.fieldOptions = _mergeObjects( {}, self.options.fieldOptions, options.fieldOptions );\n    options.formOptions = _mergeObjects( {}, self.options.formOptions, options.formOptions );\n    \n    const handleValidation = options.fieldOptions.handleValidation,\n          formValidation = (handleValidation ? self.isValidForm( options ) : { result: true });\n\n    const btnEl = formEl.querySelector('[type=\"submit\"]'),\n          isAjaxForm = options.formOptions.ajaxSubmit;\n    \n    if( handleValidation ){\n        _executeCallback.call( self, options.fieldOptions.onValidation, formValidation.fields );\n    }\n    \n    let formDataObj = (isAjaxForm ? self.getFormData() : null),\n        callbacksBeforeSend = [],\n        beforeSendOpt = options.formOptions.beforeSend;\n\n    if( typeof beforeSendOpt === 'function' || Array.isArray(beforeSendOpt) ){\n        let beforeSendData = {\n                stopExecution: false\n            },\n            stopCallbackLoop = false;\n\n        if( formDataObj ){\n            beforeSendData.formData = formDataObj;\n        }\n\n        if( typeof beforeSendOpt === 'function' ){\n            callbacksBeforeSend.push( beforeSendOpt );\n        } else if( Array.isArray(beforeSendOpt) ) {\n            callbacksBeforeSend = beforeSendOpt;\n        }\n\n        callbacksBeforeSend.forEach(function(cbFn){\n            if( !stopCallbackLoop ){\n                let beforeSendFn = cbFn.call( self, beforeSendData );\n                \n                if( _isPlainObject(beforeSendFn) ){\n                    formDataObj = beforeSendFn.formData || formDataObj;\n                    if( beforeSendFn.stopExecution ){\n                        stopCallbackLoop = true;\n                    }\n                }\n            }\n        });\n\n        if( stopCallbackLoop ){\n            eventPreventDefault();\n            return false;\n        }\n    }\n\n    if( !formValidation.result || (btnEl && btnEl.disabled) ){\n        eventPreventDefault();\n        return false;\n    }\n\n    if( btnEl ){\n        btnEl.disabled = true;\n    }\n    \n    if( isAjaxForm ){\n\n        // AJAX FORM SUBMIT\n        eventPreventDefault(false);\n        _ajaxCall.call(self, formDataObj);\n\n    } else if( !event ){\n\n        // TRIGGER SUBMIT EVENT\n        let submitEvent = new Event('submit', {'bubbles': true, 'cancelable': true});\n        formEl.dispatchEvent(submitEvent);\n\n    }\n    \n}\n","\nimport { _executeCallback, _mergeObjects, _serialize } from './helper.js';\n\n// AJAX CALL USING fetch API\nexport function _ajaxCall( formDataObj ){\n\n    let self = this,\n        formEl = self.formEl,\n        fieldOptions = self.options.fieldOptions,\n        formOptions = self.options.formOptions,\n        btnEl = formEl.querySelector('[type=\"submit\"]'),\n        timeoutTimer,\n        ajaxOptions = _mergeObjects( {}, formOptions.ajaxOptions ),\n        isMultipart = ajaxOptions.headers['Content-Type'] === 'multipart/form-data';\n\n    ajaxOptions.body = formDataObj;\n    \n    // POST A FormData OBJECT ( multipart )\n    if( isMultipart && fieldOptions.handleFileUpload ){\n        let formDataMultipart = new FormData();\n        \n        for(let key in ajaxOptions.body){\n            formDataMultipart.append( key, ajaxOptions.body[key] );\n        }\n        \n        Array.from( formEl.querySelectorAll('[type=\"file\"]') ).forEach(function( field ){\n            Array.from(field.files).forEach(function( file, idx ){\n                let name = field.name+'['+ idx +']';\n                formDataMultipart.append( name, file, file.name );\n            });\n        });\n        \n        ajaxOptions.body = formDataMultipart;\n    }\n\n    if( ajaxOptions.method === 'GET' ){\n\n        // FETCH WITH \"GET\" METHOD CAN'T HAVE \"body\". SO IT IS APPENDED TO THE URL\n        ajaxOptions.url += ( /\\?/.test(ajaxOptions.url) ? '&' : '?' ) + _serialize( ajaxOptions.body );\n        delete ajaxOptions.body;\n\n    } else {\n\n        if( ajaxOptions.headers['Content-Type'].indexOf('application/x-www-form-urlencoded') > -1 ){\n            // POST A NORMAL FORM\n            ajaxOptions.body = _serialize( ajaxOptions.body );\n        } else if( !isMultipart ){\n            // POST A JSON STRING\n            ajaxOptions.body = JSON.stringify(ajaxOptions.body);\n        }\n\n    }\n\n    ajaxOptions.headers = new Headers( ajaxOptions.headers );\n\n    if ( ajaxOptions.timeout > 0 ) {\n        const controller = new AbortController();\n        const signal = controller.signal;\n\n        ajaxOptions.signal = signal;\n\n        timeoutTimer = window.setTimeout(function() {\n            controller.abort();\n        }, ajaxOptions.timeout);\n    }\n\n    fetch(ajaxOptions.url, ajaxOptions)\n        .then(function( response ){\n\n            let getFetchMethod = function( response ){\n                let contentType = response.headers.get('Content-Type'),\n                    methodName = 'blob';\n\n                if( contentType.indexOf('application/json') > -1 ){\n                    methodName = 'json';\n                } else if( contentType.indexOf('text/') > -1 ){\n                    methodName = 'text';\n                }\n                \n                return methodName;\n            };\n            let fetchMethod = getFetchMethod( response );\n            return response[fetchMethod]();\n\n        })\n        .then(function( data ){\n\n            _executeCallback.call( self, formOptions.onSubmitSuccess, data );\n\n        })\n        .catch(function( error ){\n\n            _executeCallback.call( self, formOptions.onSubmitError, error );\n\n        })\n        .finally(function(){\n\n            if( timeoutTimer ){\n                window.clearTimeout( timeoutTimer );\n            }\n            btnEl.disabled = false;\n            _executeCallback.call( self, formOptions.onSubmitComplete );\n\n        });\n    \n}\n","\nimport { _executeCallback, _isDOMNode, _mergeObjects, _validateFieldObjDefault } from './helper.js';\n\nexport function validateField( fieldElem, fieldOptionsObj = {} ){\n\n    const self = this,\n          fieldEl = (typeof fieldElem === 'string' ? self.formEl.querySelector(fieldElem) : fieldElem);\n    let obj = _mergeObjects({}, _validateFieldObjDefault);\n\n    if( _isDOMNode(fieldEl) ){\n\n        obj = self.isValidField( fieldEl, fieldOptionsObj );\n        let fieldOptions = _mergeObjects({}, self.options.fieldOptions, fieldOptionsObj);\n        _executeCallback.call( self, fieldOptions.onValidation, [obj] );\n        \n    }\n\n    return obj;\n    \n}\n","\nimport { _executeCallback, _mergeObjects } from './helper.js';\n\nexport function validateForm( optionsObj = {} ){\n\n    const self = this,\n          obj = self.isValidForm( optionsObj );\n    let options = _mergeObjects({}, self.options, optionsObj);\n\n    _executeCallback.call( self, options.fieldOptions.onValidation, obj.fields );\n\n    return obj;\n    \n}\n"],"sourceRoot":""}