{"version":3,"sources":["webpack:///webpack/bootstrap","webpack:///./src/modules/helper.js","webpack:///./src/modules/validationRules.js","webpack:///./src/modules/checkDirtyField.js","webpack:///./src/index.js","webpack:///./src/modules/options.js","webpack:///./src/modules/listenerCallbacks.js","webpack:///./src/modules/destroy.js","webpack:///./src/modules/getFormJSON.js","webpack:///./src/modules/isValidField.js","webpack:///./src/modules/isValid.js","webpack:///./src/modules/isValidForm.js","webpack:///./src/modules/submit.js","webpack:///./src/modules/xhrCall.js","webpack:///./src/modules/init.js","webpack:///./src/modules/initFieldsFirstLoad.js"],"names":["installedModules","__webpack_require__","moduleId","exports","module","i","l","modules","call","m","c","d","name","getter","o","Object","defineProperty","enumerable","get","r","Symbol","toStringTag","value","t","mode","__esModule","ns","create","key","bind","n","default","object","property","prototype","hasOwnProperty","p","s","e","iterator","constructor","_isDOMNode","_fieldsStringSelector","_addClass","element","cssClasses","split","forEach","className","classList","add","node","Element","isPrototypeOf","_isNodeList","nodeList","NodeList","_isPlainObject","toString","_checkFormEl","formEl","isString","_typeof","isFormSelector","document","querySelector","tagName","toLowerCase","result","_mergeObjects","out","arguments","length","obj","isArray","isObject","_removeClass","remove","_serialize","keys","reduce","a","k","push","encodeURIComponent","join","_toCamelCase","string","replace","all","letter","toUpperCase","validationRules","cap","test","date","dateIT","dateISO8601ext","email","fiscalCode","hexColor","landlineNumber","mobileNumber","number","numberFloat","numberInteger","password","url","username","vatNumber","_validationRulesAttributes","checkbox","data","isValid","fieldEl","checked","dataChecksEl","closest","this","checks","attrValue","getAttribute","JSON","parse","checkedElLength","querySelectorAll","Error","equalTo","checkFromEl","exactLength","file","MIMEtype","accept","RegExp","Array","from","files","exceedMaxFileSize","fieldOptions","maxFileSize","size","isAcceptedFileType","type","valueL","max","maxlength","min","minlength","pattern","fieldPattern","radio","fieldChecked","requireMoreEl","trim","requireMore","requiredFrom","isValidValue","reqMoreEl","checkedEl","required","requiredFromEl","id","validReqFrom","focusOnRelated","focus","_checkDirtyField","fields","cssClass","_helper","defaultFieldOptions","dirty","field","configurable","writable","_options","_validationRules","_listenerCallbacks2","_destroy2","_getFormJSON2","_isValidField2","_isValidForm2","_submit2","_init2","_listenerCallbacks","WeakMap","Form","optionsObj","TypeError","argsL","checkFormEl","options","set","charCount","_charCountCallback","validation","_validationCallback","keypressMaxlength","_keypressMaxlengthCallback","pastePrevent","_pastePreventCallback","submit","_submitCallback","_init","destroy","customFn","getFormJSON","isValidField","isValidForm","event","rulesObj","window","FormJS","checkDirtyField","error","valid","handleFileUpload","handleValidation","onPastePrevented","onValidation","preventPasteFields","skipUIfeedback","strictHtmlValidation","validateOnEvents","formOptions","ajaxOptions","async","cache","contentType","headers","X-Requested-With","method","timeout","location","href","ajaxSubmit","beforeSend","handleSubmit","onSubmitComplete","onSubmitError","onSubmitSuccess","usedChars","textContent","target","matches","maxLength","keyPressed","which","keyCode","indexOf","callbacks","functionOpt","preventDefault","cbFn","eventName","isFieldForChangeEvent","onValidationOpt","callbackData","self","validationListenerNames","charCountElements","useCapturing","removeEventListener","listenerCallbacks","formData","formFieldsEl","filteredFields","filter","elem","isCheckbox","isRadio","isSelect","checkedFieldsEl","option","selected","fieldElem","fieldOptionsObj","isRequired","isRequiredFrom","isValidateIfFilled","containerEl","_isValid","_checkDirtyField2","_isValid2","fieldType","fieldValue","attrValidations","attrValidationsResult","attributes","sort","b","attr","attrName","isTypeValueWithFn","isAttrNameWithFn","extraValObj","unshift","item","fieldName","fieldData","fieldResult","eventPreventDefault","enableBtn","btnEl","disabled","formValidation","isAjaxForm","callbacksValidation","formDataJSON","callbacksBeforeSend","beforeSendOpt","beforeSendData","stopExecution","stopCallbackLoop","beforeSendFn","_xhrCall","submitEvent","Event","bubbles","cancelable","dispatchEvent","_xhrCall2","timeoutTimer","xhrOptions","formDataMultipart","FormData","append","idx","XHR","XMLHttpRequest","parseResponse","xhr","responseText","responseXML","isXML","DOMParser","parseFromString","errorFn","ajaxData","errorThrown","statusText","status","response","addEventListener","responseData","readyStateOK","readyState","statusOK","dataOrXHR","XHRorResponse","clearTimeout","Date","getTime","open","xhrFields","h","mimeType","overrideMimeType","setRequestHeader","send","setTimeout","abort","_initFieldsFirstLoad","_initFieldsFirstLoad2","formFields","isCheckboxOrRadio"],"mappings":"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","file":"formJS.min.js","sourcesContent":[" \t// The module cache\n \tvar installedModules = {};\n\n \t// The require function\n \tfunction __webpack_require__(moduleId) {\n\n \t\t// Check if module is in cache\n \t\tif(installedModules[moduleId]) {\n \t\t\treturn installedModules[moduleId].exports;\n \t\t}\n \t\t// Create a new module (and put it into the cache)\n \t\tvar module = installedModules[moduleId] = {\n \t\t\ti: moduleId,\n \t\t\tl: false,\n \t\t\texports: {}\n \t\t};\n\n \t\t// Execute the module function\n \t\tmodules[moduleId].call(module.exports, module, module.exports, __webpack_require__);\n\n \t\t// Flag the module as loaded\n \t\tmodule.l = true;\n\n \t\t// Return the exports of the module\n \t\treturn module.exports;\n \t}\n\n\n \t// expose the modules object (__webpack_modules__)\n \t__webpack_require__.m = modules;\n\n \t// expose the module cache\n \t__webpack_require__.c = installedModules;\n\n \t// define getter function for harmony exports\n \t__webpack_require__.d = function(exports, name, getter) {\n \t\tif(!__webpack_require__.o(exports, name)) {\n \t\t\tObject.defineProperty(exports, name, { enumerable: true, get: getter });\n \t\t}\n \t};\n\n \t// define __esModule on exports\n \t__webpack_require__.r = function(exports) {\n \t\tif(typeof Symbol !== 'undefined' && Symbol.toStringTag) {\n \t\t\tObject.defineProperty(exports, Symbol.toStringTag, { value: 'Module' });\n \t\t}\n \t\tObject.defineProperty(exports, '__esModule', { value: true });\n \t};\n\n \t// create a fake namespace object\n \t// mode & 1: value is a module id, require it\n \t// mode & 2: merge all properties of value into the ns\n \t// mode & 4: return value when already ns object\n \t// mode & 8|1: behave like require\n \t__webpack_require__.t = function(value, mode) {\n \t\tif(mode & 1) value = __webpack_require__(value);\n \t\tif(mode & 8) return value;\n \t\tif((mode & 4) && typeof value === 'object' && value && value.__esModule) return value;\n \t\tvar ns = Object.create(null);\n \t\t__webpack_require__.r(ns);\n \t\tObject.defineProperty(ns, 'default', { enumerable: true, value: value });\n \t\tif(mode & 2 && typeof value != 'string') for(var key in value) __webpack_require__.d(ns, key, function(key) { return value[key]; }.bind(null, key));\n \t\treturn ns;\n \t};\n\n \t// getDefaultExport function for compatibility with non-harmony modules\n \t__webpack_require__.n = function(module) {\n \t\tvar getter = module && module.__esModule ?\n \t\t\tfunction getDefault() { return module['default']; } :\n \t\t\tfunction getModuleExports() { return module; };\n \t\t__webpack_require__.d(getter, 'a', getter);\n \t\treturn getter;\n \t};\n\n \t// Object.prototype.hasOwnProperty.call\n \t__webpack_require__.o = function(object, property) { return Object.prototype.hasOwnProperty.call(object, property); };\n\n \t// __webpack_public_path__\n \t__webpack_require__.p = \"\";\n\n\n \t// Load entry module and return exports\n \treturn __webpack_require__(__webpack_require__.s = 3);\n","export const\n\n_fieldsStringSelector = 'input:not([type=\"reset\"]):not([type=\"submit\"]):not([type=button]):not([type=hidden]), select, textarea',\n\n_addClass = function( element, cssClasses ){\n    cssClasses.split(' ').forEach(function(className){\n        element.classList.add( className );\n    });\n},\n\n_isDOMNode = function( node ){\n    return Element.prototype.isPrototypeOf( node );\n},\n\n_isNodeList = function( nodeList ){\n    return NodeList.prototype.isPrototypeOf( nodeList );\n},\n\n_isPlainObject = function( object ){\n    return Object.prototype.toString.call( object ) === '[object Object]';\n},\n\n_checkFormEl = function( formEl ){\n    let isString = typeof formEl,\n        isValidNodeSelector = isString === 'string' && _isDOMNode(document.querySelector(formEl)),\n        isFormSelector = isValidNodeSelector && document.querySelector(formEl).tagName.toLowerCase() === 'form',\n        obj = {\n            result: _isDOMNode(formEl) || isFormSelector,\n            element: (isString === 'string' ? document.querySelector(formEl) : formEl)\n        };\n\n    return obj;\n},\n\n_mergeObjects = function( out = {} ){\n    for(let i=1; i<arguments.length; i++){\n        let obj = arguments[i];\n\n        if(!obj){ continue; }\n\n        for(let key in obj){\n            let isArray = Object.prototype.toString.call(obj[key]) === \"[object Array]\";\n            let isObject = Object.prototype.toString.call(obj[key]) === \"[object Object]\";\n\n            if( (!out.hasOwnProperty(key) && !isObject) || isArray ){\n                out[key] = obj[key];\n            } else {\n                if( isObject ){\n                    out[key] = _mergeObjects(out[key], obj[key]);\n                }\n            }\n        }\n    }\n\n    return out;\n},\n\n_removeClass = function( element, cssClasses ){\n    cssClasses.split(' ').forEach(function(className){\n        element.classList.remove( className );\n    });\n},\n\n_serialize = function( obj ){\n    var objToString = (\n            (obj && typeof obj === 'object' && obj.constructor === Object) ? \n            Object.keys(obj).reduce(function(a,k){a.push(k+'='+encodeURIComponent(obj[k]));return a},[]).join('&') : \n            obj\n    );\n    return objToString;\n},\n\n_toCamelCase = function( string ){\n    return string.replace(/-([a-z])/ig, function(all, letter){ return letter.toUpperCase(); });\n};","export const validationRules = {\n            \n    cap: function( string ){\n        // VALID ITALIAN CAP WITH 5 DIGITS\n        return /^[0-9]{5}$/.test( string );\n    },\n    \n    date: function( string ){\n        // DATE AS ITALIAN SYNTAX       DD MM YYYY | DD/MM/YYYY | DD.MM.YYYY | DD-MM-YYYY\n        // OR AS ISO 8601 DATE FORMAT   YYYY MM DD | YYYY/MM/DD | YYYY.MM.DD | YYYY-MM-DD\n\n        let dateIT = /^(((0[1-9]|[12]\\d|3[01])[ \\/\\-.](0[13578]|1[02])[ \\/\\-.]((19|[2-9]\\d)\\d{2}))|((0[1-9]|[12]\\d|30)[ \\/\\-.](0[13456789]|1[012])[ \\/\\-.]((19|[2-9]\\d)\\d{2}))|((0[1-9]|1\\d|2[0-8])[ \\/\\-.]02[ \\/\\-.]((19|[2-9]\\d)\\d{2}))|(29[ \\/\\-.]02[ \\/\\-.]((1[6-9]|[2-9]\\d)(0[48]|[2468][048]|[13579][26])|((16|[2468][048]|[3579][26])00))))$/g.test( string ),\n\n            dateISO8601ext = /^(((19|[2-9]\\d)\\d{2})[ \\/\\-.](0[13578]|1[02])[ \\/\\-.](0[1-9]|[12]\\d|3[01]))|(((19|[2-9]\\d)\\d{2})[ \\/\\-.](0[13456789]|1[012])[ \\/\\-.](0[1-9]|[12]\\d|30))|(((19|[2-9]\\d)\\d{2})[ \\/\\-.]02[ \\/\\-.](0[1-9]|1\\d|2[0-8]))|(((1[6-9]|[2-9]\\d)(0[48]|[2468][048]|[13579][26])|((16|[2468][048]|[3579][26])00))[ \\/\\-.]02[ \\/\\-.]29)$/g.test( string );\n\n        return dateIT || dateISO8601ext;\n    },\n    \n    email: function( string ){\n        // FROM https://emailregex.com\n        // AS FOR RFC 5322 Official Standard\n        // EMAIL MUST BE AT LEAST ( FOR EXAMPLE ):\n        // a@a.aa\n        return /^(([^<>()\\[\\]\\\\.,;:\\s@\"]+(\\.[^<>()\\[\\]\\\\.,;:\\s@\"]+)*)|(\".+\"))@((\\[[0-9]{1,3}\\.[0-9]{1,3}\\.[0-9]{1,3}\\.[0-9]{1,3}])|(([a-zA-Z\\-0-9]+\\.)+[a-zA-Z]{2,}))$/.test( string );\n    },\n    \n    fiscalCode: function( string ){\n        // http://blog.marketto.it/2016/01/regex-validazione-codice-fiscale-con-omocodia/\n        return /^(?:[B-DF-HJ-NP-TV-Z](?:[AEIOU]{2}|[AEIOU]X)|[AEIOU]{2}X|[B-DF-HJ-NP-TV-Z]{2}[A-Z]){2}[\\dLMNP-V]{2}(?:[A-EHLMPR-T](?:[04LQ][1-9MNP-V]|[1256LMRS][\\dLMNP-V])|[DHPS][37PT][0L]|[ACELMRT][37PT][01LM])(?:[A-MZ][1-9MNP-V][\\dLMNP-V]{2}|[A-M][0L](?:[\\dLMNP-V][1-9MNP-V]|[1-9MNP-V][0L]))[A-Z]$/i.test( string );\n    },\n    \n    hexColor: function( string ){\n        // HEX COLOR WITH/WITHOUT #\n        // CAN BE 3 OR 6 CHARACTERS ( fff | FFF | ffffff | FFFFFF )\n        return /^#?([a-fA-F0-9]{6}|[a-fA-F0-9]{3})$/.test( string );\n    },\n    \n    landlineNumber: function( string ){\n        // LANDLINE PREFIX:\n        // +39 | 0039 | not-set ( ALSO WITH INTERNATIONAL PREFIXES WITH 2 DIGITS )\n        // LANDLINE NUMBER MUST START WITH 0 ( AS FOR ITALIAN ONES ):\n        // 1234567890 | 12 34567890 | 123456789 | 1234 56789 ( ALSO WITH . - / AS SEPARATOR )\n        return /^((00|\\+)\\d{2}[\\-\\. ]??)??(((0[\\d]{1,4}))([\\/\\-\\. ]){0,1}([\\d, ]{5,10}))$/.test( string ); \n    },\n    \n    mobileNumber: function( string ){\n        // +39 | 0039 | 39 | not-set ( ALSO WITH ALL INTERNATIONAL PREFIXES WITH 2 DIGITS )\n        // MOBILE NUMBER MUST START WITH 3\n        // 3234567890 | 323 4567890 | 323 45 67 890 ( ALSO WITH . OR - AS SEPARATOR )\n        return /^((00|\\+)??\\d{2}[\\-\\. ]??)??3\\d{2}[\\-\\. ]??(\\d{6,7}|\\d{2}[\\-\\. ]??\\d{2}[\\-\\. ]??\\d{3})$/.test( string );\n    },\n    \n    number: function( string ){\n        // ALL NUMBERS ( INTEGERS AND FLOATING )\n        // VALID NUMBERS: 123 | 123.456 | .123                \n        return /[+-]?([0-9]*[.])?[0-9]+/.test( string );\n    },\n    \n    numberFloat: function( string ){\n        // ONLY FLOATING NUMBERS\n        // VALID NUMBERS: 123.456 | .123                \n        return /[+-]?([0-9]*[.])[0-9]+/.test( string );\n    },\n    \n    numberInteger: function( string ){\n        // ONLY INTEGER NUMBERS                \n        return /^\\d+$/.test( string );\n    },\n    \n    password: function( string ){\n        // PASSWORD ( NO SPECIAL CHARACTERS ) WITH AT LEAST:\n        // ONE DIGIT + ONE LOWERCASE + ONE UPPERCASE + MIN LENGTH OF 8 CHARACTERS\n        return /^(?=.*[0-9])(?=.*[a-z])(?=.*[A-Z])[0-9a-zA-Z]{8,}$/.test(string);\n    },\n    \n    url: function( string ){\n        // MUST NOT CONTAIN PARAMETERS:\n        // www.mysite.com/index.html         --> VALID URL\n        // www.mysite.com/index.html?v=hello --> INVALID URL\n        return /^((https?|ftp|file):\\/\\/)?([\\da-z\\.-]+)\\.([a-z\\.]{2,6})([\\/\\w \\.-]*)*\\/?$/.test( string );\n    },\n    \n    username: function( string ){\n        // USERNAME WITH LETTERS/NUMBERS/UNDERSCORE AND . - @ WITH MIN LENGTH 3 AND MAX LENGTH 24\n        //return /^[\\w\\.\\-\\@]{3,24}$/.test( string );\n        \n        // USERNAME MUST START WITH A LETTER/NUMBER/UNDERSCORE AND CAN ALSO CONTAIN . - @ WITH MIN LENGTH 3 AND MAX LENGTH\n        return /^(?=\\w)(?=[\\-\\.\\@]?)[\\w\\-\\.\\@]{3,24}$/.test( string );\n    },\n    \n    vatNumber: function( string ){\n        // VAT NUMBER CAN CONTAIN OR NOT THE 'IT' STRING AND THEN 11 NUMBERS\n        return /^(IT){0,1}[0-9]{11}$/i.test( string );\n    }\n    \n};\n\nexport const _validationRulesAttributes = {\n\n    checkbox: function( data ){\n        let isValid = data.fieldEl.checked,\n            formEl = data.fieldEl.closest('form'),\n            dataChecksEl = formEl.querySelector('[name=\"' + data.fieldEl.name + '\"][data-checks]');\n\n        if( dataChecksEl !== null ){\n            isValid = this.checks({ attrValue: dataChecksEl.getAttribute('data-checks'), fieldEl: dataChecksEl});\n        }\n\n        return isValid;\n    },\n\n    checks: function( data ){\n        try{\n            let attrValue = JSON.parse(data.attrValue),\n                fieldEl = data.fieldEl,\n                formEl = fieldEl.closest('form'),\n                checkedElLength = formEl.querySelectorAll('[name=\"' + fieldEl.name + '\"]:checked').length;\n\n            return checkedElLength >= attrValue[0] && checkedElLength <= attrValue[1];\n        } catch(e){\n            throw new Error('\"data-checks\" attribute is not a valid array!');\n        }\n    },\n\n    equalTo: function( data ){\n        let fieldEl = data.fieldEl,\n            formEl = fieldEl.closest('form'),\n            checkFromEl = formEl.querySelector( '[name=\"' + fieldEl.getAttribute('data-equal-to') + '\"]' );\n\n        return fieldEl.value === checkFromEl.value;\n    },\n            \n    exactLength: function( data ){\n        return data.fieldEl.value.length === (data.attrValue * 1);\n    },\n\n    file: function( data ){\n        let isValid = true,\n            fieldEl = data.fieldEl,\n            MIMEtype = (fieldEl.accept ? new RegExp(fieldEl.accept.replace( '*', '[^\\\\/,]+' )) : null),\n            filesList = Array.from(fieldEl.files);\n\n        filesList.forEach(function( file ){\n            let exceedMaxFileSize = data.fieldOptions.maxFileSize > 0 && (file.size/1024/1024) > data.fieldOptions.maxFileSize,\n                isAcceptedFileType = (MIMEtype !== null ? MIMEtype.test(file.type) : true);\n\n            if( exceedMaxFileSize || !isAcceptedFileType ){\n                isValid = false;\n            }\n        });\n\n        return isValid;\n    },\n\n    length: function( data ){\n        try{\n            var valueL = data.fieldEl.value.length,\n                attrValue = JSON.parse(data.attrValue);\n\n            return valueL >= attrValue[0] && valueL <= attrValue[1];\n        } catch(e){\n            throw new Error('\"data-length\" attribute is not a valid array!');\n        }\n    },\n    \n    max: function( data ){\n        var value = data.fieldEl.value * 1,\n            maxVal = data.attrValue * 1;\n        \n        return value <= maxVal;\n    },\n    \n    maxlength: function( data ){\n        return data.fieldEl.value.length <= (data.attrValue * 1);\n    },\n    \n    min: function( data ){\n        var value = data.fieldEl.value * 1,\n            minVal = data.attrValue * 1;\n        \n        return value >= minVal;\n    },\n\n    minlength: function( data ){\n        return data.fieldEl.value.length >= (data.attrValue * 1);\n    },\n\n    pattern: function( data ){\n        let fieldEl = data.fieldEl,\n            fieldPattern = fieldEl.pattern,\n            fieldRegex = new RegExp( fieldPattern );\n\n        return fieldRegex.test( fieldEl.value );\n    },\n\n    radio: function( data ){\n        let fieldEl = data.fieldEl,\n            formEl = fieldEl.closest('form'),\n            fieldChecked = formEl.querySelector( '[name=\"'+ fieldEl.name +'\"]:checked' ),\n            requireMoreEl = formEl.querySelector('[name=\"' + fieldEl.name + '\"][data-require-more]'),\n            isValid = fieldChecked !== null && fieldChecked.value.trim().length > 0;\n\n        if( requireMoreEl !== null ){\n            isValid = this.requireMore({fieldEl: requireMoreEl, fieldOptions: data.fieldOptions});\n        }\n\n        return isValid;\n    },\n\n    requiredFrom: function( data ){\n        let fieldEl = data.fieldEl,\n            formEl = fieldEl.closest('form'),\n            isValidValue = fieldEl.value.trim().length > 0,\n            reqMoreEl = formEl.querySelector( fieldEl.getAttribute('data-required-from') ),\n            checkedEl = formEl.querySelector( '[name=\"'+ reqMoreEl.name +'\"]:checked' );\n        \n        if( isValidValue ){\n\n            reqMoreEl.checked = true;\n            \n            if( reqMoreEl.required ){\n                fieldEl.required = true;\n            }\n\n        }\n\n        if( !reqMoreEl.checked ){\n            return true;\n        }\n        \n        return (reqMoreEl.required && reqMoreEl.checked ? isValidValue : (reqMoreEl.required ? checkedEl !== null : true));\n    },\n\n    requireMore: function( data ){\n        let requireMoreEl = data.fieldEl,\n            formEl = requireMoreEl.closest('form'),\n            requiredFromEl = formEl.querySelector('[data-required-from=\"#'+ requireMoreEl.id +'\"]'),\n            fieldChecked = formEl.querySelector( '[name=\"'+ requireMoreEl.name +'\"]:checked' ),\n            validReqFrom = true;\n        \n        if( requiredFromEl !== null ){\n            requiredFromEl.required = false;\n\n            if( requireMoreEl.checked ){\n                requiredFromEl.required = true;\n\n                if( data.fieldOptions.focusOnRelated ){\n                    requiredFromEl.focus();\n                } else {\n                    if( requireMoreEl.required && requiredFromEl.value.trim().length === 0 ){\n                        validReqFrom = false;\n                    }\n                }\n            } else {\n                requiredFromEl.value = '';\n            }\n        }\n\n        return fieldChecked && fieldChecked.value.trim().length > 0 && validReqFrom;\n    }\n    \n};","import { _addClass, _isNodeList, _removeClass } from './helper.js';\n\nexport function _checkDirtyField( fields, cssClass ){ \n    var fields = (_isNodeList(fields) ? Array.from( fields ) : [fields]),\n        cssClasses = cssClass || defaultFieldOptions.cssClasses.dirty;\n    \n    fields.forEach(function(field){\n        if( field.type !== 'checkbox' && field.type !== 'radio' ){\n            if( field.value ){\n                \n                _addClass( field, cssClasses );\n                \n            } else {\n                \n                _removeClass( field, cssClasses );\n                \n            }\n        }\n    });\n}","/**! formJS v2.2.1 | Valerio Di Punzio (@SimplySayHi) | https://valeriodipunzio.com/plugins/formJS/ | https://github.com/SimplySayHi/formJS | MIT license */\r\n\r\nimport { _checkFormEl, _isNodeList, _mergeObjects } from './modules/helper.js';\r\n\r\nimport { options }              from './modules/options.js';\r\nimport { validationRules }      from './modules/validationRules.js';\r\n\r\nimport { _charCountCallback, _keypressMaxlengthCallback, _pastePreventCallback, _submitCallback, _validationCallback } from './modules/listenerCallbacks.js';\r\n\r\nimport { destroy }              from './modules/destroy.js';\r\nimport { getFormJSON }          from './modules/getFormJSON.js';\r\nimport { isValidField }         from './modules/isValidField.js';\r\nimport { isValidForm }          from './modules/isValidForm.js';\r\nimport { submit }               from './modules/submit.js';\r\n\r\nimport { _init }                from './modules/init.js';\r\n\r\nconst _listenerCallbacks = new WeakMap();\r\n\r\nclass Form {\r\n    constructor( formEl, optionsObj = {} ){\r\n        let argsL = arguments.length,\r\n            checkFormEl = _checkFormEl(formEl);\r\n\r\n        if( argsL === 0 || (argsL > 0 && !formEl) ){ throw new Error('First argument \"formEl\" is missing or falsy!'); }\r\n        if( _isNodeList(formEl) ){ throw new Error('First argument \"formEl\" must be a single DOM node or a form CSS selector, not a NodeList!'); }\r\n        if( !checkFormEl.result ){ throw new Error('First argument \"formEl\" is not a DOM node nor a form CSS selector!'); }\r\n\r\n        this.formEl = checkFormEl.element;\r\n        this.options = _mergeObjects({}, optionsObj, Form.prototype.options);\r\n\r\n        _listenerCallbacks.set(this, {\r\n            charCount:          _charCountCallback,\r\n            validation:         _validationCallback.bind(this),\r\n            keypressMaxlength:  _keypressMaxlengthCallback.bind(this),\r\n            pastePrevent:       _pastePreventCallback.bind(this),\r\n            submit:             _submitCallback.bind(this)\r\n        });\r\n\r\n        _init.call( this );\r\n    }\r\n\r\n    get listenerCallbacks(){\r\n        return _listenerCallbacks.get(this);\r\n    }\r\n\r\n    destroy(){\r\n        destroy.call(this);\r\n    }\r\n    \r\n    getFormJSON( customFn ){\r\n        return getFormJSON.call(this, customFn);\r\n    }\r\n    \r\n    isValidField( fieldEl, fieldOptions ){\r\n        return isValidField.call(this, fieldEl, fieldOptions);\r\n    }\r\n    \r\n    isValidForm( optionsObj ){\r\n        return isValidForm.call(this, optionsObj);\r\n    }\r\n\r\n    submit( optionsObj, event ){\r\n        submit.call(this, optionsObj, event);\r\n    }\r\n    \r\n    static addValidationRules( rulesObj ){\r\n        this.prototype.validationRules = _mergeObjects({}, rulesObj, this.prototype.validationRules);\r\n    }\r\n    \r\n    static setOptions( optionsObj ){\r\n        this.prototype.options = _mergeObjects({}, optionsObj, this.prototype.options);\r\n    }\r\n}\r\n\r\nForm.prototype.validationRules = validationRules;\r\n\r\nForm.prototype.options = options;\r\n\r\nif( !window.Form ){ window.Form = Form; }\r\nif( !window.FormJS ) { window.FormJS = Form; }\r\n","export const options = {\n    fieldOptions: {\n        checkDirtyField:        false,\n        cssClasses: {\n            dirty:              'dirty-field',\n            error:              'has-error',\n            valid:              'is-valid'\n        },\n        focusOnRelated:         true,\n        handleFileUpload:       true,\n        handleValidation:       true,\n        maxFileSize:            10,\n        onPastePrevented:       null,\n        onValidation:           null,\n        preventPasteFields:     '[type=\"password\"], [data-equal-to]',\n        skipUIfeedback:         false,\n        strictHtmlValidation:   true,\n        validateOnEvents:       'input change'\n    },\n    formOptions: {\n        ajaxOptions:            {\n            async:              true,\n            cache:              false,\n            contentType:        'application/x-www-form-urlencoded; charset=UTF-8',\n            headers: {\n                                'X-Requested-With': 'XMLHttpRequest'\n            },\n            method:             'POST',\n            timeout:            0,\n            url:                location.href\n        },\n        ajaxSubmit:             true,\n        beforeSend:             null,\n        getFormJSON:            null,\n        handleSubmit:           true,\n        onSubmitComplete:       null,\n        onSubmitError:          null,\n        onSubmitSuccess:        null\n    }\n}","import { _fieldsStringSelector } from './helper.js';\n\nexport const \n\n_charCountCallback = function(){\n    let field = this,\n        usedChars = field.value.length;\n\n    field.closest('[data-formjs-question]').querySelector('[data-char-length]').textContent = usedChars;\n},\n\n_keypressMaxlengthCallback = function( event ){\n    const fieldEl = event.target;\n    \n    if( fieldEl.matches( '[maxlength]' ) ){\n        const maxLength = fieldEl.maxLength * 1,\n              keyPressed = event.which || event.keyCode,\n              allowedKeys = [8, 37, 38, 39, 46];\n\n        if( fieldEl.value.length >= maxLength && allowedKeys.indexOf(keyPressed) === -1 ){\n            return false;\n        }\n    }\n},\n\n_pastePreventCallback = function( event ){\n    const fieldEl = event.target;\n    let fieldOptions = this.options.fieldOptions;\n\n    if( fieldEl.matches( fieldOptions.preventPasteFields ) ){\n        let callbacks = [],\n            functionOpt = fieldOptions.onPastePrevented;\n\n        event.preventDefault();\n\n        if( typeof functionOpt === 'function' ){\n            callbacks.push( functionOpt );\n        } else if( Array.isArray(functionOpt) ) {\n            callbacks = functionOpt;\n        }\n\n        callbacks.forEach(function(cbFn){\n            cbFn( fieldEl );\n        });\n    }\n},\n\n_submitCallback = function( event ){\n    const self = this;\n    self.submit( self.options, event );\n},\n\n_validationCallback = function( event ){\n    const self = this,\n          eventName = event.type,\n          fieldEl = event.target;\n\n    let fieldOptions = self.options.fieldOptions;\n\n    if( fieldEl.matches( _fieldsStringSelector ) ){\n        const isFieldForChangeEvent = fieldEl.matches( 'select, [type=\"radio\"], [type=\"checkbox\"], [type=\"file\"]' );\n        \n        if(\n            (isFieldForChangeEvent && eventName === 'change') ||\n            (!isFieldForChangeEvent && eventName === 'input') ||\n            (eventName !== 'change' && eventName !== 'input')\n        ){\n            \n            let callbacks = [],\n                onValidationOpt = fieldOptions.onValidation;\n\n            const validationResult = self.isValidField( fieldEl, fieldOptions );\n            const callbackData = [ { field: fieldEl, result: validationResult} ];\n\n            if( typeof onValidationOpt === 'function' ){\n                callbacks.push( onValidationOpt );\n            } else if( Array.isArray(onValidationOpt) ) {\n                callbacks = onValidationOpt;\n            }\n\n            callbacks.forEach(function(cbFn){\n                cbFn( callbackData );\n            });\n        }\n    }\n};","export function destroy(){\n    const self = this,\n          formEl = self.formEl,\n          validationListenerNames = self.options.fieldOptions.validateOnEvents,\n          charCountElements = formEl.querySelectorAll('[data-char-count]');\n\n    validationListenerNames.split(' ').forEach(function( eventName ){\n        let useCapturing = (eventName === 'blur' ? true : false);\n        formEl.removeEventListener(eventName, self.listenerCallbacks.validation, useCapturing);\n    });\n\n    if( self.options.fieldOptions.preventPasteFields ){\n        formEl.removeEventListener('paste', self.listenerCallbacks.pastePrevent, false);\n    }\n\n    if( self.options.fieldOptions.strictHtmlValidation ){\n        formEl.removeEventListener('keypress', self.listenerCallbacks.keypressMaxlength, false);\n    }\n\n    if( charCountElements.length > 0 ){\n        Array.from( charCountElements ).forEach(function(field){\n            field.removeEventListener('input', self.listenerCallbacks.charCount, false);\n        });\n    }\n\n    if( self.options.formOptions.handleSubmit ){\n        formEl.removeEventListener('submit', self.listenerCallbacks.submit);\n    }\n}","export function getFormJSON( customFn = this.options.formOptions.getFormJSON ){\n    let formData = {},\n        self = this,\n        formEl = self.formEl,\n        formFieldsEl = formEl.querySelectorAll('input, select, textarea'),\n        excludeSelectors = ':not([type=\"reset\"]):not([type=\"submit\"]):not([type=\"button\"]):not([type=\"file\"]):not([data-exclude-json])',\n        filteredFields = Array.from(formFieldsEl).filter(elem => elem.matches(excludeSelectors) );\n    \n    if( typeof customFn === 'function' ){\n\n        formData = customFn.call( self, filteredFields );\n\n    } else {\n\n        filteredFields.forEach(function( fieldEl ){\n            let isCheckbox = fieldEl.type === 'checkbox',\n                isRadio = fieldEl.type === 'radio',\n                isSelect = fieldEl.matches('select'),\n                name = fieldEl.name,\n                value = ( isCheckbox || isSelect ? [] : fieldEl.value );\n            \n            if( isCheckbox || isRadio ){\n                let checkedFieldsEl = Array.from( formEl.querySelectorAll('[name=\"'+ name +'\"]:checked') );\n                \n                if( isRadio ){\n                    \n                    value = (checkedFieldsEl.length === 0 ? null : checkedFieldsEl[0].value);\n                    \n                } else {\n                    \n                    checkedFieldsEl.forEach(fieldEl => {\n                        value.push( fieldEl.value );\n                    });\n                    \n                }\n            } else if( isSelect ){\n\n                let optionsList = Array.from( fieldEl.options ).filter(option => option.selected);\n                optionsList.forEach(fieldEl => {\n                    value.push( fieldEl.value );\n                });\n            }\n\n            formData[ name ] = value;\n        });\n\n    }\n    \n    return formData;\n}","import { _addClass, _mergeObjects, _removeClass } from './helper.js';\n\nimport { _isValid }             from './isValid.js';\nimport { _checkDirtyField }     from './checkDirtyField.js';\n\nexport function isValidField( fieldElem, fieldOptionsObj = {} ){\n    if( !fieldElem ){ return false; }\n\n    const self = this,\n          fieldEl = (typeof fieldElem === 'string' ? self.formEl.querySelector(fieldElem) : fieldElem);\n\n    let options =           _mergeObjects( {}, fieldOptionsObj, self.options.fieldOptions ),\n        \n        //fieldType =         fieldEl.type,\n        isValidValue =      fieldEl.value.trim().length > 0,\n        \n        isRequired =        fieldEl.required,\n        isRequiredFrom =    fieldEl.matches( '[data-required-from]' ),\n        reqMoreEl =         self.formEl.querySelector( fieldEl.getAttribute('data-required-from') ),\n        isValidateIfFilled =fieldEl.matches( '[data-validate-if-filled]' ),\n        isValid =           isValidValue,\n        \n        containerEl =       fieldEl.closest('[data-formjs-question]');\n    \n    if(\n        (!isRequired && !isValidateIfFilled && !isRequiredFrom ) || \n        (isValidateIfFilled && !isValidValue)\n    ){\n      \n        isValid = true;\n       \n    } else {\n        \n        isValid =  _isValid.call( self, fieldEl, options );\n        \n    }\n\n    if( options.checkDirtyField ){\n        _checkDirtyField( fieldEl, options.cssClasses.dirty );\n    }\n    \n    // VALIDATION VISUAL FEEDBACK\n    if( containerEl !== null ){\n        if( options.skipUIfeedback ){\n            \n            let cssClasses = options.cssClasses.valid + ' ' + options.cssClasses.error;\n            _removeClass( containerEl, cssClasses );\n            \n        } else {\n            if( isValid ){\n\n                if( !isRequiredFrom || (isRequiredFrom && reqMoreEl.checked) ){\n                    _removeClass( containerEl, options.cssClasses.error );\n                    _addClass( containerEl, options.cssClasses.valid );\n                }\n\n            } else {\n\n                _addClass( containerEl, options.cssClasses.error );\n                _removeClass( containerEl, options.cssClasses.valid );\n\n            }\n        }\n    }\n    \n    return isValid;\n}","import { _toCamelCase } from './helper.js';\n\nimport { _validationRulesAttributes } from './validationRules.js';\n\nexport function _isValid( fieldEl, fieldOptions = {} ){\n    const self = this,\n          fieldType = ( fieldEl.matches('[data-subtype]') ? _toCamelCase( fieldEl.getAttribute('data-subtype') ) : fieldEl.type ),\n          fieldValue = fieldEl.value,\n          // ALPHABETICAL REVERSE ORDER\n          fieldAttributes = Array.from(fieldEl.attributes).sort(function(a,b){ return a.name < b.name });\n         \n    let attrValidations = [],\n        attrValidationsResult = true;\n\n    // SPECIFIC VALIDATIONS FOR _validationRulesAttributes\n    fieldAttributes.forEach(function(attr){\n        // FOR data-* ATTRIBUTES -> REMOVE \"data-\" AND TRANSFORM TO CAMELCASE\n        let attrName = _toCamelCase( attr.name.replace('data-', '') ),\n            attrValue = attr.value,\n            isTypeValueWithFn = attrName === 'type' && typeof _validationRulesAttributes[attrValue] === 'function',\n            isAttrNameWithFn = typeof _validationRulesAttributes[attrName] === 'function';\n\n        if( isTypeValueWithFn || isAttrNameWithFn ){\n\n            let extraValObj = {\n                    attrName: (isTypeValueWithFn ? attrValue : attrName),\n                    attrValue: attrValue,\n                    fieldEl,\n                    fieldOptions\n                };\n\n            if( isTypeValueWithFn || attrName === 'requiredFrom' ){\n                // THESE VALIDATIONS MUST RUN BEFORE ALL OTHERS\n                attrValidations.unshift( extraValObj );\n            } else {\n                attrValidations.push( extraValObj );\n            }\n\n        }\n    });\n\n    attrValidations.forEach(function(item){\n        let extraVal = _validationRulesAttributes[item.attrName]( item );\n        if( !extraVal ){ attrValidationsResult = false; }\n    });\n\n    attrValidationsResult = attrValidations.length > 0 ? attrValidationsResult : fieldValue.trim().length > 0; \n    \n    return (\n        typeof self.validationRules[fieldType] === 'function' ? \n        self.validationRules[fieldType]( fieldValue ) && attrValidationsResult : \n        attrValidationsResult\n    );\n}","import { _fieldsStringSelector, _mergeObjects } from './helper.js';\n\nexport function isValidForm( options = {} ){\n    const self = this,\n          formEl = self.formEl;\n\n    if( formEl === null || !formEl.matches('[novalidate]') ){ return false; }\n    \n    var fieldOptions = _mergeObjects( {}, options.fieldOptions || {}, self.options.fieldOptions ),\n        obj = {\n            fields: [],\n            result: true\n        },\n        fieldName = '',\n        fieldType = '';\n    \n    if( typeof fieldOptions.focusOnRelated === 'undefined' ){\n        fieldOptions.focusOnRelated = false;\n    }\n    \n    Array.from( formEl.querySelectorAll( _fieldsStringSelector ) ).forEach(function( fieldEl ){\n        let name = fieldEl.name,\n            type = fieldEl.type,\n            fieldData = {\n                field: fieldEl,\n                result: true\n            };\n        \n        if( (name === fieldName && type === fieldType) ){ return true; }\n            \n        if( !fieldEl.matches('[data-required-from]') ){\n            fieldName = name;\n            fieldType = type;\n        }\n        \n        const fieldResult = self.isValidField( fieldEl, fieldOptions );\n        fieldData.result = fieldResult;\n\n        if( !fieldResult ){\n            obj.result = false;\n        }\n        \n        obj.fields.push( fieldData );\n    });\n    \n    return obj;\n}","import { _isPlainObject, _mergeObjects } from './helper.js';\n\nimport { _xhrCall } from './xhrCall.js';\n\nexport function submit( options = {}, event = null ){\n    const self = this,\n          formEl = self.formEl,\n          eventPreventDefault = ( enableBtn = true ) => {\n              if( btnEl && enableBtn ){ btnEl.disabled = false; }\n              if( event ){ event.preventDefault(); }\n          };\n    \n    options.fieldOptions = _mergeObjects( {}, (options.fieldOptions || {}), this.options.fieldOptions );\n    options.formOptions = _mergeObjects( {}, (options.formOptions || {}), this.options.formOptions );\n    \n    const handleValidation = options.fieldOptions.handleValidation,\n          formValidation = (handleValidation ? self.isValidForm( options ) : { result: true });\n\n    const btnEl = formEl.querySelector('[type=\"submit\"]'),\n          isAjaxForm = options.formOptions.ajaxSubmit;\n    \n    if( handleValidation ){\n        let callbacksValidation = [],\n            onValidationOpt = options.fieldOptions.onValidation;\n\n        if( typeof onValidationOpt === 'function' ){\n            callbacksValidation.push( onValidationOpt );\n        } else if( Array.isArray(onValidationOpt) ) {\n            callbacksValidation = onValidationOpt;\n        }\n\n        callbacksValidation.forEach(function(cbFn){\n            cbFn( formValidation.fields );\n        });\n    }\n    \n    let formDataJSON = (isAjaxForm ? self.getFormJSON() : null),\n        callbacksBeforeSend = [],\n        beforeSendOpt = options.formOptions.beforeSend;\n\n    if( typeof beforeSendOpt === 'function' || Array.isArray(beforeSendOpt) ){\n        let beforeSendData = {\n                stopExecution: false\n            },\n            stopCallbackLoop = false;\n\n        if( formDataJSON ){\n            beforeSendData.formData = formDataJSON;\n        }\n\n        if( typeof beforeSendOpt === 'function' ){\n            callbacksBeforeSend.push( beforeSendOpt );\n        } else if( Array.isArray(beforeSendOpt) ) {\n            callbacksBeforeSend = beforeSendOpt;\n        }\n\n        callbacksBeforeSend.forEach(function(cbFn){\n            if( !stopCallbackLoop ){\n                let beforeSendFn = cbFn.call( self, beforeSendData );\n                \n                if( _isPlainObject(beforeSendFn) ){\n                    formDataJSON = beforeSendFn.formData || formDataJSON;\n                    if( beforeSendFn.stopExecution ){\n                        stopCallbackLoop = true;\n                    }\n                }\n            }\n        });\n\n        if( stopCallbackLoop ){\n            eventPreventDefault();\n            return false;\n        }\n    }\n\n    if( !formValidation.result || (btnEl && btnEl.disabled) ){\n        eventPreventDefault();\n        return false;\n    }\n\n    if( btnEl ){\n        btnEl.disabled = true;\n    }\n    \n    if( isAjaxForm ){\n\n        // AJAX FORM SUBMIT\n        eventPreventDefault(false);\n        _xhrCall.call( self, formDataJSON );\n\n    } else if( !event ){\n\n        // TRIGGER SUBMIT EVENT\n        let submitEvent = new Event('submit', {'bubbles': true, 'cancelable': true});\n        formEl.dispatchEvent(submitEvent);\n\n    }\n}","import { _mergeObjects, _serialize } from './helper.js';\n\nexport function _xhrCall( formDataJSON ){\n    let self = this,\n        formEl = self.formEl,\n        fieldOptions = self.options.fieldOptions,\n        formOptions = self.options.formOptions,\n        btnEl = formEl.querySelector('[type=\"submit\"]'),\n        timeoutTimer,\n        xhrOptions = _mergeObjects( {}, formOptions.ajaxOptions );\n\n    xhrOptions.data = formDataJSON;\n    \n    if( xhrOptions.contentType === 'multipart/form-data' && fieldOptions.handleFileUpload ){\n        let formDataMultipart = new FormData();\n        \n        for(let key in xhrOptions.data){\n            formDataMultipart.append( key, xhrOptions.data[key] );\n        }\n        \n        Array.from( formEl.querySelectorAll('[type=\"file\"]') ).forEach(function( field ){\n            Array.from(field.files).forEach(function( file, idx ){\n                let name = field.name+'['+ idx +']';\n                formDataMultipart.append( name, file, file.name );\n            });\n        });\n        \n        xhrOptions.data = formDataMultipart;\n    }\n    \n    let XHR = new XMLHttpRequest(),\n        parseResponse = function( xhr ){\n            let data = xhr.responseText,\n                getJSON = function(){\n                    try{\n                        let obj = JSON.parse(data);\n                        return obj;\n                    } catch(e){\n                        return false;\n                    }\n                },\n                getXML_HTML = function(){\n                    try{\n                        let isXML = xhr.responseXML !== null,\n                            obj = (isXML ? new DOMParser().parseFromString(data, 'text/xml') : data);\n                        return obj;\n                    } catch(e){\n                        return false;\n                    }\n                };\n            \n            return (getJSON() || getXML_HTML() || data);\n        },\n        loadendFn = function(e) {\n            let xhr = e.target,\n                responseData = parseResponse(xhr),\n                callbacks = [],\n                functionOpt = formOptions.onSubmitComplete;\n\n            let readyStateOK = xhr.readyState === 4,\n                statusOK = xhr.status === 200,\n                ajaxData = {\n                    dataOrXHR:      ( readyStateOK && statusOK ? responseData   : xhr           ),\n                    status:         ( readyStateOK && statusOK ? 'success'      : 'error'       ),\n                    XHRorResponse:  ( readyStateOK && statusOK ? xhr            : responseData  )\n                };\n            \n            if( timeoutTimer ){\n                window.clearTimeout( timeoutTimer );\n            }\n\n            btnEl.disabled = false;\n            \n            if( typeof functionOpt === 'function' ){\n\n                callbacks.push( functionOpt );\n\n            } else if( Array.isArray(functionOpt) ) {\n\n                callbacks = functionOpt;\n\n            }\n\n            callbacks.forEach(function(cbFn){\n                cbFn.call( self, ajaxData );\n            });\n        },\n        loadFn = function(e) {\n            let xhr = e.target;\n\n            if( xhr.status === 200 ){\n                let callbacks = [],\n                    functionOpt = formOptions.onSubmitSuccess,\n                    responseData = parseResponse(xhr),\n                    ajaxData = { data: responseData, status: 'success', response: xhr };\n                \n                if( typeof functionOpt === 'function' ){\n\n                    callbacks.push( functionOpt );\n\n                } else if( Array.isArray(functionOpt) ) {\n                    \n                    callbacks = functionOpt;\n                    \n                }\n\n                callbacks.forEach(function(cbFn){\n                    cbFn.call( self, ajaxData );\n                });\n            } else {\n                errorFn(e);\n            }\n        },\n        errorFn = function(e) {\n            let xhr = e.target,\n                callbacks = [],\n                functionOpt = formOptions.onSubmitError,\n                ajaxData = { errorThrown: xhr.statusText, status: 'error', response: xhr };\n            \n            if( typeof functionOpt === 'function' ){\n\n                callbacks.push( functionOpt );\n\n            } else if( Array.isArray(functionOpt) ) {\n                \n                callbacks = functionOpt;\n                \n            }\n\n            callbacks.forEach(function(cbFn){\n                cbFn.call( self, ajaxData );\n            });\n        };\n    \n    XHR.addEventListener('loadend', loadendFn,  false);\n    XHR.addEventListener('load',    loadFn,     false);\n    XHR.addEventListener('error',   errorFn,    false);\n    \n    if( xhrOptions.method === 'GET' ){\n        xhrOptions.url += ( /\\?/.test(xhrOptions.url) ? '&' : '?' ) + _serialize( xhrOptions.data );\n        if( xhrOptions.cache === false ){\n            xhrOptions.url +=  (/\\&/.test(xhrOptions.url) ? '&' : '') + '_=' + (new Date().getTime());\n        }\n    }\n    \n    XHR.open(xhrOptions.method, xhrOptions.url, xhrOptions.async);\n\n    if ( xhrOptions.xhrFields ) {\n        for ( let i in xhrOptions.xhrFields ) {\n            XHR[ i ] = xhrOptions.xhrFields[ i ];\n        }\n    }\n\n    if ( xhrOptions.mimeType && XHR.overrideMimeType ) {\n        XHR.overrideMimeType( xhrOptions.mimeType );\n    }\n    \n    if( xhrOptions.data && xhrOptions.contentType !== 'multipart/form-data' ){\n        XHR.setRequestHeader('Content-Type', xhrOptions.contentType);\n    }\n    \n    for( let h in xhrOptions.headers ){\n        XHR.setRequestHeader( h, xhrOptions.headers[h] );\n    }\n    \n    XHR.send( (xhrOptions.method === 'GET' ? null : xhrOptions.data) );\n\n    if ( xhrOptions.async && xhrOptions.timeout > 0 ) {\n        timeoutTimer = window.setTimeout(function() {\n            XHR.abort();\n        }, xhrOptions.timeout);\n    }\n    \n}","import { _initFieldsFirstLoad } from './initFieldsFirstLoad.js';\n\nexport function _init(){\n    const self = this,\n          formEl = self.formEl;\n\n    if( !formEl || !formEl.matches('[novalidate]') ){ return false; }\n    \n    let fieldOptions = self.options.fieldOptions,\n        formOptions = self.options.formOptions;\n\n    // HANDLE FIELD VALIDATION\n    if( fieldOptions.handleValidation ){\n        // INIT FIELDS FOR FIRST LOAD\n        _initFieldsFirstLoad.call(self, formEl, fieldOptions);\n        \n        // INIT EVENTS LISTENER\n        fieldOptions.validateOnEvents.split(' ').forEach(function( eventName ){\n            let useCapturing = (eventName === 'blur' ? true : false);\n            formEl.addEventListener(eventName, self.listenerCallbacks.validation, useCapturing);\n        });\n        \n        if( fieldOptions.strictHtmlValidation ){\n            // VALIDATION WITH ATTRIBUTES LIKE HTML ONES ( ALSO FOR BUG FIXING, EG: maxlength IN ANDROID )\n            formEl.addEventListener('keypress', self.listenerCallbacks.keypressMaxlength, false);\n        }\n        \n        if( fieldOptions.preventPasteFields && formEl.querySelectorAll( fieldOptions.preventPasteFields ).length ){\n            // INIT EVENT LISTENER FOR \"PASTE\" EVENT TO PREVENT IT ON SPECIFIED FIELDS\n            formEl.addEventListener('paste', self.listenerCallbacks.pastePrevent, false);\n        }\n    }\n    \n    // HANDLE FORM SUBMIT\n    if( formOptions.handleSubmit ){\n        // INIT FORM SUBMIT ( DEFAULT AND AJAX )\n        formEl.addEventListener('submit', self.listenerCallbacks.submit);\n\n        if( formOptions.ajaxSubmit ){\n            if( formEl.getAttribute('enctype') ){\n                formOptions.ajaxOptions.contentType = formEl.getAttribute('enctype');\n            }\n\n            if( formEl.getAttribute('method') ){\n                formOptions.ajaxOptions.method = formEl.getAttribute('method').toUpperCase();\n            }\n\n            if( formEl.getAttribute('action') ){\n                formOptions.ajaxOptions.url = formEl.getAttribute('action');\n            }\n        }\n    }\n\n}","import { _fieldsStringSelector } from './helper.js';\n\nimport { _checkDirtyField } from './checkDirtyField.js';\n\nexport const _initFieldsFirstLoad = function( formEl, fieldOptions ){\n    const self = this,\n          formFields = formEl.querySelectorAll( _fieldsStringSelector )\n\n    Array.from( formFields ).forEach(function( fieldEl ){\n        const isCheckboxOrRadio = (fieldEl.type === 'checkbox' || fieldEl.type === 'radio'),\n              fieldChecked = self.formEl.querySelector('[name=\"' + fieldEl.name + '\"]:checked');\n        \n        if( !isCheckboxOrRadio ){\n            if( fieldOptions.checkDirtyField ){\n                _checkDirtyField( fieldEl, fieldOptions.cssClasses.dirty );\n            }\n\n            if( fieldEl.matches('[data-char-count]') ){\n                if( fieldEl.matches('[maxlength]') ){\n                    let maxlength = fieldEl.getAttribute('maxlength');\n                    fieldEl.closest('[data-formjs-question]').querySelector('[data-char-maxlength]').textContent = maxlength;\n                }\n\n                self.listenerCallbacks.charCount.call( fieldEl );\n                fieldEl.addEventListener('input', self.listenerCallbacks.charCount, false);\n            }\n\n            if( fieldEl.type === 'file' && fieldOptions.maxFileSize > 0 ){\n                if( formEl.querySelector('[data-max-file-size]') !== null ){\n                    formEl.querySelector('[data-max-file-size]').textContent = fieldOptions.maxFileSize;\n                }\n            }\n        }\n        \n        if(\n            (!isCheckboxOrRadio && fieldEl.value) || \n            (isCheckboxOrRadio && fieldChecked !== null)\n        ){\n            if( isCheckboxOrRadio ){\n                fieldEl = fieldChecked;\n            }\n            self.isValidField( fieldEl, fieldOptions );\n        }\n    });\n}"],"sourceRoot":""}