{"version":3,"sources":["webpack:///webpack/bootstrap","webpack:///./src/modules/helper.js","webpack:///./src/modules/validationRules.js","webpack:///./src/modules/isValidField.js","webpack:///./src/index.js","webpack:///./src/modules/options.js","webpack:///./src/modules/optionsUtils.js","webpack:///./src/modules/checkDirtyField.js","webpack:///./src/modules/optionsAjax.js","webpack:///./src/modules/validationErrors.js","webpack:///./src/modules/constructor.js","webpack:///./src/modules/listenerCallbacks.js","webpack:///./src/modules/submit.js","webpack:///./src/modules/ajaxCall.js","webpack:///./src/modules/formStartup.js","webpack:///./src/modules/destroy.js","webpack:///./src/modules/getFormData.js","webpack:///./src/modules/init.js","webpack:///./src/modules/validateField.js","webpack:///./src/modules/isValid.js","webpack:///./src/modules/validateForm.js","webpack:///./src/modules/isValidForm.js"],"names":["installedModules","__webpack_require__","moduleId","exports","module","i","l","modules","call","m","c","d","name","getter","o","Object","defineProperty","enumerable","get","r","Symbol","toStringTag","value","t","mode","__esModule","ns","create","key","bind","n","default","object","property","prototype","hasOwnProperty","p","s","e","a","iterator","constructor","isDOMNode","fieldsStringSelector","addClass","element","cssClasses","split","forEach","className","classList","add","checkFormEl","formEl","isString","_typeof","isFormSelector","document","querySelector","tagName","toLowerCase","result","executeCallback","callbackOption","callbackData","tempOptions","arguments","length","self","this","options","mergeObjects","callbackFnList","push","Array","isArray","cbFn","getSplitChar","string","splitChar","indexOf","node","Element","isPrototypeOf","isFieldForChangeEvent","fieldEl","matches","isNodeList","nodeList","NodeList","isPlainObject","toString","out","obj","isObject","concat","slice","removeClass","remove","serializeObject","keys","reduce","k","encodeURIComponent","join","toCamelCase","replace","all","letter","toUpperCase","validateFieldObjDefault","validateFormObjDefault","fields","validationRulesAttributes","validationRules","_helper","cap","RegExp","test","validationErrors","errors","color","date","dateDDMMYYYY","email","fiscalCode","landlineNumber","mobileNumber","number","numberFloat","numberInteger","password","tel","url","username","vatNumber","checkbox","data","dataChecksEl","closest","checked","checks","attrValue","getAttribute","JSON","parse","checkedElLength","querySelectorAll","isMinOk","isMaxOk","minChecks","maxChecks","Error","equalTo","checkFromEl","exactLength","valueLength","minlength","maxlength","file","MIMEtype","accept","from","files","exceedMaxFileSize","fieldOptions","maxFileSize","size","isAcceptedFileType","type","acceptedFileType","valueL","isMinlengthOk","isMaxlengthOk","stringLength","max","isDate","maxVal","reverse","min","minVal","pattern","fieldPattern","radio","fieldChecked","trim","requiredFrom","isValidValue","reqMoreEl","required","isValidField","fieldElem","fieldOptionsObj","isRequired","isReqFrom","isValidateIfFilled","isValid","_isValid","configurable","writable","_options","_validationRules","_validationErrors","_constructor","_destroy2","_getFormData2","_init2","_validateField2","_validateForm2","Form","optionsObj","constructorFn","destroy","getFormData","init","validateField","validateForm","errorsObj","rulesObj","isInitialized","version","window","FormJS","_optionsUtils","_optionsAjax","dirty","error","errorEmpty","errorRule","valid","focusOnRelated","handleFileUpload","handleValidation","onPastePrevented","onValidation","defaultCallbacksInOptions","preventPasteFields","skipUIfeedback","strictHtmlValidation","validateOnEvents","formOptions","ajaxOptions","ajaxSubmit","beforeSend","handleSubmit","onSubmitComplete","onSubmitError","onSubmitSuccess","_checkDirtyField","fieldsArray","containerEl","checkDirtyField","errorClasses","extraErrorClass","isChecks","empty","errorClassToRemove","filteredFields","formData","isCheckbox","isRadio","isSelect","checkboxes","filter","field","checkedRadio","selectedOpts","option","selected","cache","credentials","headers","Content-Type","method","redirect","timeout","location","href","strLength","invalidChars","missingAtChar","splitAt_at","missingUserName","missingDomain","missingExtensionDot","missingExtension","extLength","minlengthExtension","missingNumber","missingLowercase","missingUppercase","invalidStartChar","indexOfIT","argsL","checkFormElem","formjs","listenerCallbacks","charCount","callbackFns","dataTypeNumber","keypressMaxlength","pastePrevent","submit","validation","freeze","formStartup","_listenerCallbacks","_formStartup","_submit2","eventOrField","target","charLengthEl","usedChars","textContent","event","fieldValue","stopImmediatePropagation","valueReplaced","maxLength","keyPressed","which","keyCode","preventDefault","eventName","isFieldForChangeEventBoolean","isReqMore","findReqMoreEl","findReqFromEl","id","focus","btnEl","eventPreventDefault","enableBtn","disabled","isAjaxForm","formDataObj","callbacksBeforeSend","beforeSendOpt","beforeSendData","stopExecution","stopCallbackLoop","beforeSendFn","ajaxCall","_ajaxCall","timeoutTimer","isMultipart","body","formDataMultipart","FormData","append","idx","stringify","Headers","controller","AbortController","signal","setTimeout","abort","ajaxResponse","fetch","then","response","code","status","ok","contentType","methodName","Promise","reject","catch","message","statusText","finally","clearTimeout","charLengthElems","maxFileSizeElems","addEventListener","useCapturing","validationListenerNames","removeEventListener","formFieldsEl","elem","formFields","currentFieldName","currentFieldType","isCheckboxOrRadio","fakeEventObj","_isValidField","fieldType","fieldAttributes","attributes","sort","b","attrValidations","attrValidationsResult","attr","attrName","isTypeValueWithFn","isAttrNameWithFn","extraValObj","unshift","item","extraVal","rule","isValidForm","_isValidForm","fieldData"],"mappings":"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","file":"formJS.min.js","sourcesContent":[" \t// The module cache\n \tvar installedModules = {};\n\n \t// The require function\n \tfunction __webpack_require__(moduleId) {\n\n \t\t// Check if module is in cache\n \t\tif(installedModules[moduleId]) {\n \t\t\treturn installedModules[moduleId].exports;\n \t\t}\n \t\t// Create a new module (and put it into the cache)\n \t\tvar module = installedModules[moduleId] = {\n \t\t\ti: moduleId,\n \t\t\tl: false,\n \t\t\texports: {}\n \t\t};\n\n \t\t// Execute the module function\n \t\tmodules[moduleId].call(module.exports, module, module.exports, __webpack_require__);\n\n \t\t// Flag the module as loaded\n \t\tmodule.l = true;\n\n \t\t// Return the exports of the module\n \t\treturn module.exports;\n \t}\n\n\n \t// expose the modules object (__webpack_modules__)\n \t__webpack_require__.m = modules;\n\n \t// expose the module cache\n \t__webpack_require__.c = installedModules;\n\n \t// define getter function for harmony exports\n \t__webpack_require__.d = function(exports, name, getter) {\n \t\tif(!__webpack_require__.o(exports, name)) {\n \t\t\tObject.defineProperty(exports, name, { enumerable: true, get: getter });\n \t\t}\n \t};\n\n \t// define __esModule on exports\n \t__webpack_require__.r = function(exports) {\n \t\tif(typeof Symbol !== 'undefined' && Symbol.toStringTag) {\n \t\t\tObject.defineProperty(exports, Symbol.toStringTag, { value: 'Module' });\n \t\t}\n \t\tObject.defineProperty(exports, '__esModule', { value: true });\n \t};\n\n \t// create a fake namespace object\n \t// mode & 1: value is a module id, require it\n \t// mode & 2: merge all properties of value into the ns\n \t// mode & 4: return value when already ns object\n \t// mode & 8|1: behave like require\n \t__webpack_require__.t = function(value, mode) {\n \t\tif(mode & 1) value = __webpack_require__(value);\n \t\tif(mode & 8) return value;\n \t\tif((mode & 4) && typeof value === 'object' && value && value.__esModule) return value;\n \t\tvar ns = Object.create(null);\n \t\t__webpack_require__.r(ns);\n \t\tObject.defineProperty(ns, 'default', { enumerable: true, value: value });\n \t\tif(mode & 2 && typeof value != 'string') for(var key in value) __webpack_require__.d(ns, key, function(key) { return value[key]; }.bind(null, key));\n \t\treturn ns;\n \t};\n\n \t// getDefaultExport function for compatibility with non-harmony modules\n \t__webpack_require__.n = function(module) {\n \t\tvar getter = module && module.__esModule ?\n \t\t\tfunction getDefault() { return module['default']; } :\n \t\t\tfunction getModuleExports() { return module; };\n \t\t__webpack_require__.d(getter, 'a', getter);\n \t\treturn getter;\n \t};\n\n \t// Object.prototype.hasOwnProperty.call\n \t__webpack_require__.o = function(object, property) { return Object.prototype.hasOwnProperty.call(object, property); };\n\n \t// __webpack_public_path__\n \t__webpack_require__.p = \"\";\n\n\n \t// Load entry module and return exports\n \treturn __webpack_require__(__webpack_require__.s = 3);\n","\nexport const\n\nfieldsStringSelector = 'input:not([type=\"reset\"]):not([type=\"submit\"]):not([type=button]):not([type=hidden]), select, textarea',\n\naddClass = function( element, cssClasses ){\n    cssClasses.split(' ').forEach(function(className){\n        element.classList.add( className );\n    });\n},\n\ncheckFormEl = function( formEl ){\n    let isString = typeof formEl,\n        isValidNodeSelector = isString === 'string' && isDOMNode(document.querySelector(formEl)),\n        isFormSelector = isValidNodeSelector && document.querySelector(formEl).tagName.toLowerCase() === 'form',\n        obj = {\n            result: isDOMNode(formEl) || isFormSelector,\n            element: (isString === 'string' ? document.querySelector(formEl) : formEl)\n        };\n\n    return obj;\n},\n\nexecuteCallback = function( callbackOption, callbackData, tempOptions = {} ){\n    let self = this,\n        options = mergeObjects({}, self.options, tempOptions),\n        callbackFnList = [];\n\n    if( typeof callbackOption === 'function' ){\n        callbackFnList.push( callbackOption );\n    } else if( Array.isArray(callbackOption) ) {\n        callbackFnList = callbackOption;\n    }\n\n    callbackFnList.forEach(function(cbFn){\n        cbFn.call( self, callbackData, options );\n    });\n},\n\ngetSplitChar = function( string ){\n    let splitChar = '.';\n\n    if( string.indexOf(splitChar) === -1 ){\n        if( string.indexOf('-') >= 0 ){\n            splitChar = '-';\n        } else if( string.indexOf('/') >= 0 ){\n            splitChar = '/';\n        }\n    }\n\n    return splitChar;\n},\n\nisDOMNode = function( node ){\n    return Element.prototype.isPrototypeOf( node );\n},\n\nisFieldForChangeEvent = function ( fieldEl ) {\n    return fieldEl.matches('select, [type=\"radio\"], [type=\"checkbox\"], [type=\"file\"]');\n},\n\nisNodeList = function( nodeList ){\n    return NodeList.prototype.isPrototypeOf( nodeList );\n},\n\nisPlainObject = function( object ){\n    return Object.prototype.toString.call( object ) === '[object Object]';\n},\n\nmergeObjects = function( out = {} ){\n    for(let i=1; i<arguments.length; i++){\n        let obj = arguments[i];\n\n        if(!obj){ continue; }\n\n        for(let key in obj){\n            let isArray = Object.prototype.toString.call(obj[key]) === \"[object Array]\";\n            let isObject = Object.prototype.toString.call(obj[key]) === \"[object Object]\";\n\n            // COPY ONLY ENUMERABLE PROPERTIES\n            if( obj.hasOwnProperty(key) ){\n                if( isArray ){\n\n                    if( typeof out[key] === 'undefined' ){\n                        out[key] = [];\n                    }\n                    out[key] = out[key].concat( obj[key].slice(0) );\n\n                } else if( isObject ){\n\n                    out[key] = mergeObjects(out[key], obj[key]);\n\n                } else {\n\n                    // * STRING | NUMBER | BOOLEAN | FUNCTION\n                    if( Array.isArray(out[key]) ){\n                        // IF THIS IS ONE OF ABOVE (*) AND THE DESTINATION OBJECT IS AN ARRAY\n                        out[key].push(obj[key]);\n                    } else {\n                        out[key] = obj[key];\n                    }\n\n                }\n            }\n        }\n    }\n\n    return out;\n},\n\nremoveClass = function( element, cssClasses ){\n    cssClasses.split(' ').forEach(function(className){\n        element.classList.remove( className );\n    });\n},\n\nserializeObject = function( obj ){\n    var objToString = (\n            (obj && typeof obj === 'object' && obj.constructor === Object) ? \n            Object.keys(obj)\n                .reduce(function(a,k){\n                    a.push(k+'='+encodeURIComponent(obj[k]));\n                    return a\n                },[]).join('&') : \n            obj\n    );\n    return objToString;\n},\n\ntoCamelCase = function( string ){\n    return string.replace(/-([a-z])/ig, function(all, letter){ return letter.toUpperCase(); });\n},\n\nvalidateFieldObjDefault = { result: false, fieldEl: null },\n\nvalidateFormObjDefault = { result: true, fields: [] }\n","\nimport { getSplitChar } from './helper.js';\n\nexport const validationRules = {\n            \n    cap: function( string ){\n        // VALID ITALIAN CAP WITH 5 DIGITS\n        const\n            regex = new RegExp(/^[0-9]{5}$/),\n            obj = {\n                result: regex.test( string )\n            };\n\n        if( !obj.result && typeof this.validationErrors.cap === 'function' ){\n            obj.errors = this.validationErrors.cap( string );\n        }\n\n        return obj;\n    },\n\n    color: function( string ){\n        // HEX COLOR WITH/WITHOUT #\n        // CAN BE 3 OR 6 CHARACTERS ( fff | FFF | ffffff | FFFFFF )\n        let obj = {\n            result: /^#?([a-fA-F0-9]{6}|[a-fA-F0-9]{3})$/.test( string )\n        };\n\n        if( !obj.result && typeof this.validationErrors.color === 'function' ){\n            obj.errors = this.validationErrors.color( string );\n        }\n\n        return obj;\n    },\n    \n    date: function( string ){\n        // DATE AS ISO 8601 DATE FORMAT     YYYY MM DD | YYYY/MM/DD | YYYY.MM.DD | YYYY-MM-DD\n\n        let date = /^(((19|[2-9]\\d)\\d{2})[ \\/\\-.](0[13578]|1[02])[ \\/\\-.](0[1-9]|[12]\\d|3[01]))|(((19|[2-9]\\d)\\d{2})[ \\/\\-.](0[13456789]|1[012])[ \\/\\-.](0[1-9]|[12]\\d|30))|(((19|[2-9]\\d)\\d{2})[ \\/\\-.]02[ \\/\\-.](0[1-9]|1\\d|2[0-8]))|(((1[6-9]|[2-9]\\d)(0[48]|[2468][048]|[13579][26])|((16|[2468][048]|[3579][26])00))[ \\/\\-.]02[ \\/\\-.]29)$/g.test( string ),\n            obj = {\n                result: date\n            };\n\n        if( !obj.result && typeof this.validationErrors.date === 'function' ){\n            obj.errors = this.validationErrors.date( string );\n        }\n\n        return obj;\n    },\n\n    dateDDMMYYYY: function( string ){\n        // DATE AS ITALIAN SYNTAX       DD MM YYYY | DD/MM/YYYY | DD.MM.YYYY | DD-MM-YYYY\n\n        let date = /^(((0[1-9]|[12]\\d|3[01])[ \\/\\-.](0[13578]|1[02])[ \\/\\-.]((19|[2-9]\\d)\\d{2}))|((0[1-9]|[12]\\d|30)[ \\/\\-.](0[13456789]|1[012])[ \\/\\-.]((19|[2-9]\\d)\\d{2}))|((0[1-9]|1\\d|2[0-8])[ \\/\\-.]02[ \\/\\-.]((19|[2-9]\\d)\\d{2}))|(29[ \\/\\-.]02[ \\/\\-.]((1[6-9]|[2-9]\\d)(0[48]|[2468][048]|[13579][26])|((16|[2468][048]|[3579][26])00))))$/g.test( string ),\n            obj = {\n                result: date\n            };\n\n        if( !obj.result && typeof this.validationErrors.dateDDMMYYYY === 'function' ){\n            obj.errors = this.validationErrors.dateDDMMYYYY( string );\n        }\n\n        return obj;\n    },\n    \n    email: function( string ){\n        // FROM https://emailregex.com\n        // AS FOR RFC 5322 Official Standard EMAIL MUST BE AT LEAST:\n        // a@a.aa\n        const obj = {\n            result: /^(([^<>()\\[\\]\\\\.,;:\\s@\"]+(\\.[^<>()\\[\\]\\\\.,;:\\s@\"]+)*)|(\".+\"))@((\\[[0-9]{1,3}\\.[0-9]{1,3}\\.[0-9]{1,3}\\.[0-9]{1,3}])|(([a-zA-Z\\-0-9]+\\.)+[a-zA-Z]{2,}))$/.test( string )\n        };\n\n        if( !obj.result && typeof this.validationErrors.email === 'function' ){\n            obj.errors = this.validationErrors.email( string );\n        }\n\n        return obj;\n    },\n    \n    fiscalCode: function( string ){\n        // http://blog.marketto.it/2016/01/regex-validazione-codice-fiscale-con-omocodia/\n        let obj = {\n                result: /^(?:[B-DF-HJ-NP-TV-Z](?:[AEIOU]{2}|[AEIOU]X)|[AEIOU]{2}X|[B-DF-HJ-NP-TV-Z]{2}[A-Z]){2}[\\dLMNP-V]{2}(?:[A-EHLMPR-T](?:[04LQ][1-9MNP-V]|[1256LMRS][\\dLMNP-V])|[DHPS][37PT][0L]|[ACELMRT][37PT][01LM])(?:[A-MZ][1-9MNP-V][\\dLMNP-V]{2}|[A-M][0L](?:[\\dLMNP-V][1-9MNP-V]|[1-9MNP-V][0L]))[A-Z]$/i.test( string )\n            };\n\n        if( !obj.result && typeof this.validationErrors.fiscalCode === 'function' ){\n            obj.errors = this.validationErrors.fiscalCode( string );\n        }\n        \n        return obj;\n    },\n    \n    landlineNumber: function( string ){\n        // LANDLINE PREFIX:\n        // +39 | 0039 | not-set ( ALSO WITH INTERNATIONAL PREFIXES WITH 2 DIGITS )\n        // LANDLINE NUMBER MUST START WITH 0 ( AS FOR ITALIAN ONES ):\n        // 1234567890 | 12 34567890 | 123456789 | 1234 56789 ( ALSO WITH . - / AS SEPARATOR )\n        let obj = {\n            result: /^((00|\\+)\\d{2}[\\-\\. ]??)??(((0[\\d]{1,4}))([\\/\\-\\. ]){0,1}([\\d, ]{5,10}))$/.test( string )\n        };\n\n        if( !obj.result && typeof this.validationErrors.landlineNumber === 'function' ){\n            obj.errors = this.validationErrors.landlineNumber( string );\n        }\n\n        return obj; \n    },\n    \n    mobileNumber: function( string ){\n        // +39 | 0039 | 39 | not-set ( ALSO WITH ALL INTERNATIONAL PREFIXES WITH 2 DIGITS )\n        // MOBILE NUMBER MUST START WITH 3\n        // 3234567890 | 323 4567890 | 323 45 67 890 ( ALSO WITH . OR - AS SEPARATOR )\n        let obj = {\n            result: /^((00|\\+)??\\d{2}[\\-\\. ]??)??3\\d{2}[\\-\\. ]??(\\d{6,7}|\\d{2}[\\-\\. ]??\\d{2}[\\-\\. ]??\\d{3})$/.test( string )\n        };\n\n        if( !obj.result && typeof this.validationErrors.mobileNumber === 'function' ){\n            obj.errors = this.validationErrors.mobileNumber( string );\n        }\n\n        return obj;\n    },\n    \n    number: function( string ){\n        // ALL NUMBERS ( INTEGERS AND FLOATING )\n        // VALID NUMBERS: 123 | 123.456 | .123\n        let obj = {\n            result: /[+-]?([0-9]*[.])?[0-9]+/.test( string )\n        };\n\n        if( !obj.result && typeof this.validationErrors.number === 'function' ){\n            obj.errors = this.validationErrors.number( string );\n        }\n\n        return obj;\n    },\n    \n    numberFloat: function( string ){\n        // ONLY FLOATING NUMBERS\n        // VALID NUMBERS: 123.456 | .123\n        let obj = {\n            result: /[+-]?([0-9]*[.])[0-9]+/.test( string )\n        };\n\n        if( !obj.result && typeof this.validationErrors.numberFloat === 'function' ){\n            obj.errors = this.validationErrors.numberFloat( string );\n        }\n\n        return obj;\n    },\n    \n    numberInteger: function( string ){\n        // ONLY INTEGER NUMBERS\n        let obj = {\n            result: /^\\d+$/.test( string )\n        };\n\n        if( !obj.result && typeof this.validationErrors.numberInteger === 'function' ){\n            obj.errors = this.validationErrors.numberInteger( string );\n        }\n\n        return obj;\n    },\n    \n    password: function( string ){\n        // PASSWORD ( NO SPECIAL CHARACTERS ) WITH AT LEAST:\n        // ONE DIGIT + ONE LOWERCASE + ONE UPPERCASE + MIN LENGTH OF 8 CHARACTERS\n        let obj = {\n            result: /^(?=.*[0-9])(?=.*[a-z])(?=.*[A-Z])[0-9a-zA-Z]{8,}$/.test(string)\n        };\n\n        if( !obj.result && typeof this.validationErrors.password === 'function' ){\n            obj.errors = this.validationErrors.password( string );\n        }\n\n        return obj;\n    },\n\n    tel: function( string ){\n        // CHECK IF ONE OF landlineNumber OR mobileNumber IS VALID\n        let obj = {\n            result: this.validationRules.landlineNumber(string).result || this.validationRules.mobileNumber(string).result\n        };\n\n        if( !obj.result && typeof this.validationErrors.tel === 'function' ){\n            obj.errors = this.validationErrors.tel( string );\n        }\n\n        return obj;\n    },\n    \n    url: function( string ){\n        // MUST NOT CONTAIN PARAMETERS:\n        // www.mysite.com/index.html         --> VALID URL\n        // www.mysite.com/index.html?v=hello --> INVALID URL\n        let obj = {\n            result: /^((https?|ftp|file):\\/\\/)?([\\da-z\\.-]+)\\.([a-z\\.]{2,6})([\\/\\w \\.-]*)*\\/?$/.test( string )\n        };\n\n        if( !obj.result && typeof this.validationErrors.url === 'function' ){\n            obj.errors = this.validationErrors.url( string );\n        }\n\n        return obj;\n    },\n    \n    username: function( string ){\n        // USERNAME WITH LETTERS/NUMBERS/UNDERSCORE AND . - @ WITH MIN LENGTH 3 AND MAX LENGTH 24\n        //return /^[\\w\\.\\-\\@]{3,24}$/.test( string );\n        \n        // USERNAME MUST START WITH A LETTER/NUMBER/UNDERSCORE AND CAN ALSO CONTAIN . - @ WITH MIN LENGTH 3 AND MAX LENGTH 24\n        let obj = {\n            result: /^(?=\\w)(?=[\\-\\.\\@]?)[\\w\\-\\.\\@]{3,24}$/.test( string )\n        };\n\n        if( !obj.result && typeof this.validationErrors.username === 'function' ){\n            obj.errors = this.validationErrors.username( string );\n        }\n\n        return obj;\n    },\n    \n    vatNumber: function( string ){\n        // VAT NUMBER CAN CONTAIN OR NOT THE 'IT' STRING AND THEN 11 NUMBERS\n        let obj = {\n            result: /^(IT){0,1}[0-9]{11}$/i.test( string )\n        };\n\n        if( !obj.result && typeof this.validationErrors.vatNumber === 'function' ){\n            obj.errors = this.validationErrors.vatNumber( string );\n        }\n\n        return obj;\n    }\n    \n}\n\nexport const validationRulesAttributes = {\n\n    checkbox: function( data ){\n        let formEl = data.fieldEl.closest('form'),\n            dataChecksEl = formEl.querySelector('[name=\"' + data.fieldEl.name + '\"][data-checks]'),\n            obj = { result: data.fieldEl.checked };\n\n        if( dataChecksEl !== null ){\n            obj = this.checks({ attrValue: dataChecksEl.getAttribute('data-checks'), fieldEl: dataChecksEl});\n        }\n\n        return obj;\n    },\n\n    checks: function( data ){\n        try {\n            let attrValue = JSON.parse(data.attrValue),\n                fieldEl = data.fieldEl,\n                formEl = fieldEl.closest('form'),\n                checkedElLength = formEl.querySelectorAll('[name=\"' + fieldEl.name + '\"]:checked').length,\n                isMinOk = checkedElLength >= attrValue[0],\n                isMaxOk = checkedElLength <= attrValue[1],\n                obj = {\n                    result: isMinOk && isMaxOk\n                };\n\n            if( !obj.result ){\n\n                obj.errors = { checks: true };\n                if( !isMinOk ){ obj.errors.minChecks = true; }\n                if( !isMaxOk ){ obj.errors.maxChecks = true; }\n\n            }\n\n            return obj;\n        } catch(e){\n            throw new Error('\"data-checks\" attribute is not a valid array!');\n        }\n    },\n\n    equalTo: function( data ){\n        let fieldEl = data.fieldEl,\n            formEl = fieldEl.closest('form'),\n            checkFromEl = formEl.querySelector( '[name=\"' + fieldEl.getAttribute('data-equal-to') + '\"]' ),\n            obj = {\n                result: fieldEl.value === checkFromEl.value\n            };\n\n        if( !obj.result ){\n            \n            obj.errors = { equalTo: true };\n        }\n\n        return obj;\n    },\n    \n    exactLength: function( data ){\n        let valueLength = data.fieldEl.value.length,\n            exactLength = (data.attrValue * 1),\n            obj = {\n                result: valueLength === exactLength\n            };\n\n        if( !obj.result ){\n\n            obj.errors = { exactLength: true };\n            if( valueLength < exactLength ){ obj.errors.minlength = true; }\n            else { obj.errors.maxlength = true; }\n\n        }\n\n        return obj;\n    },\n\n    file: function( data ){\n        let fieldEl = data.fieldEl,\n            MIMEtype = (fieldEl.accept ? new RegExp(fieldEl.accept.replace( '*', '[^\\\\/,]+' )) : null),\n            filesList = Array.from(fieldEl.files),\n            obj = { result: true };\n\n        filesList.forEach(function( file ){\n            let exceedMaxFileSize = data.fieldOptions.maxFileSize > 0 && (file.size/1024/1024) > data.fieldOptions.maxFileSize,\n                isAcceptedFileType = (MIMEtype !== null ? MIMEtype.test(file.type) : true);\n\n            if( exceedMaxFileSize || !isAcceptedFileType ){\n                obj.result = false;\n                if( typeof obj.errors === 'undefined' ){\n                    obj.errors = {};\n                }\n                obj.errors.file = true;\n                if( exceedMaxFileSize ){ obj.errors.maxFileSize = true; }\n                if( !isAcceptedFileType ){ obj.errors.acceptedFileType = true; }\n\n            }\n        });\n\n        return obj;\n    },\n\n    length: function( data ){\n        try {\n            let valueL = data.fieldEl.value.length,\n                attrValue = JSON.parse(data.attrValue),\n                isMinlengthOk = valueL >= attrValue[0],\n                isMaxlengthOk = valueL <= attrValue[1],\n                obj = { result: isMinlengthOk && isMaxlengthOk };\n\n            if( !obj.result ){\n\n                obj.errors = { stringLength: true };\n                if( !isMinlengthOk ){ obj.errors.minlength = true; }\n                if( !isMaxlengthOk ){ obj.errors.maxlength = true; }\n\n            }\n\n            return obj;\n        } catch(e){\n            throw new Error('\"data-length\" attribute is not a valid array!');\n        }\n    },\n    \n    max: function( data ){\n        let fieldEl = data.fieldEl,\n            isDate = (fieldEl.matches('[type=\"date\"]') || fieldEl.matches('[data-subtype=\"date\"]') || fieldEl.matches('[data-subtype=\"dateDDMMYYYY\"]')),\n            value = data.fieldEl.value,\n            maxVal = data.attrValue;\n        \n        if( isDate ){\n\n            let splitChar = getSplitChar( value );\n\n            if( value.indexOf(splitChar) === 2 ){\n                // DD MM YYYY\n                value = value.split( splitChar ).reverse();\n            } else {\n                // YYYY MM DD\n                value = value.split( splitChar );\n            }\n\n            value = value.join('');\n            maxVal = maxVal.split('-').join('');\n\n        }\n\n        value = value * 1;\n        maxVal = maxVal * 1;\n\n        let obj = {\n                result: value <= maxVal\n            };\n\n        if( !obj.result ){\n            \n            obj.errors = { max: true };\n        }\n        \n        return obj;\n    },\n    \n    maxlength: function( data ){\n        const obj = {\n            result: data.fieldEl.value.length <= (data.attrValue * 1)\n        };\n\n        if( !obj.result ){\n\n            obj.errors = { maxlength: true };\n        }\n\n        return obj;\n    },\n    \n    min: function( data ){\n        let fieldEl = data.fieldEl,\n            isDate = (fieldEl.matches('[type=\"date\"]') || fieldEl.matches('[data-subtype=\"date\"]') || fieldEl.matches('[data-subtype=\"dateDDMMYYYY\"]')),\n            value = data.fieldEl.value,\n            minVal = data.attrValue;\n        \n        if( isDate ){\n\n            let splitChar = getSplitChar( value );\n\n            if( value.indexOf(splitChar) === 2 ){\n                // DD MM YYYY\n                value = value.split( splitChar ).reverse();\n            } else {\n                // YYYY MM DD\n                value = value.split( splitChar );\n            }\n\n            value = value.join('');\n            minVal = minVal.split('-').join('');\n\n        }\n\n        value = value * 1;\n        minVal = minVal * 1;\n\n        let obj = {\n                result: value >= minVal\n            };\n\n        if( !obj.result ){\n            \n            obj.errors = { min: true };\n        }\n        \n        return obj;\n    },\n\n    minlength: function( data ){\n        const obj = {\n            result: data.fieldEl.value.length >= (data.attrValue * 1)\n        };\n\n        if( !obj.result ){\n\n            obj.errors = { minlength: true };\n        }\n\n        return obj;\n    },\n\n    pattern: function( data ){\n        let fieldEl = data.fieldEl,\n            fieldPattern = fieldEl.pattern,\n            fieldRegex = new RegExp( fieldPattern ),\n            obj = {\n                result: fieldRegex.test( fieldEl.value )\n            };\n\n        if( !obj.result ){\n\n            obj.errors = { pattern: true };\n        }\n\n        return obj;\n    },\n\n    radio: function( data ){\n        let fieldEl = data.fieldEl,\n            fieldChecked = fieldEl.closest('form').querySelector( '[name=\"'+ fieldEl.name +'\"]:checked' ),\n            isValid = fieldChecked !== null && fieldChecked.value.trim().length > 0,\n            obj = { result: isValid };\n\n        return obj;\n    },\n\n    requiredFrom: function( data ){\n        let fieldEl = data.fieldEl,\n            formEl = fieldEl.closest('form'),\n            isValidValue = fieldEl.value.trim().length > 0,\n            reqMoreEl = formEl.querySelector( fieldEl.getAttribute('data-required-from') ),\n            checkedEl = formEl.querySelector( '[name=\"'+ reqMoreEl.name +'\"]:checked' ),\n            obj = { result: checkedEl !== null };\n\n        if( reqMoreEl.checked && reqMoreEl.required ){\n            obj.result = isValidValue;\n        }\n\n        if( !obj.result ){\n            obj.errors = { requiredFrom: true };\n        }\n        \n        return obj;\n    }\n    \n}\n","\nimport { isDOMNode, mergeObjects, validateFieldObjDefault } from './helper.js';\nimport { isValid } from './isValid.js';\n\nexport function isValidField( fieldElem, fieldOptionsObj = {} ){\n\n    const self = this,\n          fieldEl = (typeof fieldElem === 'string' ? self.formEl.querySelector(fieldElem) : fieldElem);\n\n    let obj = mergeObjects({}, validateFieldObjDefault);\n\n    if( !isDOMNode(fieldEl) ){ return obj; }\n\n    let options =           mergeObjects( {}, self.options.fieldOptions, fieldOptionsObj ),\n        isValidValue =      fieldEl.value.trim().length > 0,\n        isRequired =        fieldEl.required,\n        isReqFrom =         fieldEl.matches('[data-required-from]'),\n        isValidateIfFilled =fieldEl.matches('[data-validate-if-filled]');\n    \n    if(\n        (!isRequired && !isValidateIfFilled && !isReqFrom) ||   // IT IS A NORMAL FORM FIELD\n        (isValidateIfFilled && !isValidValue) ||                // IT IS data-validate-if-filled AND EMPTY\n        (isReqFrom && !isRequired )                             // IT IS data-required-from AND NOT required\n    ){\n\n        obj.result = true;\n       \n    } else {\n        \n        obj = isValid.call( self, fieldEl, options );\n        \n    }\n\n    obj.fieldEl = fieldEl;\n    \n    return obj;\n\n}\n","\n/**! formJS v3.0.0 | Valerio Di Punzio (@SimplySayHi) | https://www.valeriodipunzio.com/plugins/formJS/ | https://github.com/SimplySayHi/formJS | MIT license */\n\nimport { mergeObjects }         from './modules/helper.js';\nimport { options }              from './modules/options.js';\nimport { validationRules }      from './modules/validationRules.js';\nimport { validationErrors }     from './modules/validationErrors.js';\n\n// CONSTRUCTOR FUNCTION & PUBLIC METHODS\nimport { constructorFn }        from './modules/constructor.js';\nimport { destroy }              from './modules/destroy.js';\nimport { getFormData }          from './modules/getFormData.js';\nimport { init }                 from './modules/init.js';\nimport { validateField }        from './modules/validateField.js';\nimport { validateForm }         from './modules/validateForm.js';\n\nconst version = '3.0.0';\n\nclass Form {\n\n    constructor( formEl, optionsObj ){\n        constructorFn.call(this, formEl, optionsObj);\n    }\n\n    destroy(){\n        destroy.call(this);\n    }\n    \n    getFormData(){\n        return getFormData.call(this);\n    }\n\n    init(){\n        return init.call(this);\n    }\n\n    validateField( fieldEl, fieldOptions ){\n        return validateField.call(this, fieldEl, fieldOptions);\n    }\n\n    validateForm( fieldOptions ){\n        return validateForm.call(this, fieldOptions);\n    }\n    \n    static addValidationErrors( errorsObj ){\n        this.prototype.validationErrors = mergeObjects({}, this.prototype.validationErrors, errorsObj);\n    }\n\n    static addValidationRules( rulesObj ){\n        this.prototype.validationRules = mergeObjects({}, this.prototype.validationRules, rulesObj);\n    }\n    \n    static setOptions( optionsObj ){\n        this.prototype.options = mergeObjects({}, this.prototype.options, optionsObj);\n    }\n\n}\n\nForm.prototype.isInitialized = false;\nForm.prototype.options = options;\nForm.prototype.validationErrors = validationErrors;\nForm.prototype.validationRules = validationRules;\nForm.prototype.version = version;\n\nif( !window.Form ){ window.Form = Form; }\nif( !window.FormJS ) { window.FormJS = Form; }\n","\nimport { defaultCallbacksInOptions } from './optionsUtils.js';\nimport { ajaxOptions } from './optionsAjax.js';\n//import { ajaxOptions } from './optionsAjaxXhr.js';\n\nexport const options = {\n\n    fieldOptions: {\n        cssClasses: {\n            dirty:              'is-dirty',\n            error:              'has-error',\n            errorEmpty:         'has-error-empty',\n            errorRule:          'has-error-rule',\n            valid:              'is-valid'\n        },\n        focusOnRelated:         true,\n        handleFileUpload:       true,\n        handleValidation:       true,\n        maxFileSize:            10,\n        onPastePrevented:       [],\n        onValidation:           [defaultCallbacksInOptions.fieldOptions.onValidation],\n        preventPasteFields:     '[type=\"password\"], [data-equal-to]',\n        skipUIfeedback:         false,\n        strictHtmlValidation:   true,\n        validateOnEvents:       'input change'\n    },\n\n    formOptions: {\n        ajaxOptions:            ajaxOptions,\n        ajaxSubmit:             true,\n        beforeSend:             [],\n        getFormData:            defaultCallbacksInOptions.formOptions.getFormData,\n        handleSubmit:           true,\n        onSubmitComplete:       [],\n        onSubmitError:          [],\n        onSubmitSuccess:        []\n    }\n    \n}\n","\nimport { addClass, removeClass }    from './helper.js';\nimport { checkDirtyField }          from './checkDirtyField.js';\n\nexport const defaultCallbacksInOptions = {\n    fieldOptions: {\n\n        onValidation: function onValidationDefault ( fieldsArray, tempOptions ) {\n\n            let self = this,\n                options = tempOptions.fieldOptions;\n\n            fieldsArray.forEach(function( obj ){\n                let fieldEl = obj.fieldEl,\n                    containerEl = fieldEl.closest('[data-formjs-question]'),\n                    isReqFrom = fieldEl.matches('[data-required-from]'),\n                    reqMoreEl = self.formEl.querySelector( fieldEl.getAttribute('data-required-from') );\n\n                checkDirtyField.call( self, fieldEl );\n                \n                if( containerEl !== null && !options.skipUIfeedback ){\n                    if( obj.result ){\n\n                        if( !isReqFrom || (isReqFrom && reqMoreEl.checked) ){\n                            // IF FIELD IS VALID\n                            let errorClasses = options.cssClasses.error + ' ' + options.cssClasses.errorEmpty + ' ' + options.cssClasses.errorRule;\n                            removeClass( containerEl, errorClasses );\n                            addClass( containerEl, options.cssClasses.valid );\n                        }\n\n                    } else {\n\n                        // IF FIELD IS NOT VALID\n                        let extraErrorClass = options.cssClasses.errorRule;\n\n                        // HANDLE CASE OF FIELD data-checks\n                        let isChecks = fieldEl.matches('[data-checks]'),\n                            checkedElLength = (isChecks ? containerEl.querySelectorAll('[name=\"' + fieldEl.name + '\"]:checked').length : 0);\n\n                        if( (!isChecks && (obj.errors && obj.errors.empty)) || (isChecks && checkedElLength === 0) ){\n                            extraErrorClass = options.cssClasses.errorEmpty;\n                        }\n\n                        let errorClasses = options.cssClasses.error + ' ' + extraErrorClass,\n                            errorClassToRemove = options.cssClasses.errorEmpty + ' ' + options.cssClasses.errorRule;\n                        removeClass( containerEl, options.cssClasses.valid + ' ' + errorClassToRemove );\n                        addClass( containerEl, errorClasses );\n\n                    }\n                }\n            });\n            \n        }\n\n    },\n    formOptions: {\n\n        getFormData: function getFormDataDefault ( filteredFields ) {\n\n            let formData = {},\n                self = this,\n                formEl = self.formEl;\n\n            filteredFields.forEach(function( fieldEl ){\n                let isCheckbox = fieldEl.type === 'checkbox',\n                    isRadio = fieldEl.type === 'radio',\n                    isSelect = fieldEl.matches('select'),\n                    name = fieldEl.name,\n                    value = fieldEl.value;\n                                \n                if( isCheckbox ) {\n                    \n                    value = fieldEl.checked;\n                    let checkboxes = Array.from( formEl.querySelectorAll('[name=\"'+ name +'\"]') );\n                    if( checkboxes.length > 1 ){\n\n                        value = [];\n                        let checkedElems = checkboxes.filter(field => field.checked);\n                        checkedElems.forEach(fieldEl => {\n                            value.push( fieldEl.value );\n                        });\n\n                    }\n                        \n                } else if( isRadio ){\n                    \n                    let checkedRadio = formEl.querySelector('[name=\"'+ name +'\"]:checked');\n                    value = (checkedRadio === null ? null : checkedRadio.value);\n                    \n                } else if( isSelect ){\n\n                    let selectedOpts = Array.from( fieldEl.options ).filter(option => option.selected);\n                    if( selectedOpts.length > 1 ){\n\n                        value = [];\n                        selectedOpts.forEach(fieldEl => {\n                            value.push( fieldEl.value );\n                        });\n\n                    }\n                }\n\n                formData[ name ] = value;\n            });\n\n            return formData;\n\n        }\n\n    }\n}\n","\nimport { addClass, isNodeList, removeClass } from './helper.js';\n\nexport function checkDirtyField( fields, cssClasses = this.options.fieldOptions.cssClasses.dirty ){\n\n    var fields = (isNodeList(fields) ? Array.from( fields ) : [fields]);\n    \n    fields.forEach(function(fieldEl){\n        if( fieldEl.type !== 'checkbox' && fieldEl.type !== 'radio' ){\n            let containerEl = fieldEl.closest('[data-formjs-question]') || fieldEl;\n\n            if( fieldEl.value ){\n                \n                addClass( containerEl, cssClasses );\n                \n            } else {\n                \n                removeClass( containerEl, cssClasses );\n                \n            }\n        }\n    });\n    \n}\n","\nexport let ajaxOptions = {\n    cache:              'no-store',\n    credentials:        'same-origin',\n    headers: {\n                        'Content-Type': 'application/json'\n    },\n    method:             'POST',\n    mode:               'same-origin',\n    redirect:           'follow',\n    timeout:            0,\n    url:                location.href\n}\n","\nexport const validationErrors = {\n\n    cap: function( string ){\n\n        const obj = {};\n        const strLength = string.length;\n        \n        if( strLength > 5 ){ obj.maxlength = true; }\n        if( strLength > 0 && strLength < 5 ){ obj.minlength = true; }\n        if( /[^0-9]/.test(string) ){ obj.invalidChars = true; }\n\n        return obj;\n\n    },\n\n    email: function ( string ) {\n        const obj = {};\n\n        if( string.indexOf('@') === -1 ){\n\n            // @ IS MISSING\n            obj.missingAtChar = true;\n\n        } else {\n\n            let splitAt_at = string.split('@');\n            if( splitAt_at[0].length === 0 ){\n\n                // USER NAME IS MISSING\n                obj.missingUserName = true;\n\n            }\n\n            if( splitAt_at[1].length === 0 ){\n\n                // IS EMPTY AFTER @\n                obj.missingDomain = true;\n                obj.missingExtensionDot = true;\n                obj.missingExtension = true;\n\n            } else if( splitAt_at[1].indexOf('.') === -1 ) {\n\n                // DOT IS MISSING\n                obj.missingExtensionDot = true;\n                obj.missingExtension = true;\n\n            } else {\n\n                // EXTENSION MISSING OR NOT LONG ENOUGH\n                let splitAt_dot = splitAt_at[1].split('.'),\n                    extLength = splitAt_dot[1].length;\n                if( extLength === 0 ) {\n                    obj.missingExtension = true;\n                } else if( extLength < 2 ){\n                    obj.minlengthExtension = true;\n                }\n\n            }\n        }\n\n        return obj;\n\n    },\n\n    password: function ( string ) {\n\n        const obj = {};\n\n        if( string.length < 8 ){ obj.minlength = true; }\n        if( !/\\d/.test(string) ){ obj.missingNumber = true; }\n        if( !/[a-z]/.test(string) ){ obj.missingLowercase = true; }\n        if( !/[A-Z]/.test(string) ){ obj.missingUppercase = true; }\n        if( /[^0-9a-zA-Z]/.test(string) ){ obj.invalidChars = true; }\n\n        return obj;\n\n    },\n\n    username: function ( string ) {\n\n        const obj = {};\n        const strLength = string.length;\n\n        if( strLength < 3 ){ obj.minlength = true; }\n        if( strLength > 24 ){ obj.maxlength = true; }\n        if( /[^\\w\\-\\.\\@]/.test(string) ){ obj.invalidChars = true; }\n        if( !/^[\\w]/.test(string) ){ obj.invalidStartChar = true; }\n\n        return obj;\n\n    },\n\n    vatNumber: function ( string ) {\n\n        const obj = {};\n        let strLength = string.length,\n            indexOfIT = string.indexOf('IT'),\n            checkLength = (indexOfIT === 0 ? 13 : 11);\n\n        if( indexOfIT < 1 ){\n            if( strLength < checkLength ){ obj.minlength = true; }\n            else { obj.maxlength = true; }\n        }\n\n        return obj;\n\n    }\n\n}","\nimport { checkFormEl, isNodeList, mergeObjects }   from './helper.js';\nimport { callbackFns }                             from './listenerCallbacks.js';\nimport { formStartup }                             from './formStartup.js';\n\nexport function constructorFn( formEl, optionsObj = {} ){\n\n    let self = this,\n        argsL = arguments.length,\n        checkFormElem = checkFormEl(formEl);\n\n    if( argsL === 0 || (argsL > 0 && !formEl) ){\n        throw new Error('First argument \"formEl\" is missing or falsy!');\n    }\n    if( isNodeList(formEl) ){\n        throw new Error('First argument \"formEl\" must be a single DOM node or a form CSS selector, not a NodeList!');\n    }\n    if( !checkFormElem.result ){\n        throw new Error('First argument \"formEl\" is not a DOM node nor a form CSS selector!');\n    }\n\n    self.formEl = checkFormElem.element;\n    self.formEl.formjs = self;\n    self.options = mergeObjects({}, Form.prototype.options, optionsObj);\n    self.listenerCallbacks = {\n        charCount:          callbackFns.charCount,\n        dataTypeNumber:     callbackFns.dataTypeNumber,\n        keypressMaxlength:  callbackFns.keypressMaxlength,\n        pastePrevent:       callbackFns.pastePrevent.bind(self),\n        submit:             callbackFns.submit.bind(self),\n        validation:         callbackFns.validation.bind(self)\n    };\n    Object.freeze(self.listenerCallbacks);\n\n    formStartup.call( self );\n    \n}\n","\nimport { executeCallback, fieldsStringSelector, isFieldForChangeEvent } from './helper.js';\nimport { submit } from './submit.js';\n\nexport const callbackFns = {\n\n    charCount: function( eventOrField ){\n\n        const fieldEl = eventOrField.target || eventOrField;\n\n        if( fieldEl.matches( '[data-char-count]' ) ){\n            try {\n                let charLengthEl = fieldEl.closest('[data-formjs-question]').querySelector('[data-char-length]');\n\n                if( charLengthEl !== null ){\n                    let usedChars = fieldEl.value.length;\n                    charLengthEl.textContent = usedChars;\n                }\n            } catch (error) {}\n        }\n\n    },\n\n    dataTypeNumber: function( event ){\n\n        const fieldEl = event.target;\n        \n        if( fieldEl.matches('[data-type=\"number\"]') ){\n            let fieldValue = fieldEl.value,\n                hasInvalidChars = /[^\\d.,+\\-]/.test(fieldValue);\n            \n            if( hasInvalidChars ){\n                event.stopImmediatePropagation();\n                let valueReplaced = fieldValue.replace(/[^\\d.,+\\-]/g, '');\n                fieldEl.value = valueReplaced;\n            }\n        }\n\n    },\n\n    keypressMaxlength: function( event ){\n\n        const fieldEl = event.target;\n        \n        if( fieldEl.matches( '[maxlength]' ) ){\n            const maxLength = fieldEl.maxLength * 1,\n                keyPressed = event.which || event.keyCode,\n                allowedKeys = [8, 37, 38, 39, 46];\n\n            if( fieldEl.value.length >= maxLength && allowedKeys.indexOf(keyPressed) === -1 ){\n                return false;\n            }\n        }\n\n    },\n\n    pastePrevent: function( event ){\n\n        const self = this,\n              fieldEl = event.target;\n        let fieldOptions = self.options.fieldOptions;\n\n        if( fieldEl.matches( fieldOptions.preventPasteFields ) ){     \n            event.preventDefault();\n            executeCallback.call( self, fieldOptions.onPastePrevented, fieldEl );\n        }\n\n    },\n\n    submit: function( event ){\n        submit.call( this, event );\n    },\n\n    validation: function( event ){\n\n        const self = this,\n            eventName = event.type,\n            fieldEl = event.target;\n\n        if( fieldEl.matches( fieldsStringSelector ) ){\n            const isFieldForChangeEventBoolean = isFieldForChangeEvent(fieldEl),\n                isRadio = fieldEl.type === 'radio',\n                isReqFrom = fieldEl.matches('[data-required-from]'),\n                isReqMore = fieldEl.matches('[data-require-more]'),\n                isValidValue = fieldEl.value.trim().length > 0;\n\n            // HANDLE data-require-more FIELDS\n            if( isRadio && eventName === 'change' ){\n                let findReqMoreEl = (isReqMore ? fieldEl : self.formEl.querySelector('[name=\"'+ fieldEl.name +'\"][data-require-more]')),\n                    findReqFromEl = (findReqMoreEl !== null ? self.formEl.querySelector('[data-required-from=\"#'+ findReqMoreEl.id +'\"]') : null);\n\n                if( isReqMore ){\n\n                    if( findReqFromEl !== null ){\n                        findReqFromEl.required = fieldEl.required;\n                        if( self.options.fieldOptions.focusOnRelated ){\n                            findReqFromEl.focus();\n                        }\n                    }\n\n                } else if( findReqMoreEl !== null ){\n\n                    if( findReqFromEl !== null ){\n                        findReqFromEl.required = findReqMoreEl.required && findReqMoreEl.checked;\n                        findReqFromEl.value = '';\n                    }\n\n                }\n            }\n\n            // HANDLE data-required-from FIELDS\n            if( isReqFrom ){\n                if( isValidValue ){\n\n                    let reqMoreEl = self.formEl.querySelector( fieldEl.getAttribute('data-required-from') );\n                    reqMoreEl.checked = true;\n                    fieldEl.required = reqMoreEl.required;\n                }\n            }\n            \n            if(\n                (isFieldForChangeEventBoolean && eventName === 'change') ||\n                (!isFieldForChangeEventBoolean && eventName !== 'change')\n            ){\n                \n                self.validateField( fieldEl );\n\n            }\n        }\n        \n    }\n\n}\n","\nimport { isPlainObject, validateFormObjDefault } from './helper.js';\nimport { ajaxCall }     from './ajaxCall.js';\n//import { ajaxCall }     from './ajaxCallXhr.js';\n\nexport function submit( event ){\n\n    const self = this,\n          options = self.options,\n          formEl = self.formEl,\n          btnEl = formEl.querySelector('[type=\"submit\"]'),\n          eventPreventDefault = ( enableBtn = true ) => {\n              if( btnEl && enableBtn ){ btnEl.disabled = false; }\n              if( event ){ event.preventDefault(); }\n          };\n\n    if( btnEl ){\n        if( btnEl.disabled ){\n            eventPreventDefault(false);\n            return false;\n        }\n        btnEl.disabled = true;\n    }\n    \n    const isAjaxForm = options.formOptions.ajaxSubmit,\n          handleValidation = options.fieldOptions.handleValidation,\n          formValidation = (handleValidation ? self.validateForm( options.fieldOptions ) : validateFormObjDefault);\n\n    if( !formValidation.result ){\n        eventPreventDefault();\n        return false;\n    }\n    \n    let formDataObj = (isAjaxForm ? self.getFormData() : null),\n        callbacksBeforeSend = [],\n        beforeSendOpt = options.formOptions.beforeSend;\n\n    if( typeof beforeSendOpt === 'function' || Array.isArray(beforeSendOpt) ){\n        let beforeSendData = { stopExecution: false },\n            stopCallbackLoop = false;\n\n        if( formDataObj ){\n            beforeSendData.formData = formDataObj;\n        }\n\n        if( typeof beforeSendOpt === 'function' ){\n            callbacksBeforeSend.push( beforeSendOpt );\n        } else if( Array.isArray(beforeSendOpt) ) {\n            callbacksBeforeSend = beforeSendOpt;\n        }\n\n        callbacksBeforeSend.forEach(function(cbFn){\n            if( !stopCallbackLoop ){\n                let beforeSendFn = cbFn.call( self, beforeSendData, options );\n                \n                if( isPlainObject(beforeSendFn) ){\n                    formDataObj = beforeSendFn.formData || formDataObj;\n                    if( beforeSendFn.stopExecution ){\n                        stopCallbackLoop = true;\n                    }\n                }\n            }\n        });\n\n        if( stopCallbackLoop ){\n            eventPreventDefault();\n            return false;\n        }\n    }\n    \n    if( isAjaxForm ){\n        eventPreventDefault(false);\n        ajaxCall.call(self, formDataObj, options);\n    }\n    \n}\n","\nimport { executeCallback, mergeObjects, serializeObject } from './helper.js';\n\n// AJAX CALL USING fetch API\nexport function ajaxCall( formDataObj, options ){\n\n    let self = this,\n        formEl = self.formEl,\n        fieldOptions = options.fieldOptions,\n        formOptions = options.formOptions,\n        btnEl = formEl.querySelector('[type=\"submit\"]'),\n        timeoutTimer,\n        ajaxOptions = mergeObjects( {}, formOptions.ajaxOptions ),\n        isMultipart = ajaxOptions.headers['Content-Type'] === 'multipart/form-data';\n\n    ajaxOptions.body = formDataObj;\n    \n    // POST A FormData OBJECT ( multipart )\n    if( isMultipart && fieldOptions.handleFileUpload ){\n        let formDataMultipart = new FormData();\n        \n        for(let key in ajaxOptions.body){\n            formDataMultipart.append( key, ajaxOptions.body[key] );\n        }\n        \n        Array.from( formEl.querySelectorAll('[type=\"file\"]') ).forEach(function( field ){\n            Array.from(field.files).forEach(function( file, idx ){\n                let name = field.name+'['+ idx +']';\n                formDataMultipart.append( name, file, file.name );\n            });\n        });\n        \n        ajaxOptions.body = formDataMultipart;\n    }\n\n    if( ajaxOptions.method === 'GET' ){\n\n        // FETCH WITH \"GET\" METHOD CAN'T HAVE \"body\". SO IT IS APPENDED TO THE URL\n        ajaxOptions.url += ( /\\?/.test(ajaxOptions.url) ? '&' : '?' ) + serializeObject( ajaxOptions.body );\n        delete ajaxOptions.body;\n\n    } else {\n\n        if( ajaxOptions.headers['Content-Type'].indexOf('application/x-www-form-urlencoded') > -1 ){\n            // POST A NORMAL FORM\n            ajaxOptions.body = serializeObject( ajaxOptions.body );\n        } else if( !isMultipart ){\n            // POST A JSON STRING\n            ajaxOptions.body = JSON.stringify(ajaxOptions.body);\n        }\n\n    }\n\n    ajaxOptions.headers = new Headers( ajaxOptions.headers );\n\n    if ( ajaxOptions.timeout > 0 ) {\n        const controller = new AbortController();\n        const signal = controller.signal;\n\n        ajaxOptions.signal = signal;\n\n        timeoutTimer = window.setTimeout(function() {\n            controller.abort();\n        }, ajaxOptions.timeout);\n    }\n\n    let ajaxResponse = {};\n\n    fetch(ajaxOptions.url, ajaxOptions)\n        .then(function( response ){\n\n            ajaxResponse.code = response.status;\n\n            if( !response.ok ){\n                return Promise.reject(response);\n            }\n\n            let getFetchMethod = function( response ){\n                let contentType = response.headers.get('Content-Type'),\n                    methodName = 'blob';\n\n                if( contentType.indexOf('application/json') > -1 ){\n                    methodName = 'json';\n                } else if( contentType.indexOf('text/') > -1 ){\n                    methodName = 'text';\n                }\n                \n                return methodName;\n            };\n            let fetchMethod = getFetchMethod( response );\n\n            return response[fetchMethod]();\n\n        })\n        .then(function( data ){\n\n            ajaxResponse.status = 'success';\n            ajaxResponse.data = data;\n            executeCallback.call( self, formOptions.onSubmitSuccess, ajaxResponse );\n\n        })\n        .catch(function( error ){\n\n            ajaxResponse.status = 'error';\n            ajaxResponse.message = error.statusText;\n            executeCallback.call( self, formOptions.onSubmitError, ajaxResponse );\n\n        })\n        .finally(function(){\n\n            if( timeoutTimer ){\n                window.clearTimeout( timeoutTimer );\n            }\n            btnEl.disabled = false;\n            executeCallback.call( self, formOptions.onSubmitComplete, ajaxResponse );\n\n        });\n    \n}\n","\nexport function formStartup(){\n\n    const self = this,\n          formEl = self.formEl;\n\n    if( !formEl.matches('[novalidate]') ){ return null; }\n\n    let fieldOptions = self.options.fieldOptions,\n        formOptions = self.options.formOptions;\n\n    // INIT FORM UTILITIES - START\n    let charLengthElems = formEl.querySelectorAll('[data-char-length]');\n    if( charLengthElems.length > 0 ){\n        Array.from( charLengthElems ).forEach(function( element ){\n            try {\n                let containerEl = element.closest('[data-formjs-question]'),\n                    fieldEl = containerEl.querySelector('[data-char-count]');\n\n                if( fieldEl !== null && fieldEl.matches('[maxlength]') ){\n                    // PRINT RELATED MAX LENGTH IN HTML\n                    let maxlength = fieldEl.getAttribute('maxlength');\n                    containerEl.querySelector('[data-char-maxlength]').textContent = maxlength;\n                }\n\n                // PRINT CHAR COUNT IN HTML\n                self.listenerCallbacks.charCount.call( null, fieldEl );\n            } catch (error) {}\n        });\n    }\n\n    if( fieldOptions.maxFileSize > 0 ){\n        let maxFileSizeElems = formEl.querySelectorAll('[data-max-file-size]');\n        if( maxFileSizeElems.length > 0 ){\n            Array.from( maxFileSizeElems ).forEach(function( element ){\n                try {\n                    let fieldEl = element.closest('[data-formjs-question]').querySelector('[type=\"file\"]');\n\n                    if( fieldEl !== null ){\n                        // PRINT MAX FILE SIZE FOR INPUTS WITH type=\"file\"\n                        element.textContent = fieldOptions.maxFileSize;\n                    }\n                } catch (error) {}\n            });\n        }\n    }\n    // INIT FORM UTILITIES - END\n\n    // HANDLE FIELD VALIDATION\n    if( fieldOptions.handleValidation ){\n        \n        // VALIDATION WITH ATTRIBUTES LIKE HTML ONES ( ALSO FOR BUG FIXING, EG: maxlength IN ANDROID )\n        if( fieldOptions.strictHtmlValidation ){\n            \n            // maxlength\n            // BUGGY IN ANDROID BROWSERS\n            formEl.addEventListener('keypress', self.listenerCallbacks.keypressMaxlength, false);\n\n            // data-type=\"number\"\n            // SINCE VALIDATING type=\"number\" WITH NON NUMERIC CHARS WILL RETURN EMPTY STRING IN SOME BROWSERS ( EG: FIREFOX )\n            formEl.addEventListener('input', self.listenerCallbacks.dataTypeNumber, false);\n            \n        }\n        \n        if( fieldOptions.preventPasteFields && formEl.querySelectorAll( fieldOptions.preventPasteFields ).length ){\n            // INIT EVENT LISTENER FOR \"PASTE\" EVENT TO PREVENT IT ON SPECIFIED FIELDS\n            formEl.addEventListener('paste', self.listenerCallbacks.pastePrevent, false);\n        }\n\n        if( formEl.querySelectorAll('[data-char-count]').length > 0 ){\n            // INIT EVENT LISTENER FOR FIELDS WITH \"data-char-count\" ATTRIBUTE\n            formEl.addEventListener('input', self.listenerCallbacks.charCount, false);\n        }\n\n        // INIT EVENTS LISTENER ( AS IN fieldOptions )\n        fieldOptions.validateOnEvents.split(' ').forEach(function( eventName ){\n            let useCapturing = (eventName === 'blur' ? true : false);\n            formEl.addEventListener(eventName, self.listenerCallbacks.validation, useCapturing);\n        });\n\n    }\n    \n    // HANDLE FORM SUBMIT\n    if( formOptions.handleSubmit ){\n        // INIT FORM SUBMIT ( DEFAULT AND AJAX )\n        formEl.addEventListener('submit', self.listenerCallbacks.submit);\n\n        if( formOptions.ajaxSubmit ){\n            if( formEl.getAttribute('enctype') ){\n\n                // FOR XMLHttpRequest API\n                formOptions.ajaxOptions.contentType = formEl.getAttribute('enctype');\n\n                // FOR fetch API\n                formOptions.ajaxOptions.headers['Content-Type'] = formEl.getAttribute('enctype');\n                \n            }\n\n            if( formEl.getAttribute('method') ){\n                formOptions.ajaxOptions.method = formEl.getAttribute('method').toUpperCase();\n            }\n\n            if( formEl.getAttribute('action') ){\n                formOptions.ajaxOptions.url = formEl.getAttribute('action');\n            }\n        }\n    }\n\n}\n","\nexport function destroy(){\n\n    const self = this,\n          formEl = self.formEl,\n          validationListenerNames = self.options.fieldOptions.validateOnEvents;\n\n    if( formEl.querySelectorAll('[data-char-count]').length > 0 ){\n        formEl.removeEventListener('input', self.listenerCallbacks.charCount, false);\n    }\n\n    if( self.options.fieldOptions.strictHtmlValidation ){\n        formEl.removeEventListener('keypress', self.listenerCallbacks.keypressMaxlength, false);\n        formEl.removeEventListener('input', self.listenerCallbacks.dataTypeNumber, false);\n    }\n\n    if( self.options.fieldOptions.preventPasteFields ){\n        formEl.removeEventListener('paste', self.listenerCallbacks.pastePrevent, false);\n    }\n\n    if( self.options.formOptions.handleSubmit ){\n        formEl.removeEventListener('submit', self.listenerCallbacks.submit);\n    }\n\n    validationListenerNames.split(' ').forEach(function( eventName ){\n        let useCapturing = (eventName === 'blur' ? true : false);\n        formEl.removeEventListener(eventName, self.listenerCallbacks.validation, useCapturing);\n    });\n\n    delete self.formEl.formjs;\n    \n}\n","\nexport function getFormData(){\n\n    let self = this,\n        formEl = self.formEl,\n        formFieldsEl = formEl.querySelectorAll('input, select, textarea'),\n        excludeSelectors = ':not([type=\"reset\"]):not([type=\"submit\"]):not([type=\"button\"]):not([type=\"file\"]):not([data-exclude-data])',\n        filteredFields = Array.from(formFieldsEl).filter(elem => elem.matches(excludeSelectors) );\n    \n    return self.options.formOptions.getFormData.call( self, filteredFields );\n    \n}\n","\nimport { fieldsStringSelector, isFieldForChangeEvent } from './helper.js';\n\nexport const init = function(){\n\n    const self = this,\n          formEl = self.formEl,\n          formFields = formEl.querySelectorAll( fieldsStringSelector );\n\n    let currentFieldName = '',\n        currentFieldType = '';\n\n    Array.from( formFields ).forEach(function( fieldEl ){\n        const   name = fieldEl.name,\n                type = fieldEl.type;\n        \n        // AVOID REPEATING VALIDATION IF THE FIELD HAS THE SAME NAME OF THE PREVIOUS ONE\n        if( (name === currentFieldName && type === currentFieldType) ){ return true; }\n\n        const isCheckboxOrRadio = (fieldEl.type === 'checkbox' || fieldEl.type === 'radio'),\n              isFieldForChangeEventBoolean = isFieldForChangeEvent(fieldEl),\n              fieldChecked = formEl.querySelector('[name=\"' + fieldEl.name + '\"]:checked'),\n              isReqFrom = fieldEl.matches('[data-required-from]'),\n              reqMoreEl = (isReqFrom ? formEl.querySelector(fieldEl.getAttribute('data-required-from')) : null);\n\n        if( !isReqFrom ){\n            currentFieldName = name;\n            currentFieldType = type;\n        }\n        \n        // VALIDATE FIELD ( BY TRIGGERING THE validation CALLBACK ) IF IT ALREADY HAS A VALUE\n        if(\n            (!isCheckboxOrRadio && fieldEl.value) || \n            (isCheckboxOrRadio && fieldChecked !== null) ||\n            (isReqFrom && reqMoreEl.checked)\n        ){\n\n            let fakeEventObj = { target: fieldEl, type: (isFieldForChangeEventBoolean ? 'change': '') };\n            self.listenerCallbacks.validation.call( self, fakeEventObj );\n\n        }\n    });\n\n    self.isInitialized = true;\n\n    return self;\n\n}\n","\nimport { executeCallback, isDOMNode, mergeObjects, validateFieldObjDefault } from './helper.js';\nimport { isValidField } from './isValidField.js';\n\nexport function validateField( fieldElem, fieldOptionsObj = {} ){\n\n    const self = this,\n          fieldEl = (typeof fieldElem === 'string' ? self.formEl.querySelector(fieldElem) : fieldElem);\n    let obj = mergeObjects({}, validateFieldObjDefault);\n\n    if( isDOMNode(fieldEl) ){\n        let fieldOptions = mergeObjects({}, self.options.fieldOptions, fieldOptionsObj);\n        obj = isValidField.call( self, fieldEl, fieldOptionsObj );\n        executeCallback.call( self, fieldOptions.onValidation, [obj], {fieldOptions} );\n    }\n\n    return obj;\n    \n}\n","\nimport { mergeObjects, toCamelCase } from './helper.js';\nimport { validationRulesAttributes } from './validationRules.js';\n\nexport function isValid( fieldEl, fieldOptions = {} ){\n\n    const self = this,\n          fieldType = ( fieldEl.matches('[data-subtype]') ? toCamelCase( fieldEl.getAttribute('data-subtype') ) : fieldEl.type ),\n          fieldValue = fieldEl.value,\n          isValidValue = fieldValue.trim().length > 0,\n          // ALPHABETICAL REVERSE ORDER\n          fieldAttributes = Array.from(fieldEl.attributes).sort(function(a,b){ return a.name < b.name });\n\n    let attrValidations = [],\n        attrValidationsResult = isValidValue,\n        obj = { result: isValidValue };\n\n    if( !isValidValue ){\n        obj.errors = { empty: true };\n        obj.result = false;\n        return obj;\n    }\n\n    // COLLECT SPECIFIC VALIDATIONS FOR validationRulesAttributes\n    fieldAttributes.forEach(function(attr){\n        // FOR data-* ATTRIBUTES -> REMOVE \"data-\" AND TRANSFORM TO CAMELCASE\n        let attrName = toCamelCase( attr.name.replace('data-', '') ),\n            attrValue = attr.value,\n            isTypeValueWithFn = attrName === 'type' && typeof validationRulesAttributes[attrValue] === 'function',\n            isAttrNameWithFn = typeof validationRulesAttributes[attrName] === 'function';\n\n        if( isTypeValueWithFn || isAttrNameWithFn ){\n\n            let extraValObj = {\n                    attrName: (isTypeValueWithFn ? attrValue : attrName),\n                    attrValue: attrValue,\n                    fieldEl,\n                    fieldOptions\n                };\n\n            if( isTypeValueWithFn || attrName === 'requiredFrom' ){\n                // THESE VALIDATIONS MUST RUN BEFORE ALL OTHERS\n                attrValidations.unshift( extraValObj );\n            } else {\n                attrValidations.push( extraValObj );\n            }\n\n        }\n    });\n\n    // RUN SPECIFIC VALIDATIONS FOR validationRulesAttributes\n    attrValidations.forEach(function(item){\n        let extraVal = validationRulesAttributes[item.attrName]( item, fieldEl );\n        if( !extraVal.result ){\n            obj = mergeObjects({}, obj, extraVal);\n            attrValidationsResult = false;\n        }\n    });\n\n    // RUN VALIDATIONS FOR validationRules\n    if( typeof self.validationRules[fieldType] === 'function' ){\n        obj = mergeObjects( {}, obj, self.validationRules[fieldType].call(self, fieldValue, fieldEl) );\n        obj.result = obj.result && attrValidationsResult;\n        if( !obj.result ){\n            if( typeof obj.errors === 'undefined' ){\n                obj.errors = {};\n            }\n            obj.errors.rule = true;\n        }\n    }\n\n    return obj;\n\n}\n","\nimport { executeCallback, mergeObjects } from './helper.js';\nimport { isValidForm } from './isValidForm.js';\n\nexport function validateForm( fieldOptionsObj = {} ){\n\n    const self = this,\n          fieldOptions = mergeObjects({}, self.options.fieldOptions, fieldOptionsObj),\n          obj = isValidForm.call( self, fieldOptions );\n\n    executeCallback.call( self, fieldOptions.onValidation, obj.fields, {fieldOptions} );\n\n    return obj;\n    \n}\n","\nimport { fieldsStringSelector, isDOMNode, mergeObjects, validateFormObjDefault } from './helper.js';\nimport { isValidField } from './isValidField.js';\n\nexport function isValidForm( fieldOptionsObj = {} ){\n\n    const self = this,\n          formEl = self.formEl;\n\n    let obj = mergeObjects({}, validateFormObjDefault);\n\n    if( !isDOMNode(formEl) || !formEl.matches('[novalidate]') ){\n        obj.result = false;\n        return obj;\n    }\n    \n    let fieldOptions = mergeObjects( {}, self.options.fieldOptions, fieldOptionsObj, {focusOnRelated: false} ),\n        currentFieldName = '',\n        currentFieldType = '';\n    \n    Array.from( formEl.querySelectorAll(fieldsStringSelector) ).forEach(function( fieldEl ){\n        let name = fieldEl.name,\n            type = fieldEl.type,\n            fieldData = {};\n        \n        if( (name === currentFieldName && type === currentFieldType) ){ return true; }\n        \n        if( !fieldEl.matches('[data-required-from]') ){\n            currentFieldName = name;\n            currentFieldType = type;\n        }\n        \n        fieldData = isValidField.call( self, fieldEl, fieldOptions );\n\n        if( !fieldData.result ){\n            obj.result = false;\n        }\n        \n        obj.fields.push( fieldData );\n    });\n    \n    return obj;\n\n}\n"],"sourceRoot":""}