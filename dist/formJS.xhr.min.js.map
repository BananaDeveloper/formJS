{"version":3,"sources":["webpack:///webpack/bootstrap","webpack:///./src/modules/helper.js","webpack:///./src/modules/validationRules.js","webpack:///./src/index.js","webpack:///./src/modules/optionsUtils.js","webpack:///./src/modules/checkDirtyField.js","webpack:///./src/modules/options.js","webpack:///./src/modules/optionsAjaxXhr.js","webpack:///./src/modules/validationErrors.js","webpack:///./src/modules/constructor.js","webpack:///./src/modules/listenerCallbacks.js","webpack:///./src/modules/formStartup.js","webpack:///./src/modules/destroy.js","webpack:///./src/modules/getFormData.js","webpack:///./src/modules/init.js","webpack:///./src/modules/isValidField.js","webpack:///./src/modules/isValid.js","webpack:///./src/modules/isValidForm.js","webpack:///./src/modules/submit.js","webpack:///./src/modules/ajaxCallXhr.js","webpack:///./src/modules/validateField.js","webpack:///./src/modules/validateForm.js"],"names":["installedModules","__webpack_require__","moduleId","exports","module","i","l","modules","call","m","c","d","name","getter","o","Object","defineProperty","enumerable","get","r","Symbol","toStringTag","value","t","mode","__esModule","ns","create","key","bind","n","default","object","property","prototype","hasOwnProperty","p","s","e","iterator","constructor","isDOMNode","fieldsStringSelector","addClass","element","cssClasses","split","forEach","className","classList","add","checkFormEl","formEl","isString","_typeof","isFormSelector","document","querySelector","tagName","toLowerCase","result","executeCallback","callbackOption","callbackData","self","this","callbackFnList","push","Array","isArray","cbFn","getSplitChar","string","splitChar","indexOf","node","Element","isPrototypeOf","isFieldForChangeEvent","fieldEl","matches","isNodeList","nodeList","NodeList","isPlainObject","toString","mergeObjects","out","arguments","length","obj","isObject","concat","slice","removeClass","remove","serializeObject","keys","reduce","a","k","encodeURIComponent","join","toCamelCase","replace","all","letter","toUpperCase","validateFieldObjDefault","validateFormObjDefault","fields","validationRulesAttributes","validationRules","_helper","cap","RegExp","test","validationErrors","errors","color","date","dateDDMMYYYY","email","fiscalCode","landlineNumber","mobileNumber","number","numberFloat","numberInteger","password","tel","url","username","vatNumber","checkbox","data","dataChecksEl","closest","checked","checks","attrValue","getAttribute","JSON","parse","checkedElLength","querySelectorAll","isMinOk","isMaxOk","minChecks","maxChecks","Error","equalTo","checkFromEl","exactLength","valueLength","minlength","maxlength","file","MIMEtype","accept","from","files","exceedMaxFileSize","fieldOptions","maxFileSize","size","isAcceptedFileType","type","acceptedFileType","valueL","isMinlengthOk","isMaxlengthOk","stringLength","max","isDate","maxVal","reverse","min","minVal","pattern","fieldPattern","radio","fieldChecked","trim","requiredFrom","isValidValue","reqMoreEl","required","_optionsUtils","_options","_validationRules","_validationErrors","_constructor","_destroy2","_getFormData2","_init2","_isValidField2","_isValidForm2","_submit2","_validateField2","_validateForm2","Form","optionsObj","constructorFn","destroy","customFn","getFormData","init","isValidField","isValidForm","event","submit","fieldElem","validateField","validateForm","errorsObj","rulesObj","options","isInitialized","version","setCallbackFunctionsInOptions","window","FormJS","_checkDirtyField","_defaultCallbacksInOptions","onValidation","fieldsArray","containerEl","isReqFrom","checkDirtyField","skipUIfeedback","errorClasses","error","errorEmpty","errorRule","valid","extraErrorClass","isChecks","empty","errorClassToRemove","callbacks","formOptions","_loop","opt","fnName","fnInOptions","fnList","unshift","dirty","_optionsAjaxXhr","focusOnRelated","handleFileUpload","handleValidation","onPastePrevented","preventPasteFields","strictHtmlValidation","validateOnEvents","ajaxOptions","ajaxSubmit","beforeSend","handleSubmit","onSubmitComplete","onSubmitError","onSubmitSuccess","async","cache","contentType","headers","X-Requested-With","method","timeout","location","href","strLength","invalidChars","missingAtChar","splitAt_at","missingUserName","missingDomain","missingExtensionDot","missingExtension","extLength","minlengthExtension","missingNumber","missingLowercase","missingUppercase","invalidStartChar","indexOfIT","argsL","checkFormElem","formjs","listenerCallbacks","charCount","callbackFns","dataTypeNumber","keypressMaxlength","pastePrevent","validation","freeze","formStartup","_listenerCallbacks","_formStartup","eventOrField","target","charLengthEl","usedChars","textContent","fieldValue","stopImmediatePropagation","valueReplaced","maxLength","keyPressed","which","keyCode","preventDefault","eventName","isFieldForChangeEventBoolean","isRadio","isReqMore","findReqMoreEl","findReqFromEl","id","focus","charLengthElems","maxFileSizeElems","addEventListener","useCapturing","validationListenerNames","removeEventListener","formData","formFieldsEl","filteredFields","filter","elem","isCheckbox","isSelect","checkboxes","field","checkedRadio","selectedOpts","option","selected","formFields","currentFieldName","currentFieldType","isCheckboxOrRadio","eventToTrigger","evName","newEvent","Event","bubbles","cancelable","dispatchEvent","fieldOptionsObj","isRequired","isValidateIfFilled","isValid","_isValid","fieldType","fieldAttributes","attributes","sort","b","attrValidations","attrValidationsResult","attr","attrName","isTypeValueWithFn","isAttrNameWithFn","extraValObj","item","extraVal","rule","fieldData","eventPreventDefault","enableBtn","btnEl","disabled","formValidation","isAjaxForm","formDataObj","callbacksBeforeSend","beforeSendOpt","beforeSendData","stopExecution","stopCallbackLoop","beforeSendFn","ajaxCall","submitEvent","_ajaxCallXhr","timeoutTimer","xhrOptions","isMultipart","formDataMultipart","FormData","append","idx","XHR","XMLHttpRequest","parseResponse","xhr","responseText","responseXML","isXML","DOMParser","parseFromString","errorFn","ajaxData","errorThrown","statusText","status","response","responseData","readyStateOK","readyState","statusOK","dataOrXHR","XHRorResponse","clearTimeout","Date","getTime","open","xhrFields","h","mimeType","overrideMimeType","setRequestHeader","stringify","send","setTimeout","abort"],"mappings":"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","file":"formJS.xhr.min.js","sourcesContent":[" \t// The module cache\n \tvar installedModules = {};\n\n \t// The require function\n \tfunction __webpack_require__(moduleId) {\n\n \t\t// Check if module is in cache\n \t\tif(installedModules[moduleId]) {\n \t\t\treturn installedModules[moduleId].exports;\n \t\t}\n \t\t// Create a new module (and put it into the cache)\n \t\tvar module = installedModules[moduleId] = {\n \t\t\ti: moduleId,\n \t\t\tl: false,\n \t\t\texports: {}\n \t\t};\n\n \t\t// Execute the module function\n \t\tmodules[moduleId].call(module.exports, module, module.exports, __webpack_require__);\n\n \t\t// Flag the module as loaded\n \t\tmodule.l = true;\n\n \t\t// Return the exports of the module\n \t\treturn module.exports;\n \t}\n\n\n \t// expose the modules object (__webpack_modules__)\n \t__webpack_require__.m = modules;\n\n \t// expose the module cache\n \t__webpack_require__.c = installedModules;\n\n \t// define getter function for harmony exports\n \t__webpack_require__.d = function(exports, name, getter) {\n \t\tif(!__webpack_require__.o(exports, name)) {\n \t\t\tObject.defineProperty(exports, name, { enumerable: true, get: getter });\n \t\t}\n \t};\n\n \t// define __esModule on exports\n \t__webpack_require__.r = function(exports) {\n \t\tif(typeof Symbol !== 'undefined' && Symbol.toStringTag) {\n \t\t\tObject.defineProperty(exports, Symbol.toStringTag, { value: 'Module' });\n \t\t}\n \t\tObject.defineProperty(exports, '__esModule', { value: true });\n \t};\n\n \t// create a fake namespace object\n \t// mode & 1: value is a module id, require it\n \t// mode & 2: merge all properties of value into the ns\n \t// mode & 4: return value when already ns object\n \t// mode & 8|1: behave like require\n \t__webpack_require__.t = function(value, mode) {\n \t\tif(mode & 1) value = __webpack_require__(value);\n \t\tif(mode & 8) return value;\n \t\tif((mode & 4) && typeof value === 'object' && value && value.__esModule) return value;\n \t\tvar ns = Object.create(null);\n \t\t__webpack_require__.r(ns);\n \t\tObject.defineProperty(ns, 'default', { enumerable: true, value: value });\n \t\tif(mode & 2 && typeof value != 'string') for(var key in value) __webpack_require__.d(ns, key, function(key) { return value[key]; }.bind(null, key));\n \t\treturn ns;\n \t};\n\n \t// getDefaultExport function for compatibility with non-harmony modules\n \t__webpack_require__.n = function(module) {\n \t\tvar getter = module && module.__esModule ?\n \t\t\tfunction getDefault() { return module['default']; } :\n \t\t\tfunction getModuleExports() { return module; };\n \t\t__webpack_require__.d(getter, 'a', getter);\n \t\treturn getter;\n \t};\n\n \t// Object.prototype.hasOwnProperty.call\n \t__webpack_require__.o = function(object, property) { return Object.prototype.hasOwnProperty.call(object, property); };\n\n \t// __webpack_public_path__\n \t__webpack_require__.p = \"\";\n\n\n \t// Load entry module and return exports\n \treturn __webpack_require__(__webpack_require__.s = 2);\n","\nexport const\n\nfieldsStringSelector = 'input:not([type=\"reset\"]):not([type=\"submit\"]):not([type=button]):not([type=hidden]), select, textarea',\n\naddClass = function( element, cssClasses ){\n    cssClasses.split(' ').forEach(function(className){\n        element.classList.add( className );\n    });\n},\n\ncheckFormEl = function( formEl ){\n    let isString = typeof formEl,\n        isValidNodeSelector = isString === 'string' && isDOMNode(document.querySelector(formEl)),\n        isFormSelector = isValidNodeSelector && document.querySelector(formEl).tagName.toLowerCase() === 'form',\n        obj = {\n            result: isDOMNode(formEl) || isFormSelector,\n            element: (isString === 'string' ? document.querySelector(formEl) : formEl)\n        };\n\n    return obj;\n},\n\nexecuteCallback = function( callbackOption, callbackData ){\n    let self = this,\n        callbackFnList = [];\n\n    if( typeof callbackOption === 'function' ){\n        callbackFnList.push( callbackOption );\n    } else if( Array.isArray(callbackOption) ) {\n        callbackFnList = callbackOption;\n    }\n\n    callbackFnList.forEach(function(cbFn){\n        cbFn.call(self, callbackData );\n    });\n},\n\ngetSplitChar = function( string ){\n    let splitChar = '.';\n\n    if( string.indexOf(splitChar) === -1 ){\n        if( string.indexOf('-') >= 0 ){\n            splitChar = '-';\n        } else if( string.indexOf('/') >= 0 ){\n            splitChar = '/';\n        }\n    }\n\n    return splitChar;\n},\n\nisDOMNode = function( node ){\n    return Element.prototype.isPrototypeOf( node );\n},\n\nisFieldForChangeEvent = function ( fieldEl ) {\n    return fieldEl.matches('select, [type=\"radio\"], [type=\"checkbox\"], [type=\"file\"]');\n},\n\nisNodeList = function( nodeList ){\n    return NodeList.prototype.isPrototypeOf( nodeList );\n},\n\nisPlainObject = function( object ){\n    return Object.prototype.toString.call( object ) === '[object Object]';\n},\n\nmergeObjects = function( out = {} ){\n    for(let i=1; i<arguments.length; i++){\n        let obj = arguments[i];\n\n        if(!obj){ continue; }\n\n        for(let key in obj){\n            let isArray = Object.prototype.toString.call(obj[key]) === \"[object Array]\";\n            let isObject = Object.prototype.toString.call(obj[key]) === \"[object Object]\";\n\n            // COPY ONLY ENUMERABLE PROPERTIES\n            if( obj.hasOwnProperty(key) ){\n                if( isArray ){\n\n                    if( typeof out[key] === 'undefined' || out[key] === null ){\n                        out[key] = [];\n                    }\n                    out[key] = out[key].concat( obj[key].slice(0) );\n\n                } else if( isObject ){\n\n                    out[key] = mergeObjects(out[key], obj[key]);\n\n                } else {\n\n                    // STRING | NUMBER | BOOLEAN | FUNCTION\n                    if( Array.isArray(out[key]) ){\n                        out[key].push(obj[key]);\n                    } else {\n                        out[key] = obj[key];\n                    }\n\n                }\n            }\n        }\n    }\n\n    return out;\n},\n\nremoveClass = function( element, cssClasses ){\n    cssClasses.split(' ').forEach(function(className){\n        element.classList.remove( className );\n    });\n},\n\nserializeObject = function( obj ){\n    var objToString = (\n            (obj && typeof obj === 'object' && obj.constructor === Object) ? \n            Object.keys(obj)\n                .reduce(function(a,k){\n                    a.push(k+'='+encodeURIComponent(obj[k]));\n                    return a\n                },[]).join('&') : \n            obj\n    );\n    return objToString;\n},\n\ntoCamelCase = function( string ){\n    return string.replace(/-([a-z])/ig, function(all, letter){ return letter.toUpperCase(); });\n},\n\nvalidateFieldObjDefault = { result: false, fieldEl: null },\n\nvalidateFormObjDefault = { result: true, fields: [] }\n","\nimport { getSplitChar } from './helper.js';\n\nexport const validationRules = {\n            \n    cap: function( string ){\n        // VALID ITALIAN CAP WITH 5 DIGITS\n        const\n            regex = new RegExp(/^[0-9]{5}$/),\n            obj = {\n                result: regex.test( string )\n            };\n\n        if( !obj.result && typeof this.validationErrors.cap === 'function' ){\n            obj.errors = this.validationErrors.cap( string );\n        }\n\n        return obj;\n    },\n\n    color: function( string ){\n        // HEX COLOR WITH/WITHOUT #\n        // CAN BE 3 OR 6 CHARACTERS ( fff | FFF | ffffff | FFFFFF )\n        let obj = {\n            result: /^#?([a-fA-F0-9]{6}|[a-fA-F0-9]{3})$/.test( string )\n        };\n\n        if( !obj.result && typeof this.validationErrors.color === 'function' ){\n            obj.errors = this.validationErrors.color( string );\n        }\n\n        return obj;\n    },\n    \n    date: function( string ){\n        // DATE AS ISO 8601 DATE FORMAT     YYYY MM DD | YYYY/MM/DD | YYYY.MM.DD | YYYY-MM-DD\n\n        let date = /^(((19|[2-9]\\d)\\d{2})[ \\/\\-.](0[13578]|1[02])[ \\/\\-.](0[1-9]|[12]\\d|3[01]))|(((19|[2-9]\\d)\\d{2})[ \\/\\-.](0[13456789]|1[012])[ \\/\\-.](0[1-9]|[12]\\d|30))|(((19|[2-9]\\d)\\d{2})[ \\/\\-.]02[ \\/\\-.](0[1-9]|1\\d|2[0-8]))|(((1[6-9]|[2-9]\\d)(0[48]|[2468][048]|[13579][26])|((16|[2468][048]|[3579][26])00))[ \\/\\-.]02[ \\/\\-.]29)$/g.test( string ),\n            obj = {\n                result: date\n            };\n\n        if( !obj.result && typeof this.validationErrors.date === 'function' ){\n            obj.errors = this.validationErrors.date( string );\n        }\n\n        return obj;\n    },\n\n    dateDDMMYYYY: function( string ){\n        // DATE AS ITALIAN SYNTAX       DD MM YYYY | DD/MM/YYYY | DD.MM.YYYY | DD-MM-YYYY\n\n        let date = /^(((0[1-9]|[12]\\d|3[01])[ \\/\\-.](0[13578]|1[02])[ \\/\\-.]((19|[2-9]\\d)\\d{2}))|((0[1-9]|[12]\\d|30)[ \\/\\-.](0[13456789]|1[012])[ \\/\\-.]((19|[2-9]\\d)\\d{2}))|((0[1-9]|1\\d|2[0-8])[ \\/\\-.]02[ \\/\\-.]((19|[2-9]\\d)\\d{2}))|(29[ \\/\\-.]02[ \\/\\-.]((1[6-9]|[2-9]\\d)(0[48]|[2468][048]|[13579][26])|((16|[2468][048]|[3579][26])00))))$/g.test( string ),\n            obj = {\n                result: date\n            };\n\n        if( !obj.result && typeof this.validationErrors.dateDDMMYYYY === 'function' ){\n            obj.errors = this.validationErrors.dateDDMMYYYY( string );\n        }\n\n        return obj;\n    },\n    \n    email: function( string ){\n        // FROM https://emailregex.com\n        // AS FOR RFC 5322 Official Standard EMAIL MUST BE AT LEAST:\n        // a@a.aa\n        const obj = {\n            result: /^(([^<>()\\[\\]\\\\.,;:\\s@\"]+(\\.[^<>()\\[\\]\\\\.,;:\\s@\"]+)*)|(\".+\"))@((\\[[0-9]{1,3}\\.[0-9]{1,3}\\.[0-9]{1,3}\\.[0-9]{1,3}])|(([a-zA-Z\\-0-9]+\\.)+[a-zA-Z]{2,}))$/.test( string )\n        };\n\n        if( !obj.result && typeof this.validationErrors.email === 'function' ){\n            obj.errors = this.validationErrors.email( string );\n        }\n\n        return obj;\n    },\n    \n    fiscalCode: function( string ){\n        // http://blog.marketto.it/2016/01/regex-validazione-codice-fiscale-con-omocodia/\n        let obj = {\n                result: /^(?:[B-DF-HJ-NP-TV-Z](?:[AEIOU]{2}|[AEIOU]X)|[AEIOU]{2}X|[B-DF-HJ-NP-TV-Z]{2}[A-Z]){2}[\\dLMNP-V]{2}(?:[A-EHLMPR-T](?:[04LQ][1-9MNP-V]|[1256LMRS][\\dLMNP-V])|[DHPS][37PT][0L]|[ACELMRT][37PT][01LM])(?:[A-MZ][1-9MNP-V][\\dLMNP-V]{2}|[A-M][0L](?:[\\dLMNP-V][1-9MNP-V]|[1-9MNP-V][0L]))[A-Z]$/i.test( string )\n            };\n\n        if( !obj.result && typeof this.validationErrors.fiscalCode === 'function' ){\n            obj.errors = this.validationErrors.fiscalCode( string );\n        }\n        \n        return obj;\n    },\n    \n    landlineNumber: function( string ){\n        // LANDLINE PREFIX:\n        // +39 | 0039 | not-set ( ALSO WITH INTERNATIONAL PREFIXES WITH 2 DIGITS )\n        // LANDLINE NUMBER MUST START WITH 0 ( AS FOR ITALIAN ONES ):\n        // 1234567890 | 12 34567890 | 123456789 | 1234 56789 ( ALSO WITH . - / AS SEPARATOR )\n        let obj = {\n            result: /^((00|\\+)\\d{2}[\\-\\. ]??)??(((0[\\d]{1,4}))([\\/\\-\\. ]){0,1}([\\d, ]{5,10}))$/.test( string )\n        };\n\n        if( !obj.result && typeof this.validationErrors.landlineNumber === 'function' ){\n            obj.errors = this.validationErrors.landlineNumber( string );\n        }\n\n        return obj; \n    },\n    \n    mobileNumber: function( string ){\n        // +39 | 0039 | 39 | not-set ( ALSO WITH ALL INTERNATIONAL PREFIXES WITH 2 DIGITS )\n        // MOBILE NUMBER MUST START WITH 3\n        // 3234567890 | 323 4567890 | 323 45 67 890 ( ALSO WITH . OR - AS SEPARATOR )\n        let obj = {\n            result: /^((00|\\+)??\\d{2}[\\-\\. ]??)??3\\d{2}[\\-\\. ]??(\\d{6,7}|\\d{2}[\\-\\. ]??\\d{2}[\\-\\. ]??\\d{3})$/.test( string )\n        };\n\n        if( !obj.result && typeof this.validationErrors.mobileNumber === 'function' ){\n            obj.errors = this.validationErrors.mobileNumber( string );\n        }\n\n        return obj;\n    },\n    \n    number: function( string ){\n        // ALL NUMBERS ( INTEGERS AND FLOATING )\n        // VALID NUMBERS: 123 | 123.456 | .123\n        let obj = {\n            result: /[+-]?([0-9]*[.])?[0-9]+/.test( string )\n        };\n\n        if( !obj.result && typeof this.validationErrors.number === 'function' ){\n            obj.errors = this.validationErrors.number( string );\n        }\n\n        return obj;\n    },\n    \n    numberFloat: function( string ){\n        // ONLY FLOATING NUMBERS\n        // VALID NUMBERS: 123.456 | .123\n        let obj = {\n            result: /[+-]?([0-9]*[.])[0-9]+/.test( string )\n        };\n\n        if( !obj.result && typeof this.validationErrors.numberFloat === 'function' ){\n            obj.errors = this.validationErrors.numberFloat( string );\n        }\n\n        return obj;\n    },\n    \n    numberInteger: function( string ){\n        // ONLY INTEGER NUMBERS\n        let obj = {\n            result: /^\\d+$/.test( string )\n        };\n\n        if( !obj.result && typeof this.validationErrors.numberInteger === 'function' ){\n            obj.errors = this.validationErrors.numberInteger( string );\n        }\n\n        return obj;\n    },\n    \n    password: function( string ){\n        // PASSWORD ( NO SPECIAL CHARACTERS ) WITH AT LEAST:\n        // ONE DIGIT + ONE LOWERCASE + ONE UPPERCASE + MIN LENGTH OF 8 CHARACTERS\n        let obj = {\n            result: /^(?=.*[0-9])(?=.*[a-z])(?=.*[A-Z])[0-9a-zA-Z]{8,}$/.test(string)\n        };\n\n        if( !obj.result && typeof this.validationErrors.password === 'function' ){\n            obj.errors = this.validationErrors.password( string );\n        }\n\n        return obj;\n    },\n\n    tel: function( string ){\n        // CHECK IF ONE OF landlineNumber OR mobileNumber IS VALID\n        let obj = {\n            result: this.validationRules.landlineNumber(string).result || this.validationRules.mobileNumber(string).result\n        };\n\n        if( !obj.result && typeof this.validationErrors.tel === 'function' ){\n            obj.errors = this.validationErrors.tel( string );\n        }\n\n        return obj;\n    },\n    \n    url: function( string ){\n        // MUST NOT CONTAIN PARAMETERS:\n        // www.mysite.com/index.html         --> VALID URL\n        // www.mysite.com/index.html?v=hello --> INVALID URL\n        let obj = {\n            result: /^((https?|ftp|file):\\/\\/)?([\\da-z\\.-]+)\\.([a-z\\.]{2,6})([\\/\\w \\.-]*)*\\/?$/.test( string )\n        };\n\n        if( !obj.result && typeof this.validationErrors.url === 'function' ){\n            obj.errors = this.validationErrors.url( string );\n        }\n\n        return obj;\n    },\n    \n    username: function( string ){\n        // USERNAME WITH LETTERS/NUMBERS/UNDERSCORE AND . - @ WITH MIN LENGTH 3 AND MAX LENGTH 24\n        //return /^[\\w\\.\\-\\@]{3,24}$/.test( string );\n        \n        // USERNAME MUST START WITH A LETTER/NUMBER/UNDERSCORE AND CAN ALSO CONTAIN . - @ WITH MIN LENGTH 3 AND MAX LENGTH 24\n        let obj = {\n            result: /^(?=\\w)(?=[\\-\\.\\@]?)[\\w\\-\\.\\@]{3,24}$/.test( string )\n        };\n\n        if( !obj.result && typeof this.validationErrors.username === 'function' ){\n            obj.errors = this.validationErrors.username( string );\n        }\n\n        return obj;\n    },\n    \n    vatNumber: function( string ){\n        // VAT NUMBER CAN CONTAIN OR NOT THE 'IT' STRING AND THEN 11 NUMBERS\n        let obj = {\n            result: /^(IT){0,1}[0-9]{11}$/i.test( string )\n        };\n\n        if( !obj.result && typeof this.validationErrors.vatNumber === 'function' ){\n            obj.errors = this.validationErrors.vatNumber( string );\n        }\n\n        return obj;\n    }\n    \n}\n\nexport const validationRulesAttributes = {\n\n    checkbox: function( data ){\n        let formEl = data.fieldEl.closest('form'),\n            dataChecksEl = formEl.querySelector('[name=\"' + data.fieldEl.name + '\"][data-checks]'),\n            obj = { result: data.fieldEl.checked };\n\n        if( dataChecksEl !== null ){\n            obj = this.checks({ attrValue: dataChecksEl.getAttribute('data-checks'), fieldEl: dataChecksEl});\n        }\n\n        return obj;\n    },\n\n    checks: function( data ){\n        try {\n            let attrValue = JSON.parse(data.attrValue),\n                fieldEl = data.fieldEl,\n                formEl = fieldEl.closest('form'),\n                checkedElLength = formEl.querySelectorAll('[name=\"' + fieldEl.name + '\"]:checked').length,\n                isMinOk = checkedElLength >= attrValue[0],\n                isMaxOk = checkedElLength <= attrValue[1],\n                obj = {\n                    result: isMinOk && isMaxOk\n                };\n\n            if( !obj.result ){\n\n                obj.errors = { checks: true };\n                if( !isMinOk ){ obj.errors.minChecks = true; }\n                if( !isMaxOk ){ obj.errors.maxChecks = true; }\n\n            }\n\n            return obj;\n        } catch(e){\n            throw new Error('\"data-checks\" attribute is not a valid array!');\n        }\n    },\n\n    equalTo: function( data ){\n        let fieldEl = data.fieldEl,\n            formEl = fieldEl.closest('form'),\n            checkFromEl = formEl.querySelector( '[name=\"' + fieldEl.getAttribute('data-equal-to') + '\"]' ),\n            obj = {\n                result: fieldEl.value === checkFromEl.value\n            };\n\n        if( !obj.result ){\n            \n            obj.errors = { equalTo: true };\n        }\n\n        return obj;\n    },\n    \n    exactLength: function( data ){\n        let valueLength = data.fieldEl.value.length,\n            exactLength = (data.attrValue * 1),\n            obj = {\n                result: valueLength === exactLength\n            };\n\n        if( !obj.result ){\n\n            obj.errors = { exactLength: true };\n            if( valueLength < exactLength ){ obj.errors.minlength = true; }\n            else { obj.errors.maxlength = true; }\n\n        }\n\n        return obj;\n    },\n\n    file: function( data ){\n        let fieldEl = data.fieldEl,\n            MIMEtype = (fieldEl.accept ? new RegExp(fieldEl.accept.replace( '*', '[^\\\\/,]+' )) : null),\n            filesList = Array.from(fieldEl.files),\n            obj = { result: true };\n\n        filesList.forEach(function( file ){\n            let exceedMaxFileSize = data.fieldOptions.maxFileSize > 0 && (file.size/1024/1024) > data.fieldOptions.maxFileSize,\n                isAcceptedFileType = (MIMEtype !== null ? MIMEtype.test(file.type) : true);\n\n            if( exceedMaxFileSize || !isAcceptedFileType ){\n                obj.result = false;\n                if( typeof obj.errors === 'undefined' ){\n                    obj.errors = {};\n                }\n                obj.errors.file = true;\n                if( exceedMaxFileSize ){ obj.errors.maxFileSize = true; }\n                if( !isAcceptedFileType ){ obj.errors.acceptedFileType = true; }\n\n            }\n        });\n\n        return obj;\n    },\n\n    length: function( data ){\n        try {\n            let valueL = data.fieldEl.value.length,\n                attrValue = JSON.parse(data.attrValue),\n                isMinlengthOk = valueL >= attrValue[0],\n                isMaxlengthOk = valueL <= attrValue[1],\n                obj = { result: isMinlengthOk && isMaxlengthOk };\n\n            if( !obj.result ){\n\n                obj.errors = { stringLength: true };\n                if( !isMinlengthOk ){ obj.errors.minlength = true; }\n                if( !isMaxlengthOk ){ obj.errors.maxlength = true; }\n\n            }\n\n            return obj;\n        } catch(e){\n            throw new Error('\"data-length\" attribute is not a valid array!');\n        }\n    },\n    \n    max: function( data ){\n        let fieldEl = data.fieldEl,\n            isDate = (fieldEl.matches('[type=\"date\"]') || fieldEl.matches('[data-subtype=\"date\"]') || fieldEl.matches('[data-subtype=\"dateDDMMYYYY\"]')),\n            value = data.fieldEl.value,\n            maxVal = data.attrValue;\n        \n        if( isDate ){\n\n            let splitChar = getSplitChar( value );\n\n            if( value.indexOf(splitChar) === 2 ){\n                // DD MM YYYY\n                value = value.split( splitChar ).reverse();\n            } else {\n                // YYYY MM DD\n                value = value.split( splitChar );\n            }\n\n            value = value.join('');\n            maxVal = maxVal.split('-').join('');\n\n        }\n\n        value = value * 1;\n        maxVal = maxVal * 1;\n\n        let obj = {\n                result: value <= maxVal\n            };\n\n        if( !obj.result ){\n            \n            obj.errors = { max: true };\n        }\n        \n        return obj;\n    },\n    \n    maxlength: function( data ){\n        const obj = {\n            result: data.fieldEl.value.length <= (data.attrValue * 1)\n        };\n\n        if( !obj.result ){\n\n            obj.errors = { maxlength: true };\n        }\n\n        return obj;\n    },\n    \n    min: function( data ){\n        let fieldEl = data.fieldEl,\n            isDate = (fieldEl.matches('[type=\"date\"]') || fieldEl.matches('[data-subtype=\"date\"]') || fieldEl.matches('[data-subtype=\"dateDDMMYYYY\"]')),\n            value = data.fieldEl.value,\n            minVal = data.attrValue;\n        \n        if( isDate ){\n\n            let splitChar = getSplitChar( value );\n\n            if( value.indexOf(splitChar) === 2 ){\n                // DD MM YYYY\n                value = value.split( splitChar ).reverse();\n            } else {\n                // YYYY MM DD\n                value = value.split( splitChar );\n            }\n\n            value = value.join('');\n            minVal = minVal.split('-').join('');\n\n        }\n\n        value = value * 1;\n        minVal = minVal * 1;\n\n        let obj = {\n                result: value >= minVal\n            };\n\n        if( !obj.result ){\n            \n            obj.errors = { min: true };\n        }\n        \n        return obj;\n    },\n\n    minlength: function( data ){\n        const obj = {\n            result: data.fieldEl.value.length >= (data.attrValue * 1)\n        };\n\n        if( !obj.result ){\n\n            obj.errors = { minlength: true };\n        }\n\n        return obj;\n    },\n\n    pattern: function( data ){\n        let fieldEl = data.fieldEl,\n            fieldPattern = fieldEl.pattern,\n            fieldRegex = new RegExp( fieldPattern ),\n            obj = {\n                result: fieldRegex.test( fieldEl.value )\n            };\n\n        if( !obj.result ){\n\n            obj.errors = { pattern: true };\n        }\n\n        return obj;\n    },\n\n    radio: function( data ){\n        let fieldEl = data.fieldEl,\n            fieldChecked = fieldEl.closest('form').querySelector( '[name=\"'+ fieldEl.name +'\"]:checked' ),\n            isValid = fieldChecked !== null && fieldChecked.value.trim().length > 0,\n            obj = { result: isValid };\n\n        return obj;\n    },\n\n    requiredFrom: function( data ){\n        let fieldEl = data.fieldEl,\n            formEl = fieldEl.closest('form'),\n            isValidValue = fieldEl.value.trim().length > 0,\n            reqMoreEl = formEl.querySelector( fieldEl.getAttribute('data-required-from') ),\n            checkedEl = formEl.querySelector( '[name=\"'+ reqMoreEl.name +'\"]:checked' ),\n            obj = { result: checkedEl !== null };\n\n        if( reqMoreEl.checked && reqMoreEl.required ){\n            obj.result = isValidValue;\n        }\n\n        if( !obj.result ){\n            obj.errors = { requiredFrom: true };\n        }\n        \n        return obj;\n    }\n    \n}\n","\n/**! formJS v3.0.0 | Valerio Di Punzio (@SimplySayHi) | http://simplysayhi.github.io/formJS | https://github.com/SimplySayHi/formJS | MIT license */\n\nimport { mergeObjects }        from './modules/helper.js';\nimport { setCallbackFunctionsInOptions } from './modules/optionsUtils.js';\n\nimport { options }              from './modules/options.js';\nimport { validationRules }      from './modules/validationRules.js';\nimport { validationErrors }     from './modules/validationErrors.js';\n\n// CONSTRUCTOR FUNCTION & PUBLIC METHODS\nimport { constructorFn }         from './modules/constructor.js';\nimport { destroy }              from './modules/destroy.js';\nimport { getFormData }          from './modules/getFormData.js';\nimport { init }                 from './modules/init.js';\nimport { isValidField }         from './modules/isValidField.js';\nimport { isValidForm }          from './modules/isValidForm.js';\nimport { submit }               from './modules/submit.js';\nimport { validateField }        from './modules/validateField.js';\nimport { validateForm }         from './modules/validateForm.js';\n\nconst version = '3.0.0';\n\nclass Form {\n\n    constructor( formEl, optionsObj ){\n        constructorFn.call(this, formEl, optionsObj);\n    }\n\n    destroy(){\n        destroy.call(this);\n    }\n    \n    getFormData( customFn ){\n        return getFormData.call(this, customFn);\n    }\n\n    init(){\n        return init.call(this);\n    }\n    \n    isValidField( fieldEl, fieldOptions ){\n        return isValidField.call(this, fieldEl, fieldOptions);\n    }\n    \n    isValidForm( optionsObj ){\n        return isValidForm.call(this, optionsObj);\n    }\n\n    submit( optionsObj, event ){\n        submit.call(this, optionsObj, event);\n    }\n\n    validateField( fieldElem, fieldOptions ){\n        return validateField.call(this, fieldElem, fieldOptions);\n    }\n\n    validateForm( optionsObj ){\n        return validateForm.call(this, optionsObj);\n    }\n    \n    static addValidationErrors( errorsObj ){\n        this.prototype.validationErrors = mergeObjects({}, this.prototype.validationErrors, errorsObj);\n    }\n\n    static addValidationRules( rulesObj ){\n        this.prototype.validationRules = mergeObjects({}, this.prototype.validationRules, rulesObj);\n    }\n    \n    static setOptions( optionsObj ){\n        this.prototype.options = mergeObjects({}, this.prototype.options, optionsObj);\n    }\n\n}\n\nForm.prototype.isInitialized = false;\nForm.prototype.options = options;\nForm.prototype.validationErrors = validationErrors;\nForm.prototype.validationRules = validationRules;\nForm.prototype.version = version;\n\nsetCallbackFunctionsInOptions.call(Form.prototype);\n\nif( !window.Form ){ window.Form = Form; }\nif( !window.FormJS ) { window.FormJS = Form; }\n","\nimport { addClass, removeClass }  from './helper.js';\nimport { checkDirtyField }         from './checkDirtyField.js';\n\nconst _defaultCallbacksInOptions = {\n    fieldOptions: {\n        onValidation: function onValidationDefault ( fieldsArray ) {\n\n            let self = this,\n                options = self.options.fieldOptions;\n\n            fieldsArray.forEach(function( obj ){\n                let fieldEl = obj.fieldEl,\n                    containerEl = fieldEl.closest('[data-formjs-question]'),\n                    isReqFrom = fieldEl.matches('[data-required-from]'),\n                    reqMoreEl = self.formEl.querySelector( fieldEl.getAttribute('data-required-from') );\n\n                if( options.checkDirtyField ){\n                    checkDirtyField.call( self, fieldEl );\n                }\n                \n                if( containerEl !== null && !options.skipUIfeedback ){\n                    if( obj.result ){\n\n                        if( !isReqFrom || (isReqFrom && reqMoreEl.checked) ){\n                            // IF FIELD IS VALID\n                            let errorClasses = options.cssClasses.error + ' ' + options.cssClasses.errorEmpty + ' ' + options.cssClasses.errorRule;\n                            removeClass( containerEl, errorClasses );\n                            addClass( containerEl, options.cssClasses.valid );\n                        }\n\n                    } else {\n\n                        // IF FIELD IS NOT VALID\n                        let extraErrorClass = options.cssClasses.errorRule;\n\n                        // HANDLE CASE OF FIELD data-checks\n                        let isChecks = fieldEl.matches('[data-checks]'),\n                            checkedElLength = (isChecks ? containerEl.querySelectorAll('[name=\"' + fieldEl.name + '\"]:checked').length : 0);\n\n                        if( (!isChecks && (obj.errors && obj.errors.empty)) || (isChecks && checkedElLength === 0) ){\n                            extraErrorClass = options.cssClasses.errorEmpty;\n                        }\n\n                        let errorClasses = options.cssClasses.error + ' ' + extraErrorClass,\n                            errorClassToRemove = options.cssClasses.errorEmpty + ' ' + options.cssClasses.errorRule;\n                        removeClass( containerEl, options.cssClasses.valid + ' ' + errorClassToRemove );\n                        addClass( containerEl, errorClasses );\n\n                    }\n                }\n            });\n            \n        }\n    }\n};\n\nexport const setCallbackFunctionsInOptions = function(){\n    const   self = this,\n            callbacks = {\n                fieldOptions: ['onPastePrevented', 'onValidation'],\n                formOptions: ['beforeSend', 'onSubmitComplete', 'onSubmitError', 'onSubmitSuccess']\n            };\n\n    for(let opt in callbacks){\n        let fjsOpt = callbacks[opt];\n\n        fjsOpt.forEach(function(fnName){\n            let fnInOptions = self.options[opt][fnName],\n                fnList = [];\n\n            if( Array.isArray(fnInOptions) ) {\n                fnList.concat(fnInOptions);\n            } else if( fnInOptions ) {\n                fnList.push(fnInOptions);\n            }\n\n            if( typeof _defaultCallbacksInOptions[opt] !== 'undefined' && typeof _defaultCallbacksInOptions[opt][fnName] === 'function' ){\n                fnList.unshift(_defaultCallbacksInOptions[opt][fnName]);\n            }\n\n            self.options[opt][fnName] = fnList;\n        });\n    }\n\n}\n","\nimport { addClass, isNodeList, removeClass } from './helper.js';\n\nexport function checkDirtyField( fields, cssClasses = this.options.fieldOptions.cssClasses.dirty ){\n\n    var fields = (isNodeList(fields) ? Array.from( fields ) : [fields]);\n    \n    fields.forEach(function(fieldEl){\n        if( fieldEl.type !== 'checkbox' && fieldEl.type !== 'radio' ){\n            let containerEl = fieldEl.closest('[data-formjs-question]') || fieldEl;\n\n            if( fieldEl.value ){\n                \n                addClass( containerEl, cssClasses );\n                \n            } else {\n                \n                removeClass( containerEl, cssClasses );\n                \n            }\n        }\n    });\n    \n}\n","\n//import { ajaxOptions } from './optionsAjax.js';\nimport { ajaxOptions } from './optionsAjaxXhr.js';\n\nexport const options = {\n\n    fieldOptions: {\n        checkDirtyField:        false,\n        cssClasses: {\n            dirty:              'is-dirty',\n            error:              'has-error',\n            errorEmpty:         'has-error-empty',\n            errorRule:          'has-error-rule',\n            valid:              'is-valid'\n        },\n        focusOnRelated:         true,\n        handleFileUpload:       true,\n        handleValidation:       true,\n        maxFileSize:            10,\n        onPastePrevented:       null,\n        onValidation:           null,\n        preventPasteFields:     '[type=\"password\"], [data-equal-to]',\n        skipUIfeedback:         false,\n        strictHtmlValidation:   true,\n        validateOnEvents:       'input change'\n    },\n\n    formOptions: {\n        ajaxOptions:            ajaxOptions,\n        ajaxSubmit:             true,\n        beforeSend:             null,\n        getFormData:            null,\n        handleSubmit:           true,\n        onSubmitComplete:       null,\n        onSubmitError:          null,\n        onSubmitSuccess:        null\n    }\n    \n}\n","\nexport let ajaxOptions = {\n    async:              true,\n    cache:              false,\n    contentType:        'application/x-www-form-urlencoded; charset=UTF-8',\n    headers: {\n                        'X-Requested-With': 'XMLHttpRequest',\n    },\n    method:             'POST',\n    timeout:            0,\n    url:                location.href\n}\n","\nexport const validationErrors = {\n\n    cap: function( string ){\n\n        const obj = {};\n        const strLength = string.length;\n        \n        if( strLength > 5 ){ obj.maxlength = true; }\n        if( strLength > 0 && strLength < 5 ){ obj.minlength = true; }\n        if( /[^0-9]/.test(string) ){ obj.invalidChars = true; }\n\n        return obj;\n\n    },\n\n    email: function ( string ) {\n        const obj = {};\n\n        if( string.indexOf('@') === -1 ){\n\n            // @ IS MISSING\n            obj.missingAtChar = true;\n\n        } else {\n\n            let splitAt_at = string.split('@');\n            if( splitAt_at[0].length === 0 ){\n\n                // USER NAME IS MISSING\n                obj.missingUserName = true;\n\n            }\n\n            if( splitAt_at[1].length === 0 ){\n\n                // IS EMPTY AFTER @\n                obj.missingDomain = true;\n                obj.missingExtensionDot = true;\n                obj.missingExtension = true;\n\n            } else if( splitAt_at[1].indexOf('.') === -1 ) {\n\n                // DOT IS MISSING\n                obj.missingExtensionDot = true;\n                obj.missingExtension = true;\n\n            } else {\n\n                // EXTENSION MISSING OR NOT LONG ENOUGH\n                let splitAt_dot = splitAt_at[1].split('.'),\n                    extLength = splitAt_dot[1].length;\n                if( extLength === 0 ) {\n                    obj.missingExtension = true;\n                } else if( extLength < 2 ){\n                    obj.minlengthExtension = true;\n                }\n\n            }\n        }\n\n        return obj;\n\n    },\n\n    password: function ( string ) {\n\n        const obj = {};\n\n        if( string.length < 8 ){ obj.minlength = true; }\n        if( !/\\d/.test(string) ){ obj.missingNumber = true; }\n        if( !/[a-z]/.test(string) ){ obj.missingLowercase = true; }\n        if( !/[A-Z]/.test(string) ){ obj.missingUppercase = true; }\n        if( /[^0-9a-zA-Z]/.test(string) ){ obj.invalidChars = true; }\n\n        return obj;\n\n    },\n\n    username: function ( string ) {\n\n        const obj = {};\n        const strLength = string.length;\n\n        if( strLength < 3 ){ obj.minlength = true; }\n        if( strLength > 24 ){ obj.maxlength = true; }\n        if( /[^\\w\\-\\.\\@]/.test(string) ){ obj.invalidChars = true; }\n        if( !/^[\\w]/.test(string) ){ obj.invalidStartChar = true; }\n\n        return obj;\n\n    },\n\n    vatNumber: function ( string ) {\n\n        const obj = {};\n        let strLength = string.length,\n            indexOfIT = string.indexOf('IT'),\n            checkLength = (indexOfIT === 0 ? 13 : 11);\n\n        if( indexOfIT < 1 ){\n            if( strLength < checkLength ){ obj.minlength = true; }\n            else { obj.maxlength = true; }\n        }\n\n        return obj;\n\n    }\n\n}","\nimport { checkFormEl, isNodeList, mergeObjects } from './helper.js';\n\nimport { callbackFns }                             from './listenerCallbacks.js';\nimport { formStartup }                             from './formStartup.js';\n\nexport function constructorFn( formEl, optionsObj = {} ){\n\n    let self = this,\n        argsL = arguments.length,\n        checkFormElem = checkFormEl(formEl);\n\n    if( argsL === 0 || (argsL > 0 && !formEl) ){\n        throw new Error('First argument \"formEl\" is missing or falsy!');\n    }\n    if( isNodeList(formEl) ){\n        throw new Error('First argument \"formEl\" must be a single DOM node or a form CSS selector, not a NodeList!');\n    }\n    if( !checkFormElem.result ){\n        throw new Error('First argument \"formEl\" is not a DOM node nor a form CSS selector!');\n    }\n\n    self.formEl = checkFormElem.element;\n    self.formEl.formjs = self;\n    self.options = mergeObjects({}, Form.prototype.options, optionsObj);\n    self.listenerCallbacks = {\n        charCount:          callbackFns.charCount,\n        dataTypeNumber:     callbackFns.dataTypeNumber,\n        keypressMaxlength:  callbackFns.keypressMaxlength,\n        pastePrevent:       callbackFns.pastePrevent.bind(self),\n        submit:             callbackFns.submit.bind(self),\n        validation:         callbackFns.validation.bind(self)\n    };\n    Object.freeze(self.listenerCallbacks);\n\n    formStartup.call( self );\n    \n}\n","\nimport { executeCallback, fieldsStringSelector, isFieldForChangeEvent } from './helper.js';\n\nexport const callbackFns = {\n\n    charCount: function( eventOrField ){\n\n        const fieldEl = eventOrField.target || eventOrField;\n\n        if( fieldEl.matches( '[data-char-count]' ) ){\n            try {\n                let charLengthEl = fieldEl.closest('[data-formjs-question]').querySelector('[data-char-length]');\n\n                if( charLengthEl !== null ){\n                    let usedChars = fieldEl.value.length;\n                    charLengthEl.textContent = usedChars;\n                }\n            } catch (error) {}\n        }\n\n    },\n\n    dataTypeNumber: function( event ){\n\n        const fieldEl = event.target;\n        \n        if( fieldEl.matches('[data-type=\"number\"]') ){\n            let fieldValue = fieldEl.value,\n                hasInvalidChars = /[^\\d.,+\\-]/.test(fieldValue);\n            \n            if( hasInvalidChars ){\n                event.stopImmediatePropagation();\n                let valueReplaced = fieldValue.replace(/[^\\d.,+\\-]/g, '');\n                fieldEl.value = valueReplaced;\n            }\n        }\n\n    },\n\n    keypressMaxlength: function( event ){\n\n        const fieldEl = event.target;\n        \n        if( fieldEl.matches( '[maxlength]' ) ){\n            const maxLength = fieldEl.maxLength * 1,\n                keyPressed = event.which || event.keyCode,\n                allowedKeys = [8, 37, 38, 39, 46];\n\n            if( fieldEl.value.length >= maxLength && allowedKeys.indexOf(keyPressed) === -1 ){\n                return false;\n            }\n        }\n\n    },\n\n    pastePrevent: function( event ){\n\n        const self = this,\n              fieldEl = event.target;\n        let fieldOptions = self.options.fieldOptions;\n\n        if( fieldEl.matches( fieldOptions.preventPasteFields ) ){     \n            event.preventDefault();\n            executeCallback.call( self, fieldOptions.onPastePrevented, fieldEl );\n        }\n\n    },\n\n    submit: function( event ){\n        this.submit( {}, event );\n    },\n\n    validation: function( event ){\n\n        const self = this,\n            eventName = event.type,\n            fieldEl = event.target;\n\n        if( fieldEl.matches( fieldsStringSelector ) ){\n            const isFieldForChangeEventBoolean = isFieldForChangeEvent(fieldEl),\n                isRadio = fieldEl.type === 'radio',\n                isReqFrom = fieldEl.matches('[data-required-from]'),\n                isReqMore = fieldEl.matches('[data-require-more]'),\n                isValidValue = fieldEl.value.trim().length > 0;\n\n            // HANDLE data-require-more FIELDS\n            if( isRadio && eventName === 'change' ){\n                let findReqMoreEl = (isReqMore ? fieldEl : self.formEl.querySelector('[name=\"'+ fieldEl.name +'\"][data-require-more]')),\n                    findReqFromEl = (findReqMoreEl !== null ? self.formEl.querySelector('[data-required-from=\"#'+ findReqMoreEl.id +'\"]') : null);\n\n                if( isReqMore ){\n\n                    if( findReqFromEl !== null ){\n                        if( fieldEl.required ){\n                            findReqFromEl.required = true;\n                        }\n                        if( self.options.fieldOptions.focusOnRelated ){\n                            findReqFromEl.focus();\n                        }\n                    }\n\n                } else if( findReqMoreEl !== null ){\n\n                    if( findReqFromEl !== null ){\n                        findReqFromEl.required = false;\n                        findReqFromEl.value = '';\n                    }\n\n                }\n            }\n\n            // HANDLE data-required-from FIELDS\n            if( isReqFrom ){\n                if( isValidValue ){\n\n                    let reqMoreEl = self.formEl.querySelector( fieldEl.getAttribute('data-required-from') );\n                    reqMoreEl.checked = true;\n\n                    if( reqMoreEl.required ){\n                        fieldEl.required = true;\n                    }\n                }\n            }\n            \n            if(\n                (isFieldForChangeEventBoolean && eventName === 'change') ||\n                (!isFieldForChangeEventBoolean && eventName !== 'change')\n            ){\n                \n                self.validateField( fieldEl );\n\n            }\n        }\n        \n    }\n\n};\n","\nexport function formStartup(){\n\n    const self = this,\n          formEl = self.formEl;\n\n    if( !formEl.matches('[novalidate]') ){ return null; }\n\n    let fieldOptions = self.options.fieldOptions,\n        formOptions = self.options.formOptions;\n\n    // INIT FORM UTILITIES - START\n    let charLengthElems = formEl.querySelectorAll('[data-char-length]');\n    if( charLengthElems.length > 0 ){\n        Array.from( charLengthElems ).forEach(function( element ){\n            try {\n                let containerEl = element.closest('[data-formjs-question]'),\n                    fieldEl = containerEl.querySelector('[data-char-count]');\n\n                if( fieldEl !== null && fieldEl.matches('[maxlength]') ){\n                    // PRINT RELATED MAX LENGTH IN HTML\n                    let maxlength = fieldEl.getAttribute('maxlength');\n                    containerEl.querySelector('[data-char-maxlength]').textContent = maxlength;\n                }\n\n                // PRINT CHAR COUNT IN HTML\n                self.listenerCallbacks.charCount.call( null, fieldEl );\n            } catch (error) {}\n        });\n    }\n\n    if( fieldOptions.maxFileSize > 0 ){\n        let maxFileSizeElems = formEl.querySelectorAll('[data-max-file-size]');\n        if( maxFileSizeElems.length > 0 ){\n            Array.from( maxFileSizeElems ).forEach(function( element ){\n                try {\n                    let fieldEl = element.closest('[data-formjs-question]').querySelector('[type=\"file\"]');\n\n                    if( fieldEl !== null ){\n                        // PRINT MAX FILE SIZE FOR INPUTS WITH type=\"file\"\n                        element.textContent = fieldOptions.maxFileSize;\n                    }\n                } catch (error) {}\n            });\n        }\n    }\n    // INIT FORM UTILITIES - END\n\n    // HANDLE FIELD VALIDATION\n    if( fieldOptions.handleValidation ){\n        \n        // VALIDATION WITH ATTRIBUTES LIKE HTML ONES ( ALSO FOR BUG FIXING, EG: maxlength IN ANDROID )\n        if( fieldOptions.strictHtmlValidation ){\n            \n            // maxlength\n            // BUGGY IN ANDROID BROWSERS\n            formEl.addEventListener('keypress', self.listenerCallbacks.keypressMaxlength, false);\n\n            // data-type=\"number\"\n            // SINCE VALIDATING type=\"number\" WITH NON NUMERIC CHARS WILL RETURN EMPTY STRING IN SOME BROWSERS ( EG: FIREFOX )\n            formEl.addEventListener('input', self.listenerCallbacks.dataTypeNumber, false);\n            \n        }\n        \n        if( fieldOptions.preventPasteFields && formEl.querySelectorAll( fieldOptions.preventPasteFields ).length ){\n            // INIT EVENT LISTENER FOR \"PASTE\" EVENT TO PREVENT IT ON SPECIFIED FIELDS\n            formEl.addEventListener('paste', self.listenerCallbacks.pastePrevent, false);\n        }\n\n        if( formEl.querySelectorAll('[data-char-count]').length > 0 ){\n            // INIT EVENT LISTENER FOR FIELDS WITH \"data-char-count\" ATTRIBUTE\n            formEl.addEventListener('input', self.listenerCallbacks.charCount, false);\n        }\n\n        // INIT EVENTS LISTENER ( AS IN fieldOptions )\n        fieldOptions.validateOnEvents.split(' ').forEach(function( eventName ){\n            let useCapturing = (eventName === 'blur' ? true : false);\n            formEl.addEventListener(eventName, self.listenerCallbacks.validation, useCapturing);\n        });\n\n    }\n    \n    // HANDLE FORM SUBMIT\n    if( formOptions.handleSubmit ){\n        // INIT FORM SUBMIT ( DEFAULT AND AJAX )\n        formEl.addEventListener('submit', self.listenerCallbacks.submit);\n\n        if( formOptions.ajaxSubmit ){\n            if( formEl.getAttribute('enctype') ){\n\n                // FOR XMLHttpRequest API\n                formOptions.ajaxOptions.contentType = formEl.getAttribute('enctype');\n\n                // FOR fetch API\n                formOptions.ajaxOptions.headers['Content-Type'] = formEl.getAttribute('enctype');\n                \n            }\n\n            if( formEl.getAttribute('method') ){\n                formOptions.ajaxOptions.method = formEl.getAttribute('method').toUpperCase();\n            }\n\n            if( formEl.getAttribute('action') ){\n                formOptions.ajaxOptions.url = formEl.getAttribute('action');\n            }\n        }\n    }\n\n}\n","\nexport function destroy(){\n\n    const self = this,\n          formEl = self.formEl,\n          validationListenerNames = self.options.fieldOptions.validateOnEvents;\n\n    if( formEl.querySelectorAll('[data-char-count]').length > 0 ){\n        formEl.removeEventListener('input', self.listenerCallbacks.charCount, false);\n    }\n\n    if( self.options.fieldOptions.strictHtmlValidation ){\n        formEl.removeEventListener('keypress', self.listenerCallbacks.keypressMaxlength, false);\n        formEl.removeEventListener('input', self.listenerCallbacks.dataTypeNumber, false);\n    }\n\n    if( self.options.fieldOptions.preventPasteFields ){\n        formEl.removeEventListener('paste', self.listenerCallbacks.pastePrevent, false);\n    }\n\n    if( self.options.formOptions.handleSubmit ){\n        formEl.removeEventListener('submit', self.listenerCallbacks.submit);\n    }\n\n    validationListenerNames.split(' ').forEach(function( eventName ){\n        let useCapturing = (eventName === 'blur' ? true : false);\n        formEl.removeEventListener(eventName, self.listenerCallbacks.validation, useCapturing);\n    });\n\n    delete self.formEl.formjs;\n    \n}\n","\nexport function getFormData( customFn = this.options.formOptions.getFormData ){\n\n    let formData = {},\n        self = this,\n        formEl = self.formEl,\n        formFieldsEl = formEl.querySelectorAll('input, select, textarea'),\n        excludeSelectors = ':not([type=\"reset\"]):not([type=\"submit\"]):not([type=\"button\"]):not([type=\"file\"]):not([data-exclude-data])',\n        filteredFields = Array.from(formFieldsEl).filter(elem => elem.matches(excludeSelectors) );\n    \n    if( typeof customFn === 'function' ){\n\n        formData = customFn.call( self, filteredFields );\n\n    } else {\n\n        filteredFields.forEach(function( fieldEl ){\n            let isCheckbox = fieldEl.type === 'checkbox',\n                isRadio = fieldEl.type === 'radio',\n                isSelect = fieldEl.matches('select'),\n                name = fieldEl.name,\n                value = fieldEl.value;\n                         \n            if( isCheckbox ) {\n                \n                value = fieldEl.checked;\n                let checkboxes = Array.from( formEl.querySelectorAll('[name=\"'+ name +'\"]') );\n                if( checkboxes.length > 1 ){\n\n                    value = [];\n                    let checkedElems = checkboxes.filter(field => field.checked);\n                    checkedElems.forEach(fieldEl => {\n                        value.push( fieldEl.value );\n                    });\n\n                }\n                    \n            } else if( isRadio ){\n                \n                let checkedRadio = formEl.querySelector('[name=\"'+ name +'\"]:checked');\n                value = (checkedRadio === null ? null : checkedRadio.value);\n                \n            } else if( isSelect ){\n\n                let selectedOpts = Array.from( fieldEl.options ).filter(option => option.selected);\n                if( selectedOpts.length > 1 ){\n\n                    value = [];\n                    selectedOpts.forEach(fieldEl => {\n                        value.push( fieldEl.value );\n                    });\n\n                }\n            }\n\n            formData[ name ] = value;\n        });\n\n    }\n    \n    return formData;\n    \n}\n","\nimport { fieldsStringSelector, isFieldForChangeEvent } from './helper.js';\n\nexport const init = function(){\n\n    const self = this,\n          formEl = self.formEl,\n          formFields = formEl.querySelectorAll( fieldsStringSelector );\n\n    let currentFieldName = '',\n        currentFieldType = '';\n\n    Array.from( formFields ).forEach(function( fieldEl ){\n        const   name = fieldEl.name,\n                type = fieldEl.type;\n        \n        // AVOID REPEATING VALIDATION IF THE FIELD HAS THE SAME NAME OF THE PREVIOUS ONE\n        if( (name === currentFieldName && type === currentFieldType) ){ return true; }\n\n        const isCheckboxOrRadio = (fieldEl.type === 'checkbox' || fieldEl.type === 'radio'),\n              isFieldForChangeEventBoolean = isFieldForChangeEvent(fieldEl),\n              fieldChecked = formEl.querySelector('[name=\"' + fieldEl.name + '\"]:checked'),\n              isReqFrom = fieldEl.matches('[data-required-from]'),\n              reqMoreEl = (isReqFrom ? formEl.querySelector(fieldEl.getAttribute('data-required-from')) : null);\n\n        if( !isReqFrom ){\n            currentFieldName = name;\n            currentFieldType = type;\n        }\n        \n        // VALIDATE FIELD ( BY TRIGGERING THE EVENT LISTENER ) IF IT ALREADY HAS A VALUE\n        if(\n            (!isCheckboxOrRadio && fieldEl.value) || \n            (isCheckboxOrRadio && fieldChecked !== null) ||\n            (isReqFrom && reqMoreEl.checked)\n        ){\n\n            let eventToTrigger = 'change';\n\n            if( isCheckboxOrRadio ){\n                fieldEl = fieldChecked;\n            } else if( !isFieldForChangeEventBoolean ) {\n                eventToTrigger = self.options.fieldOptions.validateOnEvents.split(' ').filter(function(evName){\n                    return evName !== 'change';\n                })[0] || 'input';\n            }\n\n            let newEvent = new Event(eventToTrigger, {'bubbles': (eventToTrigger !== 'blur'), 'cancelable': true});\n            fieldEl.dispatchEvent(newEvent);\n\n        }\n    });\n\n    self.isInitialized = true;\n\n    return self;\n\n}\n","\nimport { isDOMNode, mergeObjects, validateFieldObjDefault } from './helper.js';\nimport { isValid } from './isValid.js';\n\nexport function isValidField( fieldElem, fieldOptionsObj = {} ){\n\n    const self = this,\n          fieldEl = (typeof fieldElem === 'string' ? self.formEl.querySelector(fieldElem) : fieldElem);\n\n    let obj = mergeObjects({}, validateFieldObjDefault);\n\n    if( !isDOMNode(fieldEl) ){ return obj; }\n\n    let options =           mergeObjects( {}, self.options.fieldOptions, fieldOptionsObj ),\n        isValidValue =      fieldEl.value.trim().length > 0,\n        isRequired =        fieldEl.required,\n        isReqFrom =         fieldEl.matches('[data-required-from]'),\n        isValidateIfFilled =fieldEl.matches('[data-validate-if-filled]');\n    \n    if(\n        (!isRequired && !isValidateIfFilled && !isReqFrom) ||   // IT IS A NORMAL FORM FIELD\n        (isValidateIfFilled && !isValidValue) ||                // IT IS data-validate-if-filled AND EMPTY\n        (isReqFrom && !isRequired )                             // IT IS data-required-from AND NOT required\n    ){\n\n        obj.result = true;\n       \n    } else {\n        \n        obj =  isValid.call( self, fieldEl, options );\n        \n    }\n\n    obj.fieldEl = fieldEl;\n    \n    return obj;\n\n}\n","\nimport { mergeObjects, toCamelCase } from './helper.js';\nimport { validationRulesAttributes } from './validationRules.js';\n\nexport function isValid( fieldEl, fieldOptions = {} ){\n\n    const self = this,\n          fieldType = ( fieldEl.matches('[data-subtype]') ? toCamelCase( fieldEl.getAttribute('data-subtype') ) : fieldEl.type ),\n          fieldValue = fieldEl.value,\n          isValidValue = fieldValue.trim().length > 0,\n          // ALPHABETICAL REVERSE ORDER\n          fieldAttributes = Array.from(fieldEl.attributes).sort(function(a,b){ return a.name < b.name });\n\n    let attrValidations = [],\n        attrValidationsResult = isValidValue,\n        obj = { result: isValidValue };\n\n    if( !isValidValue ){\n        obj.errors = { empty: true };\n        obj.result = false;\n        return obj;\n    }\n\n    // COLLECT SPECIFIC VALIDATIONS FOR validationRulesAttributes\n    fieldAttributes.forEach(function(attr){\n        // FOR data-* ATTRIBUTES -> REMOVE \"data-\" AND TRANSFORM TO CAMELCASE\n        let attrName = toCamelCase( attr.name.replace('data-', '') ),\n            attrValue = attr.value,\n            isTypeValueWithFn = attrName === 'type' && typeof validationRulesAttributes[attrValue] === 'function',\n            isAttrNameWithFn = typeof validationRulesAttributes[attrName] === 'function';\n\n        if( isTypeValueWithFn || isAttrNameWithFn ){\n\n            let extraValObj = {\n                    attrName: (isTypeValueWithFn ? attrValue : attrName),\n                    attrValue: attrValue,\n                    fieldEl,\n                    fieldOptions\n                };\n\n            if( isTypeValueWithFn || attrName === 'requiredFrom' ){\n                // THESE VALIDATIONS MUST RUN BEFORE ALL OTHERS\n                attrValidations.unshift( extraValObj );\n            } else {\n                attrValidations.push( extraValObj );\n            }\n\n        }\n    });\n\n    // RUN SPECIFIC VALIDATIONS FOR validationRulesAttributes\n    attrValidations.forEach(function(item){\n        let extraVal = validationRulesAttributes[item.attrName]( item, fieldEl );\n        if( !extraVal.result ){\n            obj = mergeObjects({}, obj, extraVal);\n            attrValidationsResult = false;\n        }\n    });\n\n    // RUN VALIDATIONS FOR validationRules\n    if( typeof self.validationRules[fieldType] === 'function' ){\n        obj = mergeObjects( {}, obj, self.validationRules[fieldType].call(self, fieldValue, fieldEl) );\n        obj.result = obj.result && attrValidationsResult;\n        if( !obj.result ){\n            if( typeof obj.errors === 'undefined' ){\n                obj.errors = {};\n            }\n            obj.errors.rule = true;\n        }\n    }\n\n    return obj;\n\n}\n","\nimport { fieldsStringSelector, isDOMNode, mergeObjects, validateFormObjDefault } from './helper.js';\n\nexport function isValidForm( options = {} ){\n\n    const self = this,\n          formEl = self.formEl;\n\n    let obj = mergeObjects({}, validateFormObjDefault);\n\n    if( !isDOMNode(formEl) || !formEl.matches('[novalidate]') ){\n        obj.result = false;\n        return obj;\n    }\n    \n    let fieldOptions = mergeObjects( {}, self.options.fieldOptions, options.fieldOptions ),\n        currentFieldName = '',\n        currentFieldType = '';\n    \n    if( typeof fieldOptions.focusOnRelated === 'undefined' ){\n        fieldOptions.focusOnRelated = false;\n    }\n    \n    Array.from( formEl.querySelectorAll(fieldsStringSelector) ).forEach(function( fieldEl ){\n        let name = fieldEl.name,\n            type = fieldEl.type,\n            fieldData = {};\n        \n        if( (name === currentFieldName && type === currentFieldType) ){ return true; }\n        \n        if( !fieldEl.matches('[data-required-from]') ){\n            currentFieldName = name;\n            currentFieldType = type;\n        }\n        \n        fieldData = self.isValidField( fieldEl, fieldOptions );\n\n        if( !fieldData.result ){\n            obj.result = false;\n        }\n        \n        obj.fields.push( fieldData );\n    });\n    \n    return obj;\n\n}\n","\nimport { executeCallback, isPlainObject, mergeObjects } from './helper.js';\n\n//import { ajaxCall } from './ajaxCall.js';\nimport { ajaxCall } from './ajaxCallXhr.js';\n\nexport function submit( options = {}, event = null ){\n\n    const self = this,\n          formEl = self.formEl,\n          eventPreventDefault = ( enableBtn = true ) => {\n              if( btnEl && enableBtn ){ btnEl.disabled = false; }\n              if( event ){ event.preventDefault(); }\n          };\n    \n    options.fieldOptions = mergeObjects( {}, self.options.fieldOptions, options.fieldOptions );\n    options.formOptions = mergeObjects( {}, self.options.formOptions, options.formOptions );\n    \n    const handleValidation = options.fieldOptions.handleValidation,\n          formValidation = (handleValidation ? self.isValidForm( options ) : { result: true });\n\n    const btnEl = formEl.querySelector('[type=\"submit\"]'),\n          isAjaxForm = options.formOptions.ajaxSubmit;\n    \n    if( handleValidation ){\n        executeCallback.call( self, options.fieldOptions.onValidation, formValidation.fields );\n    }\n    \n    let formDataObj = (isAjaxForm ? self.getFormData() : null),\n        callbacksBeforeSend = [],\n        beforeSendOpt = options.formOptions.beforeSend;\n\n    if( typeof beforeSendOpt === 'function' || Array.isArray(beforeSendOpt) ){\n        let beforeSendData = {\n                stopExecution: false\n            },\n            stopCallbackLoop = false;\n\n        if( formDataObj ){\n            beforeSendData.formData = formDataObj;\n        }\n\n        if( typeof beforeSendOpt === 'function' ){\n            callbacksBeforeSend.push( beforeSendOpt );\n        } else if( Array.isArray(beforeSendOpt) ) {\n            callbacksBeforeSend = beforeSendOpt;\n        }\n\n        callbacksBeforeSend.forEach(function(cbFn){\n            if( !stopCallbackLoop ){\n                let beforeSendFn = cbFn.call( self, beforeSendData );\n                \n                if( isPlainObject(beforeSendFn) ){\n                    formDataObj = beforeSendFn.formData || formDataObj;\n                    if( beforeSendFn.stopExecution ){\n                        stopCallbackLoop = true;\n                    }\n                }\n            }\n        });\n\n        if( stopCallbackLoop ){\n            eventPreventDefault();\n            return false;\n        }\n    }\n\n    if( !formValidation.result || (btnEl && btnEl.disabled) ){\n        eventPreventDefault();\n        return false;\n    }\n\n    if( btnEl ){\n        btnEl.disabled = true;\n    }\n    \n    if( isAjaxForm ){\n\n        // AJAX FORM SUBMIT\n        eventPreventDefault(false);\n        ajaxCall.call(self, formDataObj);\n\n    } else if( !event ){\n\n        // TRIGGER SUBMIT EVENT\n        let submitEvent = new Event('submit', {'bubbles': true, 'cancelable': true});\n        formEl.dispatchEvent(submitEvent);\n\n    }\n    \n}\n","\nimport { executeCallback, mergeObjects, serializeObject } from './helper.js';\n\n// AJAX CALL USING XMLHttpRequest API\nexport function ajaxCall( formDataObj ){\n\n    let self = this,\n        formEl = self.formEl,\n        fieldOptions = self.options.fieldOptions,\n        formOptions = self.options.formOptions,\n        btnEl = formEl.querySelector('[type=\"submit\"]'),\n        timeoutTimer,\n        xhrOptions = mergeObjects( {}, formOptions.ajaxOptions ),\n        isMultipart = xhrOptions.contentType === 'multipart/form-data';\n\n    xhrOptions.data = formDataObj;\n    \n    if( isMultipart && fieldOptions.handleFileUpload ){\n        let formDataMultipart = new FormData();\n        \n        for(let key in xhrOptions.data){\n            formDataMultipart.append( key, xhrOptions.data[key] );\n        }\n        \n        Array.from( formEl.querySelectorAll('[type=\"file\"]') ).forEach(function( field ){\n            Array.from(field.files).forEach(function( file, idx ){\n                let name = field.name+'['+ idx +']';\n                formDataMultipart.append( name, file, file.name );\n            });\n        });\n        \n        xhrOptions.data = formDataMultipart;\n    }\n    \n    let XHR = new XMLHttpRequest(),\n        parseResponse = function( xhr ){\n            let data = xhr.responseText,\n                getJSON = function(){\n                    try{\n                        let obj = JSON.parse(data);\n                        return obj;\n                    } catch(e){\n                        return false;\n                    }\n                },\n                getXML_HTML = function(){\n                    try{\n                        let isXML = xhr.responseXML !== null,\n                            obj = (isXML ? new DOMParser().parseFromString(data, 'text/xml') : data);\n                        return obj;\n                    } catch(e){\n                        return false;\n                    }\n                };\n            \n            return (getJSON() || getXML_HTML() || data);\n        },\n        successFn = function(e) {\n            let xhr = e.target,\n                responseData = parseResponse(xhr);\n\n            let readyStateOK = xhr.readyState === 4,\n                statusOK = xhr.status === 200,\n                ajaxData = {\n                    dataOrXHR:      ( readyStateOK && statusOK ? responseData   : xhr           ),\n                    status:         ( readyStateOK && statusOK ? 'success'      : 'error'       ),\n                    XHRorResponse:  ( readyStateOK && statusOK ? xhr            : responseData  )\n                };\n            \n            if( timeoutTimer ){\n                window.clearTimeout( timeoutTimer );\n            }\n\n            btnEl.disabled = false;\n\n            executeCallback.call( self, formOptions.onSubmitComplete, ajaxData );\n        },\n        completeFn = function(e) {\n            let xhr = e.target;\n\n            if( xhr.status === 200 ){\n                let responseData = parseResponse(xhr),\n                    ajaxData = { data: responseData, status: 'success', response: xhr };\n\n                executeCallback.call( self, formOptions.onSubmitSuccess, ajaxData );\n            } else {\n                errorFn(e);\n            }\n        },\n        errorFn = function(e) {\n            let xhr = e.target,\n                ajaxData = { errorThrown: xhr.statusText, status: 'error', response: xhr };\n\n            executeCallback.call( self, formOptions.onSubmitError, ajaxData );\n        };\n    \n    XHR.addEventListener('loadend', successFn,  false);\n    XHR.addEventListener('load',    completeFn, false);\n    XHR.addEventListener('error',   errorFn,    false);\n    \n    if( xhrOptions.method === 'GET' ){\n        xhrOptions.url += ( /\\?/.test(xhrOptions.url) ? '&' : '?' ) + serializeObject( xhrOptions.data );\n        if( xhrOptions.cache === false ){\n            xhrOptions.url +=  (/\\&/.test(xhrOptions.url) ? '&' : '') + '_=' + (new Date().getTime());\n        }\n    }\n    \n    XHR.open(xhrOptions.method, xhrOptions.url, xhrOptions.async);\n\n    if ( xhrOptions.xhrFields ) {\n        for ( let i in xhrOptions.xhrFields ) {\n            XHR[ i ] = xhrOptions.xhrFields[ i ];\n        }\n    }\n\n    if ( xhrOptions.mimeType && XHR.overrideMimeType ) {\n        XHR.overrideMimeType( xhrOptions.mimeType );\n    }\n    \n    if( xhrOptions.data && xhrOptions.contentType !== 'multipart/form-data' ){\n        XHR.setRequestHeader('Content-Type', xhrOptions.contentType);\n    }\n    \n    for( let h in xhrOptions.headers ){\n        XHR.setRequestHeader( h, xhrOptions.headers[h] );\n    }\n\n    if( !isMultipart ){\n        xhrOptions.data = JSON.stringify(xhrOptions.data);\n    }\n    \n    XHR.send( (xhrOptions.method === 'GET' ? null : xhrOptions.data) );\n\n    if ( xhrOptions.async && xhrOptions.timeout > 0 ) {\n        timeoutTimer = window.setTimeout(function() {\n            XHR.abort();\n        }, xhrOptions.timeout);\n    }\n    \n}\n","\nimport { executeCallback, isDOMNode, mergeObjects, validateFieldObjDefault } from './helper.js';\n\nexport function validateField( fieldElem, fieldOptionsObj = {} ){\n\n    const self = this,\n          fieldEl = (typeof fieldElem === 'string' ? self.formEl.querySelector(fieldElem) : fieldElem);\n    let obj = mergeObjects({}, validateFieldObjDefault);\n\n    if( isDOMNode(fieldEl) ){\n\n        obj = self.isValidField( fieldEl, fieldOptionsObj );\n        let fieldOptions = mergeObjects({}, self.options.fieldOptions, fieldOptionsObj);\n        executeCallback.call( self, fieldOptions.onValidation, [obj] );\n        \n    }\n\n    return obj;\n    \n}\n","\nimport { executeCallback, mergeObjects } from './helper.js';\n\nexport function validateForm( optionsObj = {} ){\n\n    const self = this,\n          obj = self.isValidForm( optionsObj );\n    let options = mergeObjects({}, self.options, optionsObj);\n\n    executeCallback.call( self, options.fieldOptions.onValidation, obj.fields );\n\n    return obj;\n    \n}\n"],"sourceRoot":""}