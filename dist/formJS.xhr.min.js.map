{"version":3,"sources":["webpack:///webpack/bootstrap","webpack:///./src/modules/helper.js","webpack:///./src/modules/validationRules.js","webpack:///./src/index.js","webpack:///./src/modules/listenerCallbacks.js","webpack:///./src/modules/optionsUtils.js","webpack:///./src/modules/checkDirtyField.js","webpack:///./src/modules/options.js","webpack:///./src/modules/optionsAjaxXhr.js","webpack:///./src/modules/constructor.js","webpack:///./src/modules/formStartup.js","webpack:///./src/modules/destroy.js","webpack:///./src/modules/getFormData.js","webpack:///./src/modules/init.js","webpack:///./src/modules/isValidField.js","webpack:///./src/modules/isValid.js","webpack:///./src/modules/isValidForm.js","webpack:///./src/modules/submit.js","webpack:///./src/modules/ajaxCallXhr.js","webpack:///./src/modules/validateField.js","webpack:///./src/modules/validateForm.js"],"names":["installedModules","__webpack_require__","moduleId","exports","module","i","l","modules","call","m","c","d","name","getter","o","Object","defineProperty","enumerable","get","r","Symbol","toStringTag","value","t","mode","__esModule","ns","create","key","bind","n","default","object","property","prototype","hasOwnProperty","p","s","e","iterator","constructor","_isDOMNode","_fieldsStringSelector","_addClass","element","cssClasses","split","forEach","className","classList","add","_checkFormEl","formEl","isString","_typeof","isFormSelector","document","querySelector","tagName","toLowerCase","result","_executeCallback","callbackOption","callbackData","self","this","callbackFnList","push","Array","isArray","cbFn","_getSplitChar","string","splitChar","indexOf","node","Element","isPrototypeOf","_isFieldForChangeEvent","fieldEl","matches","_isNodeList","nodeList","NodeList","_isPlainObject","toString","_mergeObjects","out","arguments","length","obj","isObject","concat","slice","_removeClass","remove","_serialize","keys","reduce","a","k","encodeURIComponent","join","_toCamelCase","replace","all","letter","toUpperCase","_validateFieldObjDefault","_validateFormObjDefault","fields","_validationRulesAttributes","validationRules","_helper","cap","RegExp","test","errors","strLength","maxlength","minlength","invalidChars","color","date","dateDDMMYYYY","email","missingAtChar","splitAt_at","missingUserName","missingDomain","missingExtensionDot","missingExtension","extLength","minlengthExtension","fiscalCode","landlineNumber","mobileNumber","number","numberFloat","numberInteger","password","missingNumber","missingUppercase","tel","url","username","invalidStartChar","vatNumber","indexOfIT","checkbox","data","dataChecksEl","closest","checked","checks","attrValue","getAttribute","JSON","parse","checkedElLength","querySelectorAll","isMinOk","isMaxOk","minChecks","maxChecks","Error","equalTo","checkFromEl","exactLength","valueLength","file","MIMEtype","accept","from","files","exceedMaxFileSize","fieldOptions","maxFileSize","size","isAcceptedFileType","type","acceptedFileType","valueL","isMinlengthOk","isMaxlengthOk","max","isDate","maxVal","reverse","min","minVal","pattern","fieldPattern","radio","fieldChecked","trim","requiredFrom","isValidValue","reqMoreEl","required","_listenerCallbacks2","_optionsUtils","_options","_validationRules","_constructor2","_destroy2","_getFormData2","_init2","_isValidField2","_isValidForm2","_submit2","_validateField2","_validateForm2","_listenerCallbacks","WeakMap","Form","optionsObj","set","charCount","_callbackFns","dataTypeNumber","keypressMaxlength","pastePrevent","submit","validation","_constructor","destroy","customFn","getFormData","init","isValidField","isValidForm","event","fieldElem","validateField","validateForm","rulesObj","options","isInitialized","version","_setCallbackFunctionsInOptions","window","FormJS","eventOrField","target","charLengthEl","usedChars","textContent","error","fieldValue","stopImmediatePropagation","valueReplaced","maxLength","keyPressed","which","keyCode","preventPasteFields","preventDefault","onPastePrevented","eventName","isFieldForChangeEvent","isRadio","isReqFrom","isReqMore","findReqMoreEl","findReqFromEl","id","focusOnRelated","focus","_checkDirtyField2","_defaultCallbacksInOptions","onValidation","fieldsArray","hasTypedValue","containerEl","checkDirtyField","_checkDirtyField","skipUIfeedback","errorClasses","errorEmpty","errorRule","valid","extraErrorClass","isChecks","errorClassToRemove","callbacks","formOptions","_loop","opt","fnName","fnInOptions","fnList","unshift","dirty","_optionsAjaxXhr","handleFileUpload","handleValidation","strictHtmlValidation","validateOnEvents","ajaxOptions","ajaxSubmit","beforeSend","handleSubmit","onSubmitComplete","onSubmitError","onSubmitSuccess","async","cache","contentType","headers","X-Requested-With","method","timeout","location","href","argsL","checkFormEl","_formStartup","_formStartup2","charLengthElems","listenerCallbacks","maxFileSizeElems","addEventListener","useCapturing","validationListenerNames","removeEventListener","formData","formFieldsEl","filteredFields","filter","elem","isCheckbox","isSelect","checkboxes","field","checkedRadio","selectedOpts","option","selected","formFields","currentFieldName","currentFieldType","isCheckboxOrRadio","eventToTrigger","evName","newEvent","Event","bubbles","cancelable","dispatchEvent","fieldOptionsObj","isRequired","isValidateIfFilled","_isValid","_isValid2","fieldType","fieldAttributes","attributes","sort","b","attrValidations","attrValidationsResult","attr","attrName","isTypeValueWithFn","isAttrNameWithFn","extraValObj","item","extraVal","rule","empty","fieldData","eventPreventDefault","enableBtn","btnEl","disabled","formValidation","isAjaxForm","formDataObj","callbacksBeforeSend","beforeSendOpt","beforeSendData","stopExecution","stopCallbackLoop","beforeSendFn","_ajaxCall","submitEvent","_ajaxCallXhr","timeoutTimer","xhrOptions","isMultipart","formDataMultipart","FormData","append","idx","XHR","XMLHttpRequest","parseResponse","xhr","responseText","responseXML","isXML","DOMParser","parseFromString","errorFn","ajaxData","errorThrown","statusText","status","response","responseData","readyStateOK","readyState","statusOK","dataOrXHR","XHRorResponse","clearTimeout","Date","getTime","open","xhrFields","h","mimeType","overrideMimeType","setRequestHeader","stringify","send","setTimeout","abort"],"mappings":"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","file":"formJS.xhr.min.js","sourcesContent":[" \t// The module cache\n \tvar installedModules = {};\n\n \t// The require function\n \tfunction __webpack_require__(moduleId) {\n\n \t\t// Check if module is in cache\n \t\tif(installedModules[moduleId]) {\n \t\t\treturn installedModules[moduleId].exports;\n \t\t}\n \t\t// Create a new module (and put it into the cache)\n \t\tvar module = installedModules[moduleId] = {\n \t\t\ti: moduleId,\n \t\t\tl: false,\n \t\t\texports: {}\n \t\t};\n\n \t\t// Execute the module function\n \t\tmodules[moduleId].call(module.exports, module, module.exports, __webpack_require__);\n\n \t\t// Flag the module as loaded\n \t\tmodule.l = true;\n\n \t\t// Return the exports of the module\n \t\treturn module.exports;\n \t}\n\n\n \t// expose the modules object (__webpack_modules__)\n \t__webpack_require__.m = modules;\n\n \t// expose the module cache\n \t__webpack_require__.c = installedModules;\n\n \t// define getter function for harmony exports\n \t__webpack_require__.d = function(exports, name, getter) {\n \t\tif(!__webpack_require__.o(exports, name)) {\n \t\t\tObject.defineProperty(exports, name, { enumerable: true, get: getter });\n \t\t}\n \t};\n\n \t// define __esModule on exports\n \t__webpack_require__.r = function(exports) {\n \t\tif(typeof Symbol !== 'undefined' && Symbol.toStringTag) {\n \t\t\tObject.defineProperty(exports, Symbol.toStringTag, { value: 'Module' });\n \t\t}\n \t\tObject.defineProperty(exports, '__esModule', { value: true });\n \t};\n\n \t// create a fake namespace object\n \t// mode & 1: value is a module id, require it\n \t// mode & 2: merge all properties of value into the ns\n \t// mode & 4: return value when already ns object\n \t// mode & 8|1: behave like require\n \t__webpack_require__.t = function(value, mode) {\n \t\tif(mode & 1) value = __webpack_require__(value);\n \t\tif(mode & 8) return value;\n \t\tif((mode & 4) && typeof value === 'object' && value && value.__esModule) return value;\n \t\tvar ns = Object.create(null);\n \t\t__webpack_require__.r(ns);\n \t\tObject.defineProperty(ns, 'default', { enumerable: true, value: value });\n \t\tif(mode & 2 && typeof value != 'string') for(var key in value) __webpack_require__.d(ns, key, function(key) { return value[key]; }.bind(null, key));\n \t\treturn ns;\n \t};\n\n \t// getDefaultExport function for compatibility with non-harmony modules\n \t__webpack_require__.n = function(module) {\n \t\tvar getter = module && module.__esModule ?\n \t\t\tfunction getDefault() { return module['default']; } :\n \t\t\tfunction getModuleExports() { return module; };\n \t\t__webpack_require__.d(getter, 'a', getter);\n \t\treturn getter;\n \t};\n\n \t// Object.prototype.hasOwnProperty.call\n \t__webpack_require__.o = function(object, property) { return Object.prototype.hasOwnProperty.call(object, property); };\n\n \t// __webpack_public_path__\n \t__webpack_require__.p = \"\";\n\n\n \t// Load entry module and return exports\n \treturn __webpack_require__(__webpack_require__.s = 2);\n","\nexport const\n\n_fieldsStringSelector = 'input:not([type=\"reset\"]):not([type=\"submit\"]):not([type=button]):not([type=hidden]), select, textarea',\n\n_addClass = function( element, cssClasses ){\n    cssClasses.split(' ').forEach(function(className){\n        element.classList.add( className );\n    });\n},\n\n_checkFormEl = function( formEl ){\n    let isString = typeof formEl,\n        isValidNodeSelector = isString === 'string' && _isDOMNode(document.querySelector(formEl)),\n        isFormSelector = isValidNodeSelector && document.querySelector(formEl).tagName.toLowerCase() === 'form',\n        obj = {\n            result: _isDOMNode(formEl) || isFormSelector,\n            element: (isString === 'string' ? document.querySelector(formEl) : formEl)\n        };\n\n    return obj;\n},\n\n_executeCallback = function( callbackOption, callbackData ){\n    let self = this,\n        callbackFnList = [];\n\n    if( typeof callbackOption === 'function' ){\n        callbackFnList.push( callbackOption );\n    } else if( Array.isArray(callbackOption) ) {\n        callbackFnList = callbackOption;\n    }\n\n    callbackFnList.forEach(function(cbFn){\n        cbFn.call(self, callbackData );\n    });\n},\n\n_getSplitChar = function( string ){\n    let splitChar = '.';\n\n    if( string.indexOf(splitChar) === -1 ){\n        if( string.indexOf('-') >= 0 ){\n            splitChar = '-';\n        } else if( string.indexOf('/') >= 0 ){\n            splitChar = '/';\n        }\n    }\n\n    return splitChar;\n},\n\n_isDOMNode = function( node ){\n    return Element.prototype.isPrototypeOf( node );\n},\n\n_isFieldForChangeEvent = function ( fieldEl ) {\n    return fieldEl.matches('select, [type=\"radio\"], [type=\"checkbox\"], [type=\"file\"]');\n},\n\n_isNodeList = function( nodeList ){\n    return NodeList.prototype.isPrototypeOf( nodeList );\n},\n\n_isPlainObject = function( object ){\n    return Object.prototype.toString.call( object ) === '[object Object]';\n},\n\n_mergeObjects = function( out = {} ){\n    for(let i=1; i<arguments.length; i++){\n        let obj = arguments[i];\n\n        if(!obj){ continue; }\n\n        for(let key in obj){\n            let isArray = Object.prototype.toString.call(obj[key]) === \"[object Array]\";\n            let isObject = Object.prototype.toString.call(obj[key]) === \"[object Object]\";\n\n            // COPY ONLY ENUMERABLE PROPERTIES\n            if( obj.hasOwnProperty(key) ){\n                if( isArray ){\n\n                    if( typeof out[key] === 'undefined' || out[key] === null ){\n                        out[key] = [];\n                    }\n                    out[key] = out[key].concat( obj[key].slice(0) );\n\n                } else if( isObject ){\n\n                    out[key] = _mergeObjects(out[key], obj[key]);\n\n                } else {\n\n                    // STRING | NUMBER | BOOLEAN | FUNCTION\n                    if( Array.isArray(out[key]) ){\n                        out[key].push(obj[key]);\n                    } else {\n                        out[key] = obj[key];\n                    }\n\n                }\n            }\n        }\n    }\n\n    return out;\n},\n\n_removeClass = function( element, cssClasses ){\n    cssClasses.split(' ').forEach(function(className){\n        element.classList.remove( className );\n    });\n},\n\n_serialize = function( obj ){\n    var objToString = (\n            (obj && typeof obj === 'object' && obj.constructor === Object) ? \n            Object.keys(obj)\n                .reduce(function(a,k){\n                    a.push(k+'='+encodeURIComponent(obj[k]));\n                    return a\n                },[]).join('&') : \n            obj\n    );\n    return objToString;\n},\n\n_toCamelCase = function( string ){\n    return string.replace(/-([a-z])/ig, function(all, letter){ return letter.toUpperCase(); });\n},\n\n_validateFieldObjDefault = { result: false, fieldEl: null },\n\n_validateFormObjDefault = { result: true, fields: [] }\n","\nimport { _getSplitChar } from './helper.js';\n\nexport const validationRules = {\n            \n    cap: function( string ){\n        // VALID ITALIAN CAP WITH 5 DIGITS\n        const\n            regex = new RegExp(/^[0-9]{5}$/),\n            obj = {\n                result: regex.test( string )\n            };\n\n        if( !obj.result ){\n\n            obj.errors = {};\n            const strLength = string.length;\n            if( strLength > 5 ){ obj.errors.maxlength = true; }\n            if( strLength > 0 && strLength < 5 ){ obj.errors.minlength = true; }\n            if( /[^0-9]/.test(string) ){ obj.errors.invalidChars = true; }\n        }\n\n        return obj;\n    },\n\n    color: function( string ){\n        // HEX COLOR WITH/WITHOUT #\n        // CAN BE 3 OR 6 CHARACTERS ( fff | FFF | ffffff | FFFFFF )\n        let obj = {\n            result: /^#?([a-fA-F0-9]{6}|[a-fA-F0-9]{3})$/.test( string )\n        };\n\n        return obj;\n    },\n    \n    date: function( string ){\n        // DATE AS ISO 8601 DATE FORMAT     YYYY MM DD | YYYY/MM/DD | YYYY.MM.DD | YYYY-MM-DD\n\n        let date = /^(((19|[2-9]\\d)\\d{2})[ \\/\\-.](0[13578]|1[02])[ \\/\\-.](0[1-9]|[12]\\d|3[01]))|(((19|[2-9]\\d)\\d{2})[ \\/\\-.](0[13456789]|1[012])[ \\/\\-.](0[1-9]|[12]\\d|30))|(((19|[2-9]\\d)\\d{2})[ \\/\\-.]02[ \\/\\-.](0[1-9]|1\\d|2[0-8]))|(((1[6-9]|[2-9]\\d)(0[48]|[2468][048]|[13579][26])|((16|[2468][048]|[3579][26])00))[ \\/\\-.]02[ \\/\\-.]29)$/g.test( string ),\n            obj = {\n                result: date\n            };\n\n        return obj;\n    },\n\n    dateDDMMYYYY: function( string ){\n        // DATE AS ITALIAN SYNTAX       DD MM YYYY | DD/MM/YYYY | DD.MM.YYYY | DD-MM-YYYY\n\n        let date = /^(((0[1-9]|[12]\\d|3[01])[ \\/\\-.](0[13578]|1[02])[ \\/\\-.]((19|[2-9]\\d)\\d{2}))|((0[1-9]|[12]\\d|30)[ \\/\\-.](0[13456789]|1[012])[ \\/\\-.]((19|[2-9]\\d)\\d{2}))|((0[1-9]|1\\d|2[0-8])[ \\/\\-.]02[ \\/\\-.]((19|[2-9]\\d)\\d{2}))|(29[ \\/\\-.]02[ \\/\\-.]((1[6-9]|[2-9]\\d)(0[48]|[2468][048]|[13579][26])|((16|[2468][048]|[3579][26])00))))$/g.test( string ),\n            obj = {\n                result: date\n            };\n\n        return obj;\n    },\n    \n    email: function( string ){\n        // FROM https://emailregex.com\n        // AS FOR RFC 5322 Official Standard EMAIL MUST BE AT LEAST:\n        // a@a.aa\n        const obj = {\n            result: /^(([^<>()\\[\\]\\\\.,;:\\s@\"]+(\\.[^<>()\\[\\]\\\\.,;:\\s@\"]+)*)|(\".+\"))@((\\[[0-9]{1,3}\\.[0-9]{1,3}\\.[0-9]{1,3}\\.[0-9]{1,3}])|(([a-zA-Z\\-0-9]+\\.)+[a-zA-Z]{2,}))$/.test( string )\n        };\n\n        if( !obj.result ){\n\n            obj.errors = {};\n            if( string.indexOf('@') === -1 ){\n\n                // @ IS MISSING\n                obj.errors.missingAtChar = true;\n\n            } else {\n\n                let splitAt_at = string.split('@');\n                if( splitAt_at[0].length === 0 ){\n\n                    // USER NAME IS MISSING\n                    obj.errors.missingUserName = true;\n\n                }\n\n                if( splitAt_at[1].length === 0 ){\n\n                    // IS EMPTY AFTER @\n                    obj.errors.missingDomain = true;\n                    obj.errors.missingExtensionDot = true;\n                    obj.errors.missingExtension = true;\n\n                } else if( splitAt_at[1].indexOf('.') === -1 ) {\n\n                    // DOT IS MISSING\n                    obj.errors.missingExtensionDot = true;\n                    obj.errors.missingExtension = true;\n\n                } else {\n\n                    // EXTENSION MISSING OR NOT LONG ENOUGH\n                    let splitAt_dot = splitAt_at[1].split('.'),\n                        extLength = splitAt_dot[1].length;\n                    if( extLength === 0 ) {\n                        obj.errors.missingExtension = true;\n                    } else if( extLength < 2 ){\n                        obj.errors.minlengthExtension = true;\n                    }\n\n                }\n            }\n\n        }\n\n        return obj;\n    },\n    \n    fiscalCode: function( string ){\n        // http://blog.marketto.it/2016/01/regex-validazione-codice-fiscale-con-omocodia/\n        let obj = {\n                result: /^(?:[B-DF-HJ-NP-TV-Z](?:[AEIOU]{2}|[AEIOU]X)|[AEIOU]{2}X|[B-DF-HJ-NP-TV-Z]{2}[A-Z]){2}[\\dLMNP-V]{2}(?:[A-EHLMPR-T](?:[04LQ][1-9MNP-V]|[1256LMRS][\\dLMNP-V])|[DHPS][37PT][0L]|[ACELMRT][37PT][01LM])(?:[A-MZ][1-9MNP-V][\\dLMNP-V]{2}|[A-M][0L](?:[\\dLMNP-V][1-9MNP-V]|[1-9MNP-V][0L]))[A-Z]$/i.test( string )\n            };\n        \n        return obj;\n    },\n    \n    landlineNumber: function( string ){\n        // LANDLINE PREFIX:\n        // +39 | 0039 | not-set ( ALSO WITH INTERNATIONAL PREFIXES WITH 2 DIGITS )\n        // LANDLINE NUMBER MUST START WITH 0 ( AS FOR ITALIAN ONES ):\n        // 1234567890 | 12 34567890 | 123456789 | 1234 56789 ( ALSO WITH . - / AS SEPARATOR )\n        let obj = {\n            result: /^((00|\\+)\\d{2}[\\-\\. ]??)??(((0[\\d]{1,4}))([\\/\\-\\. ]){0,1}([\\d, ]{5,10}))$/.test( string )\n        };\n\n        return obj; \n    },\n    \n    mobileNumber: function( string ){\n        // +39 | 0039 | 39 | not-set ( ALSO WITH ALL INTERNATIONAL PREFIXES WITH 2 DIGITS )\n        // MOBILE NUMBER MUST START WITH 3\n        // 3234567890 | 323 4567890 | 323 45 67 890 ( ALSO WITH . OR - AS SEPARATOR )\n        let obj = {\n            result: /^((00|\\+)??\\d{2}[\\-\\. ]??)??3\\d{2}[\\-\\. ]??(\\d{6,7}|\\d{2}[\\-\\. ]??\\d{2}[\\-\\. ]??\\d{3})$/.test( string )\n        };\n\n        return obj;\n    },\n    \n    number: function( string ){\n        // ALL NUMBERS ( INTEGERS AND FLOATING )\n        // VALID NUMBERS: 123 | 123.456 | .123\n        let obj = {\n            result: /[+-]?([0-9]*[.])?[0-9]+/.test( string )\n        };\n\n        return obj;\n    },\n    \n    numberFloat: function( string ){\n        // ONLY FLOATING NUMBERS\n        // VALID NUMBERS: 123.456 | .123\n        let obj = {\n            result: /[+-]?([0-9]*[.])[0-9]+/.test( string )\n        };\n\n        return obj;\n    },\n    \n    numberInteger: function( string ){\n        // ONLY INTEGER NUMBERS\n        let obj = {\n            result: /^\\d+$/.test( string )\n        };\n\n        return obj;\n    },\n    \n    password: function( string ){\n        // PASSWORD ( NO SPECIAL CHARACTERS ) WITH AT LEAST:\n        // ONE DIGIT + ONE LOWERCASE + ONE UPPERCASE + MIN LENGTH OF 8 CHARACTERS\n        let obj = {\n            result: /^(?=.*[0-9])(?=.*[a-z])(?=.*[A-Z])[0-9a-zA-Z]{8,}$/.test(string)\n        };\n\n        if( !obj.result ){\n\n            obj.errors = {};\n            let strLength = string.length;\n            if( strLength < 8 ){ obj.errors.minlength = true; }\n            if( !/\\d/.test(string) ){ obj.errors.missingNumber = true; }\n            if( !/[A-Z]/.test(string) ){ obj.errors.missingUppercase = true; }\n            if( /[^0-9a-zA-Z]/.test(string) ){ obj.errors.invalidChars = true; }\n\n        }\n\n        return obj;\n    },\n\n    tel: function( string ){\n        // CHECK IF ONE OF landlineNumber OR mobileNumber IS VALID\n        let obj = {\n            result: this.landlineNumber(string).result || this.mobileNumber(string).result\n        };\n\n        return obj;\n    },\n    \n    url: function( string ){\n        // MUST NOT CONTAIN PARAMETERS:\n        // www.mysite.com/index.html         --> VALID URL\n        // www.mysite.com/index.html?v=hello --> INVALID URL\n        let obj = {\n            result: /^((https?|ftp|file):\\/\\/)?([\\da-z\\.-]+)\\.([a-z\\.]{2,6})([\\/\\w \\.-]*)*\\/?$/.test( string )\n        };\n\n        return obj;\n    },\n    \n    username: function( string ){\n        // USERNAME WITH LETTERS/NUMBERS/UNDERSCORE AND . - @ WITH MIN LENGTH 3 AND MAX LENGTH 24\n        //return /^[\\w\\.\\-\\@]{3,24}$/.test( string );\n        \n        // USERNAME MUST START WITH A LETTER/NUMBER/UNDERSCORE AND CAN ALSO CONTAIN . - @ WITH MIN LENGTH 3 AND MAX LENGTH 24\n        let obj = {\n            result: /^(?=\\w)(?=[\\-\\.\\@]?)[\\w\\-\\.\\@]{3,24}$/.test( string )\n        };\n\n        if( !obj.result ){\n\n            obj.errors = {};\n            let strLength = string.length;\n            if( strLength < 3 ){ obj.errors.minlength = true; }\n            if( strLength > 24 ){ obj.errors.maxlength = true; }\n            if( /[^\\w\\-\\.\\@]/.test(string) ){ obj.errors.invalidChars = true; }\n            if( !/^[\\w]/.test(string) ){ obj.errors.invalidStartChar = true; }\n\n        }\n\n        return obj;\n    },\n    \n    vatNumber: function( string ){\n        // VAT NUMBER CAN CONTAIN OR NOT THE 'IT' STRING AND THEN 11 NUMBERS\n        let obj = {\n            result: /^(IT){0,1}[0-9]{11}$/i.test( string )\n        };\n\n        if( !obj.result ){\n            obj.errors = {};\n            var strLength = string.length,\n                indexOfIT = string.indexOf('IT'),\n                checkLength = (indexOfIT === 0 ? 13 : 11);\n            if( indexOfIT < 1 ){\n                if( strLength < checkLength ){ obj.errors.minlength = true; }\n                else { obj.errors.maxlength = true; }\n            }\n        }\n\n        return obj;\n    }\n    \n}\n\nexport const _validationRulesAttributes = {\n\n    checkbox: function( data ){\n        let formEl = data.fieldEl.closest('form'),\n            dataChecksEl = formEl.querySelector('[name=\"' + data.fieldEl.name + '\"][data-checks]'),\n            obj = { result: data.fieldEl.checked };\n\n        if( dataChecksEl !== null ){\n            obj = this.checks({ attrValue: dataChecksEl.getAttribute('data-checks'), fieldEl: dataChecksEl});\n        }\n\n        return obj;\n    },\n\n    checks: function( data ){\n        try{\n            let attrValue = JSON.parse(data.attrValue),\n                fieldEl = data.fieldEl,\n                formEl = fieldEl.closest('form'),\n                checkedElLength = formEl.querySelectorAll('[name=\"' + fieldEl.name + '\"]:checked').length,\n                isMinOk = checkedElLength >= attrValue[0],\n                isMaxOk = checkedElLength <= attrValue[1],\n                obj = {\n                    result: isMinOk && isMaxOk\n                };\n\n            if( !obj.result ){\n\n                obj.errors = { checks: true };\n                if( !isMinOk ){ obj.errors.minChecks = true; }\n                if( !isMaxOk ){ obj.errors.maxChecks = true; }\n\n            }\n\n            return obj;\n        } catch(e){\n            throw new Error('\"data-checks\" attribute is not a valid array!');\n        }\n    },\n\n    equalTo: function( data ){\n        let fieldEl = data.fieldEl,\n            formEl = fieldEl.closest('form'),\n            checkFromEl = formEl.querySelector( '[name=\"' + fieldEl.getAttribute('data-equal-to') + '\"]' ),\n            obj = {\n                result: fieldEl.value === checkFromEl.value\n            };\n\n        if( !obj.result ){\n            \n            obj.errors = { equalTo: true };\n        }\n\n        return obj;\n    },\n    \n    exactLength: function( data ){\n        let valueLength = data.fieldEl.value.length,\n            exactLength = (data.attrValue * 1),\n            obj = {\n                result: valueLength === exactLength\n            };\n\n        if( !obj.result ){\n\n            obj.errors = { exactLength: true };\n            if( valueLength < exactLength ){ obj.errors.minlength = true; }\n            else { obj.errors.maxlength = true; }\n\n        }\n\n        return obj;\n    },\n\n    file: function( data ){\n        let fieldEl = data.fieldEl,\n            MIMEtype = (fieldEl.accept ? new RegExp(fieldEl.accept.replace( '*', '[^\\\\/,]+' )) : null),\n            filesList = Array.from(fieldEl.files),\n            obj = { result: true };\n\n        filesList.forEach(function( file ){\n            let exceedMaxFileSize = data.fieldOptions.maxFileSize > 0 && (file.size/1024/1024) > data.fieldOptions.maxFileSize,\n                isAcceptedFileType = (MIMEtype !== null ? MIMEtype.test(file.type) : true);\n\n            if( exceedMaxFileSize || !isAcceptedFileType ){\n                obj.result = false;\n                if( typeof obj.errors === 'undefined' ){\n                    obj.errors = {};\n                }\n                if( exceedMaxFileSize ){ obj.errors.maxFileSize = true; }\n                if( !isAcceptedFileType ){ obj.errors.acceptedFileType = true; }\n\n            }\n        });\n\n        return obj;\n    },\n\n    length: function( data ){\n        try{\n            let valueL = data.fieldEl.value.length,\n                attrValue = JSON.parse(data.attrValue),\n                isMinlengthOk = valueL >= attrValue[0],\n                isMaxlengthOk = valueL <= attrValue[1],\n                obj = { result: isMinlengthOk && isMaxlengthOk };\n\n            if( !obj.result ){\n\n                obj.errors = { length: true };\n                if( !isMinlengthOk ){ obj.errors.minlength = true; }\n                if( !isMaxlengthOk ){ obj.errors.maxlength = true; }\n\n            }\n\n            return obj;\n        } catch(e){\n            throw new Error('\"data-length\" attribute is not a valid array!');\n        }\n    },\n    \n    max: function( data ){\n        let fieldEl = data.fieldEl,\n            isDate = (fieldEl.matches('[type=\"date\"]') || fieldEl.matches('[data-subtype=\"date\"]') || fieldEl.matches('[data-subtype=\"dateDDMMYYYY\"]')),\n            value = data.fieldEl.value,\n            maxVal = data.attrValue;\n        \n        if( isDate ){\n\n            let splitChar = _getSplitChar( value );\n\n            if( value.indexOf(splitChar) === 2 ){\n                // DD MM YYYY\n                value = value.split( splitChar ).reverse();\n            } else {\n                // YYYY MM DD\n                value = value.split( splitChar );\n            }\n\n            value = value.join('');\n            maxVal = maxVal.split('-').join('');\n\n        }\n\n        value = value * 1;\n        maxVal = maxVal * 1;\n\n        let obj = {\n                result: value <= maxVal\n            };\n\n        if( !obj.result ){\n            \n            obj.errors = { max: true };\n        }\n        \n        return obj;\n    },\n    \n    maxlength: function( data ){\n        const obj = {\n            result: data.fieldEl.value.length <= (data.attrValue * 1)\n        };\n\n        if( !obj.result ){\n\n            obj.errors = { maxlength: true };\n        }\n\n        return obj;\n    },\n    \n    min: function( data ){\n        let fieldEl = data.fieldEl,\n            isDate = (fieldEl.matches('[type=\"date\"]') || fieldEl.matches('[data-subtype=\"date\"]') || fieldEl.matches('[data-subtype=\"dateDDMMYYYY\"]')),\n            value = data.fieldEl.value,\n            minVal = data.attrValue;\n        \n        if( isDate ){\n\n            let splitChar = _getSplitChar( value );\n\n            if( value.indexOf(splitChar) === 2 ){\n                // DD MM YYYY\n                value = value.split( splitChar ).reverse();\n            } else {\n                // YYYY MM DD\n                value = value.split( splitChar );\n            }\n\n            value = value.join('');\n            minVal = minVal.split('-').join('');\n\n        }\n\n        value = value * 1;\n        minVal = minVal * 1;\n\n        let obj = {\n                result: value >= minVal\n            };\n\n        if( !obj.result ){\n            \n            obj.errors = { min: true };\n        }\n        \n        return obj;\n    },\n\n    minlength: function( data ){\n        const obj = {\n            result: data.fieldEl.value.length >= (data.attrValue * 1)\n        };\n\n        if( !obj.result ){\n\n            obj.errors = { minlength: true };\n        }\n\n        return obj;\n    },\n\n    pattern: function( data ){\n        let fieldEl = data.fieldEl,\n            fieldPattern = fieldEl.pattern,\n            fieldRegex = new RegExp( fieldPattern ),\n            obj = {\n                result: fieldRegex.test( fieldEl.value )\n            };\n\n        if( !obj.result ){\n\n            obj.errors = { pattern: true };\n        }\n\n        return obj;\n    },\n\n    radio: function( data ){\n        let fieldEl = data.fieldEl,\n            fieldChecked = fieldEl.closest('form').querySelector( '[name=\"'+ fieldEl.name +'\"]:checked' ),\n            isValid = fieldChecked !== null && fieldChecked.value.trim().length > 0,\n            obj = { result: isValid };\n\n        return obj;\n    },\n\n    requiredFrom: function( data ){\n        let fieldEl = data.fieldEl,\n            formEl = fieldEl.closest('form'),\n            isValidValue = fieldEl.value.trim().length > 0,\n            reqMoreEl = formEl.querySelector( fieldEl.getAttribute('data-required-from') ),\n            checkedEl = formEl.querySelector( '[name=\"'+ reqMoreEl.name +'\"]:checked' ),\n            obj = { result: checkedEl !== null };\n\n        if( reqMoreEl.checked && reqMoreEl.required ){\n            obj.result = isValidValue;\n        }\n\n        if( !obj.result ){\n            obj.errors = { requiredFrom: true };\n        }\n        \n        return obj;\n    }\n    \n}\n","\n/**! formJS v3.0.0 | Valerio Di Punzio (@SimplySayHi) | https://valeriodipunzio.com/plugins/formJS/ | https://github.com/SimplySayHi/formJS | MIT license */\n\nimport { _mergeObjects }        from './modules/helper.js';\nimport { _callbackFns }         from './modules/listenerCallbacks.js';\nimport { _setCallbackFunctionsInOptions } from './modules/optionsUtils.js';\n\nimport { options }              from './modules/options.js';\nimport { validationRules }      from './modules/validationRules.js';\n\n// CONSTRUCTOR FUNCTION & PUBLIC METHODS\nimport { _constructor }         from './modules/constructor.js';\nimport { destroy }              from './modules/destroy.js';\nimport { getFormData }          from './modules/getFormData.js';\nimport { init }                 from './modules/init.js';\nimport { isValidField }         from './modules/isValidField.js';\nimport { isValidForm }          from './modules/isValidForm.js';\nimport { submit }               from './modules/submit.js';\nimport { validateField }        from './modules/validateField.js';\nimport { validateForm }         from './modules/validateForm.js';\n\nconst version = '3.0.0';\nconst _listenerCallbacks = new WeakMap();\n\nclass Form {\n\n    constructor( formEl, optionsObj ){\n        const self = this;\n\n        _listenerCallbacks.set(self, {\n            charCount:          _callbackFns.charCount,\n            dataTypeNumber:     _callbackFns.dataTypeNumber,\n            keypressMaxlength:  _callbackFns.keypressMaxlength,\n            pastePrevent:       _callbackFns.pastePrevent.bind(self),\n            submit:             _callbackFns.submit.bind(self),\n            validation:         _callbackFns.validation.bind(self)\n        });\n        \n        _constructor.call( self, formEl, optionsObj );\n    }\n\n    get listenerCallbacks(){\n        return _listenerCallbacks.get(this);\n    }\n\n    destroy(){\n        destroy.call(this);\n    }\n    \n    getFormData( customFn ){\n        return getFormData.call(this, customFn);\n    }\n\n    init(){\n        return init.call(this);\n    }\n    \n    isValidField( fieldEl, fieldOptions ){\n        return isValidField.call(this, fieldEl, fieldOptions);\n    }\n    \n    isValidForm( optionsObj ){\n        return isValidForm.call(this, optionsObj);\n    }\n\n    submit( optionsObj, event ){\n        submit.call(this, optionsObj, event);\n    }\n\n    validateField( fieldElem, fieldOptions ){\n        return validateField.call(this, fieldElem, fieldOptions);\n    }\n\n    validateForm( optionsObj ){\n        return validateForm.call(this, optionsObj);\n    }\n    \n    static addValidationRules( rulesObj ){\n        this.prototype.validationRules = _mergeObjects({}, this.prototype.validationRules, rulesObj);\n    }\n    \n    static setOptions( optionsObj ){\n        this.prototype.options = _mergeObjects({}, this.prototype.options, optionsObj);\n    }\n\n}\n\nForm.prototype.isInitialized = false;\nForm.prototype.options = options;\nForm.prototype.validationRules = validationRules;\nForm.prototype.version = version;\n\n_setCallbackFunctionsInOptions.call(Form.prototype);\n\nif( !window.Form ){ window.Form = Form; }\nif( !window.FormJS ) { window.FormJS = Form; }\n","\nimport { _executeCallback, _fieldsStringSelector, _isFieldForChangeEvent } from './helper.js';\n\nexport const _callbackFns = {\n\n    charCount: function( eventOrField ){\n\n        const fieldEl = eventOrField.target || eventOrField;\n\n        if( fieldEl.matches( '[data-char-count]' ) ){\n            try {\n                let charLengthEl = fieldEl.closest('[data-formjs-question]').querySelector('[data-char-length]');\n\n                if( charLengthEl !== null ){\n                    let usedChars = fieldEl.value.length;\n                    charLengthEl.textContent = usedChars;\n                }\n            } catch (error) {}\n        }\n\n    },\n\n    dataTypeNumber: function( event ){\n\n        const fieldEl = event.target;\n        \n        if( fieldEl.matches('[data-type=\"number\"]') ){\n            let fieldValue = fieldEl.value,\n                hasInvalidChars = /[^\\d.,+\\-]/.test(fieldValue);\n            \n            if( hasInvalidChars ){\n                event.stopImmediatePropagation();\n                let valueReplaced = fieldValue.replace(/[^\\d.,+\\-]/g, '');\n                fieldEl.value = valueReplaced;\n            }\n        }\n\n    },\n\n    keypressMaxlength: function( event ){\n\n        const fieldEl = event.target;\n        \n        if( fieldEl.matches( '[maxlength]' ) ){\n            const maxLength = fieldEl.maxLength * 1,\n                keyPressed = event.which || event.keyCode,\n                allowedKeys = [8, 37, 38, 39, 46];\n\n            if( fieldEl.value.length >= maxLength && allowedKeys.indexOf(keyPressed) === -1 ){\n                return false;\n            }\n        }\n\n    },\n\n    pastePrevent: function( event ){\n\n        const self = this,\n              fieldEl = event.target;\n        let fieldOptions = self.options.fieldOptions;\n\n        if( fieldEl.matches( fieldOptions.preventPasteFields ) ){     \n            event.preventDefault();\n            _executeCallback.call( self, fieldOptions.onPastePrevented, fieldEl );\n        }\n\n    },\n\n    submit: function( event ){\n        this.submit( {}, event );\n    },\n\n    validation: function( event ){\n\n        const self = this,\n            eventName = event.type,\n            fieldEl = event.target;\n\n        if( fieldEl.matches( _fieldsStringSelector ) ){\n            const isFieldForChangeEvent = _isFieldForChangeEvent(fieldEl),\n                isRadio = fieldEl.type === 'radio',\n                isReqFrom = fieldEl.matches('[data-required-from]'),\n                isReqMore = fieldEl.matches('[data-require-more]'),\n                isValidValue = fieldEl.value.trim().length > 0;\n\n            // HANDLE data-require-more FIELDS\n            if( isRadio && eventName === 'change' ){\n                let findReqMoreEl = (isReqMore ? fieldEl : self.formEl.querySelector('[name=\"'+ fieldEl.name +'\"][data-require-more]')),\n                    findReqFromEl = (findReqMoreEl !== null ? self.formEl.querySelector('[data-required-from=\"#'+ findReqMoreEl.id +'\"]') : null);\n\n                if( isReqMore ){\n\n                    if( findReqFromEl !== null ){\n                        if( fieldEl.required ){\n                            findReqFromEl.required = true;\n                        }\n                        if( self.options.fieldOptions.focusOnRelated ){\n                            findReqFromEl.focus();\n                        }\n                    }\n\n                } else if( findReqMoreEl !== null ){\n\n                    if( findReqFromEl !== null ){\n                        findReqFromEl.required = false;\n                        findReqFromEl.value = '';\n                    }\n\n                }\n            }\n\n            // HANDLE data-required-from FIELDS\n            if( isReqFrom ){\n                if( isValidValue ){\n\n                    let reqMoreEl = self.formEl.querySelector( fieldEl.getAttribute('data-required-from') );\n                    reqMoreEl.checked = true;\n\n                    if( reqMoreEl.required ){\n                        fieldEl.required = true;\n                    }\n                }\n            }\n            \n            if(\n                (isFieldForChangeEvent && eventName === 'change') ||\n                (!isFieldForChangeEvent && eventName !== 'change')\n            ){\n                \n                self.validateField( fieldEl );\n\n            }\n        }\n        \n    }\n\n};\n","\nimport { _addClass, _removeClass }  from './helper.js';\nimport { _checkDirtyField }         from './checkDirtyField.js';\n\nconst _defaultCallbacksInOptions = {\n    fieldOptions: {\n        onValidation: function onValidationDefault ( fieldsArray ) {\n\n            let self = this,\n                options = self.options.fieldOptions;\n\n            fieldsArray.forEach(function( obj ){\n                let fieldEl = obj.fieldEl,\n                    hasTypedValue = fieldEl.value.trim().length > 0,\n                    containerEl = fieldEl.closest('[data-formjs-question]'),\n                    isReqFrom = fieldEl.matches('[data-required-from]'),\n                    reqMoreEl = self.formEl.querySelector( fieldEl.getAttribute('data-required-from') );\n\n                if( options.checkDirtyField ){\n                    _checkDirtyField.call( self, fieldEl );\n                }\n                \n                if( containerEl !== null && !options.skipUIfeedback ){\n                    if( obj.result ){\n\n                        if( !isReqFrom || (isReqFrom && reqMoreEl.checked) ){\n                            // IF FIELD IS VALID\n                            let errorClasses = options.cssClasses.error + ' ' + options.cssClasses.errorEmpty + ' ' + options.cssClasses.errorRule;\n                            _removeClass( containerEl, errorClasses );\n                            _addClass( containerEl, options.cssClasses.valid );\n                        }\n\n                    } else {\n\n                        // IF FIELD IS NOT VALID\n                        let extraErrorClass = options.cssClasses.errorRule;\n\n                        // HANDLE CASE OF FIELD data-checks\n                        let isChecks = fieldEl.matches('[data-checks]'),\n                            checkedElLength = (isChecks ? containerEl.querySelectorAll('[name=\"' + fieldEl.name + '\"]:checked').length : 0);\n\n                        if( (!isChecks && !hasTypedValue) || (isChecks && checkedElLength === 0) ){\n                            extraErrorClass = options.cssClasses.errorEmpty;\n                        }\n\n                        let errorClasses = options.cssClasses.error + ' ' + extraErrorClass,\n                            errorClassToRemove = options.cssClasses.errorEmpty + ' ' + options.cssClasses.errorRule;\n                        _removeClass( containerEl, options.cssClasses.valid + ' ' + errorClassToRemove );\n                        _addClass( containerEl, errorClasses );\n\n                    }\n                }\n            });\n            \n        }\n    }\n};\n\nexport const _setCallbackFunctionsInOptions = function(){\n    const   self = this,\n            callbacks = {\n                fieldOptions: ['onPastePrevented', 'onValidation'],\n                formOptions: ['beforeSend', 'onSubmitComplete', 'onSubmitError', 'onSubmitSuccess']\n            };\n\n    for(let opt in callbacks){\n        let fjsOpt = callbacks[opt];\n\n        fjsOpt.forEach(function(fnName){\n            let fnInOptions = self.options[opt][fnName],\n                fnList = [];\n\n            if( Array.isArray(fnInOptions) ) {\n                fnList.concat(fnInOptions);\n            } else if( fnInOptions ) {\n                fnList.push(fnInOptions);\n            }\n\n            if( typeof _defaultCallbacksInOptions[opt] !== 'undefined' && typeof _defaultCallbacksInOptions[opt][fnName] === 'function' ){\n                fnList.unshift(_defaultCallbacksInOptions[opt][fnName]);\n            }\n\n            self.options[opt][fnName] = fnList;\n        });\n    }\n\n}\n","\nimport { _addClass, _isNodeList, _removeClass } from './helper.js';\n\nexport function _checkDirtyField( fields, cssClasses = this.options.fieldOptions.cssClasses.dirty ){\n\n    var fields = (_isNodeList(fields) ? Array.from( fields ) : [fields]);\n    \n    fields.forEach(function(fieldEl){\n        if( fieldEl.type !== 'checkbox' && fieldEl.type !== 'radio' ){\n            let containerEl = fieldEl.closest('[data-formjs-question]') || fieldEl;\n\n            if( fieldEl.value ){\n                \n                _addClass( containerEl, cssClasses );\n                \n            } else {\n                \n                _removeClass( containerEl, cssClasses );\n                \n            }\n        }\n    });\n    \n}\n","\n//import { ajaxOptions } from './optionsAjax.js';\nimport { ajaxOptions } from './optionsAjaxXhr.js';\n\nexport const options = {\n\n    fieldOptions: {\n        checkDirtyField:        false,\n        cssClasses: {\n            dirty:              'is-dirty',\n            error:              'has-error',\n            errorEmpty:         'has-error-empty',\n            errorRule:          'has-error-rule',\n            valid:              'is-valid'\n        },\n        focusOnRelated:         true,\n        handleFileUpload:       true,\n        handleValidation:       true,\n        maxFileSize:            10,\n        onPastePrevented:       null,\n        onValidation:           null,\n        preventPasteFields:     '[type=\"password\"], [data-equal-to]',\n        skipUIfeedback:         false,\n        strictHtmlValidation:   true,\n        validateOnEvents:       'input change'\n    },\n\n    formOptions: {\n        ajaxOptions:            ajaxOptions,\n        ajaxSubmit:             true,\n        beforeSend:             null,\n        getFormData:            null,\n        handleSubmit:           true,\n        onSubmitComplete:       null,\n        onSubmitError:          null,\n        onSubmitSuccess:        null\n    }\n    \n}\n","\nexport let ajaxOptions = {\n    async:              true,\n    cache:              false,\n    contentType:        'application/x-www-form-urlencoded; charset=UTF-8',\n    headers: {\n                        'X-Requested-With': 'XMLHttpRequest',\n    },\n    method:             'POST',\n    timeout:            0,\n    url:                location.href\n}\n","\nimport { _checkFormEl, _isNodeList, _mergeObjects } from './helper.js';\nimport { _formStartup }                             from './formStartup.js';\n\nexport function _constructor( formEl, optionsObj = {} ){\n\n    let self = this,\n        argsL = arguments.length,\n        checkFormEl = _checkFormEl(formEl);\n\n    if( argsL === 0 || (argsL > 0 && !formEl) ){\n        throw new Error('First argument \"formEl\" is missing or falsy!');\n    }\n    if( _isNodeList(formEl) ){\n        throw new Error('First argument \"formEl\" must be a single DOM node or a form CSS selector, not a NodeList!');\n    }\n    if( !checkFormEl.result ){\n        throw new Error('First argument \"formEl\" is not a DOM node nor a form CSS selector!');\n    }\n\n    self.formEl = checkFormEl.element;\n    self.options = _mergeObjects({}, Form.prototype.options, optionsObj);\n\n    _formStartup.call( self );\n    \n}\n","\nexport function _formStartup(){\n\n    const self = this,\n          formEl = self.formEl;\n\n    if( !formEl.matches('[novalidate]') ){ return null; }\n\n    let fieldOptions = self.options.fieldOptions,\n        formOptions = self.options.formOptions;\n\n    // INIT FORM UTILITIES - START\n    let charLengthElems = formEl.querySelectorAll('[data-char-length]');\n    if( charLengthElems.length > 0 ){\n        Array.from( charLengthElems ).forEach(function( element ){\n            try {\n                let containerEl = element.closest('[data-formjs-question]'),\n                    fieldEl = containerEl.querySelector('[data-char-count]');\n\n                if( fieldEl !== null && fieldEl.matches('[maxlength]') ){\n                    // PRINT RELATED MAX LENGTH IN HTML\n                    let maxlength = fieldEl.getAttribute('maxlength');\n                    containerEl.querySelector('[data-char-maxlength]').textContent = maxlength;\n                }\n\n                // PRINT CHAR COUNT IN HTML\n                self.listenerCallbacks.charCount.call( null, fieldEl );\n            } catch (error) {}\n        });\n    }\n\n    if( fieldOptions.maxFileSize > 0 ){\n        let maxFileSizeElems = formEl.querySelectorAll('[data-max-file-size]');\n        if( maxFileSizeElems.length > 0 ){\n            Array.from( maxFileSizeElems ).forEach(function( element ){\n                try {\n                    let fieldEl = element.closest('[data-formjs-question]').querySelector('[type=\"file\"]');\n\n                    if( fieldEl !== null ){\n                        // PRINT MAX FILE SIZE FOR INPUTS WITH type=\"file\"\n                        element.textContent = fieldOptions.maxFileSize;\n                    }\n                } catch (error) {}\n            });\n        }\n    }\n    // INIT FORM UTILITIES - END\n\n    // HANDLE FIELD VALIDATION\n    if( fieldOptions.handleValidation ){\n        \n        // VALIDATION WITH ATTRIBUTES LIKE HTML ONES ( ALSO FOR BUG FIXING, EG: maxlength IN ANDROID )\n        if( fieldOptions.strictHtmlValidation ){\n            \n            // maxlength\n            // BUGGY IN ANDROID BROWSERS\n            formEl.addEventListener('keypress', self.listenerCallbacks.keypressMaxlength, false);\n\n            // data-type=\"number\"\n            // SINCE VALIDATING type=\"number\" WITH NON NUMERIC CHARS WILL RETURN EMPTY STRING IN SOME BROWSERS ( EG: FIREFOX )\n            formEl.addEventListener('input', self.listenerCallbacks.dataTypeNumber, false);\n            \n        }\n        \n        if( fieldOptions.preventPasteFields && formEl.querySelectorAll( fieldOptions.preventPasteFields ).length ){\n            // INIT EVENT LISTENER FOR \"PASTE\" EVENT TO PREVENT IT ON SPECIFIED FIELDS\n            formEl.addEventListener('paste', self.listenerCallbacks.pastePrevent, false);\n        }\n\n        if( formEl.querySelectorAll('[data-char-count]').length > 0 ){\n            // INIT EVENT LISTENER FOR FIELDS WITH \"data-char-count\" ATTRIBUTE\n            formEl.addEventListener('input', self.listenerCallbacks.charCount, false);\n        }\n\n        // INIT EVENTS LISTENER ( AS IN fieldOptions )\n        fieldOptions.validateOnEvents.split(' ').forEach(function( eventName ){\n            let useCapturing = (eventName === 'blur' ? true : false);\n            formEl.addEventListener(eventName, self.listenerCallbacks.validation, useCapturing);\n        });\n\n    }\n    \n    // HANDLE FORM SUBMIT\n    if( formOptions.handleSubmit ){\n        // INIT FORM SUBMIT ( DEFAULT AND AJAX )\n        formEl.addEventListener('submit', self.listenerCallbacks.submit);\n\n        if( formOptions.ajaxSubmit ){\n            if( formEl.getAttribute('enctype') ){\n\n                // FOR XMLHttpRequest API\n                formOptions.ajaxOptions.contentType = formEl.getAttribute('enctype');\n\n                // FOR fetch API\n                formOptions.ajaxOptions.headers['Content-Type'] = formEl.getAttribute('enctype');\n                \n            }\n\n            if( formEl.getAttribute('method') ){\n                formOptions.ajaxOptions.method = formEl.getAttribute('method').toUpperCase();\n            }\n\n            if( formEl.getAttribute('action') ){\n                formOptions.ajaxOptions.url = formEl.getAttribute('action');\n            }\n        }\n    }\n\n}\n","\nexport function destroy(){\n\n    const self = this,\n          formEl = self.formEl,\n          validationListenerNames = self.options.fieldOptions.validateOnEvents;\n\n    if( formEl.querySelectorAll('[data-char-count]').length > 0 ){\n        formEl.removeEventListener('input', self.listenerCallbacks.charCount, false);\n    }\n\n    if( self.options.fieldOptions.strictHtmlValidation ){\n        formEl.removeEventListener('keypress', self.listenerCallbacks.keypressMaxlength, false);\n        formEl.removeEventListener('input', self.listenerCallbacks.dataTypeNumber, false);\n    }\n\n    if( self.options.fieldOptions.preventPasteFields ){\n        formEl.removeEventListener('paste', self.listenerCallbacks.pastePrevent, false);\n    }\n\n    if( self.options.formOptions.handleSubmit ){\n        formEl.removeEventListener('submit', self.listenerCallbacks.submit);\n    }\n\n    validationListenerNames.split(' ').forEach(function( eventName ){\n        let useCapturing = (eventName === 'blur' ? true : false);\n        formEl.removeEventListener(eventName, self.listenerCallbacks.validation, useCapturing);\n    });\n    \n}\n","\nexport function getFormData( customFn = this.options.formOptions.getFormData ){\n\n    let formData = {},\n        self = this,\n        formEl = self.formEl,\n        formFieldsEl = formEl.querySelectorAll('input, select, textarea'),\n        excludeSelectors = ':not([type=\"reset\"]):not([type=\"submit\"]):not([type=\"button\"]):not([type=\"file\"]):not([data-exclude-data])',\n        filteredFields = Array.from(formFieldsEl).filter(elem => elem.matches(excludeSelectors) );\n    \n    if( typeof customFn === 'function' ){\n\n        formData = customFn.call( self, filteredFields );\n\n    } else {\n\n        filteredFields.forEach(function( fieldEl ){\n            let isCheckbox = fieldEl.type === 'checkbox',\n                isRadio = fieldEl.type === 'radio',\n                isSelect = fieldEl.matches('select'),\n                name = fieldEl.name,\n                value = fieldEl.value;\n                         \n            if( isCheckbox ) {\n                \n                value = fieldEl.checked;\n                let checkboxes = Array.from( formEl.querySelectorAll('[name=\"'+ name +'\"]') );\n                if( checkboxes.length > 1 ){\n\n                    value = [];\n                    let checkedElems = checkboxes.filter(field => field.checked);\n                    checkedElems.forEach(fieldEl => {\n                        value.push( fieldEl.value );\n                    });\n\n                }\n                    \n            } else if( isRadio ){\n                \n                let checkedRadio = formEl.querySelector('[name=\"'+ name +'\"]:checked');\n                value = (checkedRadio === null ? null : checkedRadio.value);\n                \n            } else if( isSelect ){\n\n                let selectedOpts = Array.from( fieldEl.options ).filter(option => option.selected);\n                if( selectedOpts.length > 1 ){\n\n                    value = [];\n                    selectedOpts.forEach(fieldEl => {\n                        value.push( fieldEl.value );\n                    });\n\n                }\n            }\n\n            formData[ name ] = value;\n        });\n\n    }\n    \n    return formData;\n    \n}\n","\nimport { _fieldsStringSelector, _isFieldForChangeEvent } from './helper.js';\n\nexport const init = function(){\n\n    const self = this,\n          formEl = self.formEl,\n          formFields = formEl.querySelectorAll( _fieldsStringSelector );\n\n    let currentFieldName = '',\n        currentFieldType = '';\n\n    Array.from( formFields ).forEach(function( fieldEl ){\n        const   name = fieldEl.name,\n                type = fieldEl.type;\n        \n        // AVOID REPEATING VALIDATION IF THE FIELD HAS THE SAME NAME OF THE PREVIOUS ONE\n        if( (name === currentFieldName && type === currentFieldType) ){ return true; }\n\n        const isCheckboxOrRadio = (fieldEl.type === 'checkbox' || fieldEl.type === 'radio'),\n              isFieldForChangeEvent = _isFieldForChangeEvent(fieldEl),\n              fieldChecked = formEl.querySelector('[name=\"' + fieldEl.name + '\"]:checked'),\n              isReqFrom = fieldEl.matches('[data-required-from]'),\n              reqMoreEl = (isReqFrom ? formEl.querySelector(fieldEl.getAttribute('data-required-from')) : null);\n\n        if( !isReqFrom ){\n            currentFieldName = name;\n            currentFieldType = type;\n        }\n        \n        // VALIDATE FIELD ( BY TRIGGERING THE EVENT LISTENER ) IF IT ALREADY HAS A VALUE\n        if(\n            (!isCheckboxOrRadio && fieldEl.value) || \n            (isCheckboxOrRadio && fieldChecked !== null) ||\n            (isReqFrom && reqMoreEl.checked)\n        ){\n\n            let eventToTrigger = 'change';\n\n            if( isCheckboxOrRadio ){\n                fieldEl = fieldChecked;\n            } else if( !isFieldForChangeEvent ) {\n                eventToTrigger = self.options.fieldOptions.validateOnEvents.split(' ').filter(function(evName){\n                    return evName !== 'change';\n                })[0] || 'input';\n            }\n\n            let newEvent = new Event(eventToTrigger, {'bubbles': (eventToTrigger !== 'blur'), 'cancelable': true});\n            fieldEl.dispatchEvent(newEvent);\n\n        }\n    });\n\n    self.isInitialized = true;\n\n    return self;\n\n}\n","\nimport { _isDOMNode, _mergeObjects, _validateFieldObjDefault } from './helper.js';\nimport { _isValid } from './isValid.js';\n\nexport function isValidField( fieldElem, fieldOptionsObj = {} ){\n\n    const self = this,\n          fieldEl = (typeof fieldElem === 'string' ? self.formEl.querySelector(fieldElem) : fieldElem);\n\n    let obj = _mergeObjects({}, _validateFieldObjDefault);\n\n    if( !_isDOMNode(fieldEl) ){ return obj; }\n\n    let options =           _mergeObjects( {}, self.options.fieldOptions, fieldOptionsObj ),\n        isValidValue =      fieldEl.value.trim().length > 0,\n        isRequired =        fieldEl.required,\n        isReqFrom =         fieldEl.matches('[data-required-from]'),\n        isValidateIfFilled =fieldEl.matches('[data-validate-if-filled]');\n    \n    if(\n        (!isRequired && !isValidateIfFilled && !isReqFrom) ||   // IT IS A NORMAL FORM FIELD\n        (isValidateIfFilled && !isValidValue) ||                // IT IS data-validate-if-filled AND EMPTY\n        (isReqFrom && !isRequired )                             // IT IS data-required-from AND NOT required\n    ){\n\n        obj.result = true;\n       \n    } else {\n        \n        obj =  _isValid.call( self, fieldEl, options );\n        \n    }\n\n    obj.fieldEl = fieldEl;\n    \n    return obj;\n\n}\n","\nimport { _mergeObjects, _toCamelCase } from './helper.js';\nimport { _validationRulesAttributes } from './validationRules.js';\n\nexport function _isValid( fieldEl, fieldOptions = {} ){\n\n    const self = this,\n          fieldType = ( fieldEl.matches('[data-subtype]') ? _toCamelCase( fieldEl.getAttribute('data-subtype') ) : fieldEl.type ),\n          fieldValue = fieldEl.value,\n          isValidValue = fieldValue.trim().length > 0,\n          // ALPHABETICAL REVERSE ORDER\n          fieldAttributes = Array.from(fieldEl.attributes).sort(function(a,b){ return a.name < b.name });\n\n    let attrValidations = [],\n        attrValidationsResult = isValidValue,\n        obj = { result: isValidValue };\n\n    if( !isValidValue ){\n        obj.errors = { empty: true };\n        obj.result = false;\n        return obj;\n    }\n\n    // COLLECT SPECIFIC VALIDATIONS FOR _validationRulesAttributes\n    fieldAttributes.forEach(function(attr){\n        // FOR data-* ATTRIBUTES -> REMOVE \"data-\" AND TRANSFORM TO CAMELCASE\n        let attrName = _toCamelCase( attr.name.replace('data-', '') ),\n            attrValue = attr.value,\n            isTypeValueWithFn = attrName === 'type' && typeof _validationRulesAttributes[attrValue] === 'function',\n            isAttrNameWithFn = typeof _validationRulesAttributes[attrName] === 'function';\n\n        if( isTypeValueWithFn || isAttrNameWithFn ){\n\n            let extraValObj = {\n                    attrName: (isTypeValueWithFn ? attrValue : attrName),\n                    attrValue: attrValue,\n                    fieldEl,\n                    fieldOptions\n                };\n\n            if( isTypeValueWithFn || attrName === 'requiredFrom' ){\n                // THESE VALIDATIONS MUST RUN BEFORE ALL OTHERS\n                attrValidations.unshift( extraValObj );\n            } else {\n                attrValidations.push( extraValObj );\n            }\n\n        }\n    });\n\n    // RUN SPECIFIC VALIDATIONS FOR _validationRulesAttributes\n    attrValidations.forEach(function(item){\n        let extraVal = _validationRulesAttributes[item.attrName]( item, fieldEl );\n        if( !extraVal.result ){\n            obj = _mergeObjects({}, obj, extraVal);\n            attrValidationsResult = false;\n        }\n    });\n\n    // RUN VALIDATIONS FOR validationRules\n    if( typeof self.validationRules[fieldType] === 'function' ){\n        obj = _mergeObjects( {}, obj, self.validationRules[fieldType](fieldValue, fieldEl) );\n        obj.result = obj.result && attrValidationsResult;\n        if( !obj.result ){\n            if( typeof obj.errors === 'undefined' ){\n                obj.errors = {};\n            }\n            obj.errors.rule = true;\n        }\n    }\n\n    return obj;\n\n}\n","\nimport { _fieldsStringSelector, _isDOMNode, _mergeObjects, _validateFormObjDefault } from './helper.js';\n\nexport function isValidForm( options = {} ){\n\n    const self = this,\n          formEl = self.formEl;\n\n    let obj = _mergeObjects({}, _validateFormObjDefault);\n\n    if( !_isDOMNode(formEl) || !formEl.matches('[novalidate]') ){\n        obj.result = false;\n        return obj;\n    }\n    \n    let fieldOptions = _mergeObjects( {}, self.options.fieldOptions, options.fieldOptions ),\n        currentFieldName = '',\n        currentFieldType = '';\n    \n    if( typeof fieldOptions.focusOnRelated === 'undefined' ){\n        fieldOptions.focusOnRelated = false;\n    }\n    \n    Array.from( formEl.querySelectorAll(_fieldsStringSelector) ).forEach(function( fieldEl ){\n        let name = fieldEl.name,\n            type = fieldEl.type,\n            fieldData = {};\n        \n        if( (name === currentFieldName && type === currentFieldType) ){ return true; }\n        \n        if( !fieldEl.matches('[data-required-from]') ){\n            currentFieldName = name;\n            currentFieldType = type;\n        }\n        \n        fieldData = self.isValidField( fieldEl, fieldOptions );\n\n        if( !fieldData.result ){\n            obj.result = false;\n        }\n        \n        obj.fields.push( fieldData );\n    });\n    \n    return obj;\n\n}\n","\nimport { _executeCallback, _isPlainObject, _mergeObjects } from './helper.js';\n\n//import { _ajaxCall } from './ajaxCall.js';\nimport { _ajaxCall } from './ajaxCallXhr.js';\n\nexport function submit( options = {}, event = null ){\n\n    const self = this,\n          formEl = self.formEl,\n          eventPreventDefault = ( enableBtn = true ) => {\n              if( btnEl && enableBtn ){ btnEl.disabled = false; }\n              if( event ){ event.preventDefault(); }\n          };\n    \n    options.fieldOptions = _mergeObjects( {}, self.options.fieldOptions, options.fieldOptions );\n    options.formOptions = _mergeObjects( {}, self.options.formOptions, options.formOptions );\n    \n    const handleValidation = options.fieldOptions.handleValidation,\n          formValidation = (handleValidation ? self.isValidForm( options ) : { result: true });\n\n    const btnEl = formEl.querySelector('[type=\"submit\"]'),\n          isAjaxForm = options.formOptions.ajaxSubmit;\n    \n    if( handleValidation ){\n        _executeCallback.call( self, options.fieldOptions.onValidation, formValidation.fields );\n    }\n    \n    let formDataObj = (isAjaxForm ? self.getFormData() : null),\n        callbacksBeforeSend = [],\n        beforeSendOpt = options.formOptions.beforeSend;\n\n    if( typeof beforeSendOpt === 'function' || Array.isArray(beforeSendOpt) ){\n        let beforeSendData = {\n                stopExecution: false\n            },\n            stopCallbackLoop = false;\n\n        if( formDataObj ){\n            beforeSendData.formData = formDataObj;\n        }\n\n        if( typeof beforeSendOpt === 'function' ){\n            callbacksBeforeSend.push( beforeSendOpt );\n        } else if( Array.isArray(beforeSendOpt) ) {\n            callbacksBeforeSend = beforeSendOpt;\n        }\n\n        callbacksBeforeSend.forEach(function(cbFn){\n            if( !stopCallbackLoop ){\n                let beforeSendFn = cbFn.call( self, beforeSendData );\n                \n                if( _isPlainObject(beforeSendFn) ){\n                    formDataObj = beforeSendFn.formData || formDataObj;\n                    if( beforeSendFn.stopExecution ){\n                        stopCallbackLoop = true;\n                    }\n                }\n            }\n        });\n\n        if( stopCallbackLoop ){\n            eventPreventDefault();\n            return false;\n        }\n    }\n\n    if( !formValidation.result || (btnEl && btnEl.disabled) ){\n        eventPreventDefault();\n        return false;\n    }\n\n    if( btnEl ){\n        btnEl.disabled = true;\n    }\n    \n    if( isAjaxForm ){\n\n        // AJAX FORM SUBMIT\n        eventPreventDefault(false);\n        _ajaxCall.call(self, formDataObj);\n\n    } else if( !event ){\n\n        // TRIGGER SUBMIT EVENT\n        let submitEvent = new Event('submit', {'bubbles': true, 'cancelable': true});\n        formEl.dispatchEvent(submitEvent);\n\n    }\n    \n}\n","\nimport { _executeCallback, _mergeObjects, _serialize } from './helper.js';\n\n// AJAX CALL USING XMLHttpRequest API\nexport function _ajaxCall( formDataObj ){\n\n    let self = this,\n        formEl = self.formEl,\n        fieldOptions = self.options.fieldOptions,\n        formOptions = self.options.formOptions,\n        btnEl = formEl.querySelector('[type=\"submit\"]'),\n        timeoutTimer,\n        xhrOptions = _mergeObjects( {}, formOptions.ajaxOptions ),\n        isMultipart = xhrOptions.contentType === 'multipart/form-data';\n\n    xhrOptions.data = formDataObj;\n    \n    if( isMultipart && fieldOptions.handleFileUpload ){\n        let formDataMultipart = new FormData();\n        \n        for(let key in xhrOptions.data){\n            formDataMultipart.append( key, xhrOptions.data[key] );\n        }\n        \n        Array.from( formEl.querySelectorAll('[type=\"file\"]') ).forEach(function( field ){\n            Array.from(field.files).forEach(function( file, idx ){\n                let name = field.name+'['+ idx +']';\n                formDataMultipart.append( name, file, file.name );\n            });\n        });\n        \n        xhrOptions.data = formDataMultipart;\n    }\n    \n    let XHR = new XMLHttpRequest(),\n        parseResponse = function( xhr ){\n            let data = xhr.responseText,\n                getJSON = function(){\n                    try{\n                        let obj = JSON.parse(data);\n                        return obj;\n                    } catch(e){\n                        return false;\n                    }\n                },\n                getXML_HTML = function(){\n                    try{\n                        let isXML = xhr.responseXML !== null,\n                            obj = (isXML ? new DOMParser().parseFromString(data, 'text/xml') : data);\n                        return obj;\n                    } catch(e){\n                        return false;\n                    }\n                };\n            \n            return (getJSON() || getXML_HTML() || data);\n        },\n        successFn = function(e) {\n            let xhr = e.target,\n                responseData = parseResponse(xhr);\n\n            let readyStateOK = xhr.readyState === 4,\n                statusOK = xhr.status === 200,\n                ajaxData = {\n                    dataOrXHR:      ( readyStateOK && statusOK ? responseData   : xhr           ),\n                    status:         ( readyStateOK && statusOK ? 'success'      : 'error'       ),\n                    XHRorResponse:  ( readyStateOK && statusOK ? xhr            : responseData  )\n                };\n            \n            if( timeoutTimer ){\n                window.clearTimeout( timeoutTimer );\n            }\n\n            btnEl.disabled = false;\n\n            _executeCallback.call( self, formOptions.onSubmitComplete, ajaxData );\n        },\n        completeFn = function(e) {\n            let xhr = e.target;\n\n            if( xhr.status === 200 ){\n                let responseData = parseResponse(xhr),\n                    ajaxData = { data: responseData, status: 'success', response: xhr };\n\n                _executeCallback.call( self, formOptions.onSubmitSuccess, ajaxData );\n            } else {\n                errorFn(e);\n            }\n        },\n        errorFn = function(e) {\n            let xhr = e.target,\n                ajaxData = { errorThrown: xhr.statusText, status: 'error', response: xhr };\n\n            _executeCallback.call( self, formOptions.onSubmitError, ajaxData );\n        };\n    \n    XHR.addEventListener('loadend', successFn,  false);\n    XHR.addEventListener('load',    completeFn, false);\n    XHR.addEventListener('error',   errorFn,    false);\n    \n    if( xhrOptions.method === 'GET' ){\n        xhrOptions.url += ( /\\?/.test(xhrOptions.url) ? '&' : '?' ) + _serialize( xhrOptions.data );\n        if( xhrOptions.cache === false ){\n            xhrOptions.url +=  (/\\&/.test(xhrOptions.url) ? '&' : '') + '_=' + (new Date().getTime());\n        }\n    }\n    \n    XHR.open(xhrOptions.method, xhrOptions.url, xhrOptions.async);\n\n    if ( xhrOptions.xhrFields ) {\n        for ( let i in xhrOptions.xhrFields ) {\n            XHR[ i ] = xhrOptions.xhrFields[ i ];\n        }\n    }\n\n    if ( xhrOptions.mimeType && XHR.overrideMimeType ) {\n        XHR.overrideMimeType( xhrOptions.mimeType );\n    }\n    \n    if( xhrOptions.data && xhrOptions.contentType !== 'multipart/form-data' ){\n        XHR.setRequestHeader('Content-Type', xhrOptions.contentType);\n    }\n    \n    for( let h in xhrOptions.headers ){\n        XHR.setRequestHeader( h, xhrOptions.headers[h] );\n    }\n\n    if( !isMultipart ){\n        xhrOptions.data = JSON.stringify(xhrOptions.data);\n    }\n    \n    XHR.send( (xhrOptions.method === 'GET' ? null : xhrOptions.data) );\n\n    if ( xhrOptions.async && xhrOptions.timeout > 0 ) {\n        timeoutTimer = window.setTimeout(function() {\n            XHR.abort();\n        }, xhrOptions.timeout);\n    }\n    \n}\n","\nimport { _executeCallback, _isDOMNode, _mergeObjects, _validateFieldObjDefault } from './helper.js';\n\nexport function validateField( fieldElem, fieldOptionsObj = {} ){\n\n    const self = this,\n          fieldEl = (typeof fieldElem === 'string' ? self.formEl.querySelector(fieldElem) : fieldElem);\n    let obj = _mergeObjects({}, _validateFieldObjDefault);\n\n    if( _isDOMNode(fieldEl) ){\n\n        obj = self.isValidField( fieldEl, fieldOptionsObj );\n        let fieldOptions = _mergeObjects({}, self.options.fieldOptions, fieldOptionsObj);\n        _executeCallback.call( self, fieldOptions.onValidation, [obj] );\n        \n    }\n\n    return obj;\n    \n}\n","\nimport { _executeCallback, _mergeObjects } from './helper.js';\n\nexport function validateForm( optionsObj = {} ){\n\n    const self = this,\n          obj = self.isValidForm( optionsObj );\n    let options = _mergeObjects({}, self.options, optionsObj);\n\n    _executeCallback.call( self, options.fieldOptions.onValidation, obj.fields );\n\n    return obj;\n    \n}\n"],"sourceRoot":""}