{"version":3,"sources":["webpack:///webpack/bootstrap","webpack:///./src/modules/helper.js","webpack:///./src/modules/validationRules.js","webpack:///./src/modules/isValidField.js","webpack:///./src/index.js","webpack:///./src/modules/optionsUtils.js","webpack:///./src/modules/checkDirtyField.js","webpack:///./src/modules/options.js","webpack:///./src/modules/optionsAjaxXhr.js","webpack:///./src/modules/validationErrors.js","webpack:///./src/modules/constructor.js","webpack:///./src/modules/listenerCallbacks.js","webpack:///./src/modules/formStartup.js","webpack:///./src/modules/destroy.js","webpack:///./src/modules/getFormData.js","webpack:///./src/modules/init.js","webpack:///./src/modules/submit.js","webpack:///./src/modules/ajaxCallXhr.js","webpack:///./src/modules/validateField.js","webpack:///./src/modules/isValid.js","webpack:///./src/modules/validateForm.js","webpack:///./src/modules/isValidForm.js"],"names":["installedModules","__webpack_require__","moduleId","exports","module","i","l","modules","call","m","c","d","name","getter","o","Object","defineProperty","enumerable","get","r","Symbol","toStringTag","value","t","mode","__esModule","ns","create","key","bind","n","default","object","property","prototype","hasOwnProperty","p","s","e","iterator","constructor","isDOMNode","fieldsStringSelector","addClass","element","cssClasses","split","forEach","className","classList","add","checkFormEl","formEl","isString","_typeof","isFormSelector","document","querySelector","tagName","toLowerCase","result","executeCallback","callbackOption","callbackData","tempOptions","arguments","length","self","this","options","mergeObjects","callbackFnList","push","Array","isArray","cbFn","getSplitChar","string","splitChar","indexOf","node","Element","isPrototypeOf","isFieldForChangeEvent","fieldEl","matches","isNodeList","nodeList","NodeList","isPlainObject","toString","out","obj","isObject","concat","slice","removeClass","remove","serializeObject","keys","reduce","a","k","encodeURIComponent","join","toCamelCase","replace","all","letter","toUpperCase","validateFieldObjDefault","validateFormObjDefault","fields","validationRulesAttributes","validationRules","_helper","cap","RegExp","test","validationErrors","errors","color","date","dateDDMMYYYY","email","fiscalCode","landlineNumber","mobileNumber","number","numberFloat","numberInteger","password","tel","url","username","vatNumber","checkbox","data","dataChecksEl","closest","checked","checks","attrValue","getAttribute","JSON","parse","checkedElLength","querySelectorAll","isMinOk","isMaxOk","minChecks","maxChecks","Error","equalTo","checkFromEl","exactLength","valueLength","minlength","maxlength","file","MIMEtype","accept","from","files","exceedMaxFileSize","fieldOptions","maxFileSize","size","isAcceptedFileType","type","acceptedFileType","valueL","isMinlengthOk","isMaxlengthOk","stringLength","max","isDate","maxVal","reverse","min","minVal","pattern","fieldPattern","radio","fieldChecked","trim","requiredFrom","isValidValue","reqMoreEl","required","isValidField","fieldElem","fieldOptionsObj","isRequired","isReqFrom","isValidateIfFilled","isValid","_isValid","configurable","writable","_optionsUtils","_options","_validationRules","_validationErrors","_constructor","_destroy2","_getFormData2","_init2","_submit2","_validateField2","_validateForm2","Form","optionsObj","constructorFn","destroy","customFn","getFormData","init","event","submit","validateField","validateForm","errorsObj","rulesObj","isInitialized","version","setCallbackFunctionsInOptions","window","FormJS","_checkDirtyField","defaultCallbacksInOptions","onValidation","fieldsArray","containerEl","checkDirtyField","skipUIfeedback","errorClasses","error","errorEmpty","errorRule","valid","extraErrorClass","isChecks","empty","errorClassToRemove","callbacks","formOptions","_loop","opt","fnName","fnInOptions","fnList","unshift","dirty","_optionsAjaxXhr","focusOnRelated","handleFileUpload","handleValidation","onPastePrevented","preventPasteFields","strictHtmlValidation","validateOnEvents","ajaxOptions","ajaxSubmit","beforeSend","handleSubmit","onSubmitComplete","onSubmitError","onSubmitSuccess","async","cache","contentType","headers","X-Requested-With","method","timeout","location","href","strLength","invalidChars","missingAtChar","splitAt_at","missingUserName","missingDomain","missingExtensionDot","missingExtension","extLength","minlengthExtension","missingNumber","missingLowercase","missingUppercase","invalidStartChar","indexOfIT","argsL","checkFormElem","formjs","listenerCallbacks","charCount","callbackFns","dataTypeNumber","keypressMaxlength","pastePrevent","validation","freeze","formStartup","_listenerCallbacks","_formStartup","eventOrField","target","charLengthEl","usedChars","textContent","fieldValue","stopImmediatePropagation","valueReplaced","maxLength","keyPressed","which","keyCode","preventDefault","eventName","isFieldForChangeEventBoolean","isRadio","isReqMore","findReqMoreEl","findReqFromEl","id","focus","charLengthElems","maxFileSizeElems","addEventListener","useCapturing","validationListenerNames","removeEventListener","formData","formFieldsEl","filteredFields","filter","elem","isCheckbox","isSelect","checkboxes","field","checkedRadio","selectedOpts","option","selected","formFields","currentFieldName","currentFieldType","isCheckboxOrRadio","eventToTrigger","evName","newEvent","Event","bubbles","cancelable","dispatchEvent","eventPreventDefault","enableBtn","btnEl","disabled","formValidation","isAjaxForm","formDataObj","callbacksBeforeSend","beforeSendOpt","beforeSendData","stopExecution","stopCallbackLoop","beforeSendFn","ajaxCall","submitEvent","_ajaxCallXhr","timeoutTimer","xhrOptions","isMultipart","formDataMultipart","FormData","append","idx","XHR","XMLHttpRequest","ajaxResponse","errorFn","xhr","status","code","message","statusText","responseData","responseText","responseXML","isXML","DOMParser","parseFromString","clearTimeout","Date","getTime","open","xhrFields","h","mimeType","overrideMimeType","setRequestHeader","stringify","send","setTimeout","abort","_isValidField","fieldType","fieldAttributes","attributes","sort","b","attrValidations","attrValidationsResult","attr","attrName","isTypeValueWithFn","isAttrNameWithFn","extraValObj","item","extraVal","rule","isValidForm","_isValidForm","fieldData"],"mappings":"aACA,IAAAA,KAGA,SAAAC,EAAAC,GAGA,GAAAF,EAAAE,GACA,OAAAF,EAAAE,GAAAC,QAGA,IAAAC,EAAAJ,EAAAE,IACAG,EAAAH,EACAI,KACAH,YAUA,OANAI,EAAAL,GAAAM,KAAAJ,EAAAD,QAAAC,IAAAD,QAAAF,GAGAG,EAAAE,KAGAF,EAAAD,QAKAF,EAAAQ,EAAAF,EAGAN,EAAAS,EAAAV,EAGAC,EAAAU,EAAA,SAAAR,EAAAS,EAAAC,GACAZ,EAAAa,EAAAX,EAAAS,IACAG,OAAAC,eAAAb,EAAAS,GAA0CK,cAAAC,IAAAL,KAK1CZ,EAAAkB,EAAA,SAAAhB,GACA,oBAAAiB,eAAAC,aACAN,OAAAC,eAAAb,EAAAiB,OAAAC,aAAwDC,MAAA,WAExDP,OAAAC,eAAAb,EAAA,cAAiDmB,YAQjDrB,EAAAsB,EAAA,SAAAD,EAAAE,GAEA,GADA,EAAAA,IAAAF,EAAArB,EAAAqB,IACA,EAAAE,EAAA,OAAAF,EACA,KAAAE,GAAA,iBAAAF,QAAAG,WAAA,OAAAH,EACA,IAAAI,EAAAX,OAAAY,OAAA,MAGA,GAFA1B,EAAAkB,EAAAO,GACAX,OAAAC,eAAAU,EAAA,WAAyCT,cAAAK,UACzC,EAAAE,GAAA,iBAAAF,EAAA,QAAAM,KAAAN,EAAArB,EAAAU,EAAAe,EAAAE,EAAA,SAAAA,GAAgH,OAAAN,EAAAM,IAAqBC,KAAA,KAAAD,IACrI,OAAAF,GAIAzB,EAAA6B,EAAA,SAAA1B,GACA,IAAAS,EAAAT,KAAAqB,WACA,WAA2B,OAAArB,EAAA2B,SAC3B,WAAiC,OAAA3B,GAEjC,OADAH,EAAAU,EAAAE,EAAA,IAAAA,GACAA,GAIAZ,EAAAa,EAAA,SAAAkB,EAAAC,GAAsD,OAAAlB,OAAAmB,UAAAC,eAAA3B,KAAAwB,EAAAC,IAGtDhC,EAAAmC,EAAA,GAIAnC,IAAAoC,EAAA,cAAAC,EAAAf,EAAAJ,GAAA,aAAAJ,OAAAC,eAAAO,EAAA,cAAAD,OAAA,QAAAQ,EAAA,mBAAAV,QAAA,iBAAAA,OAAAmB,SAAA,SAAAD,GAAA,cAAAA,GAAA,SAAAA,GAAA,OAAAA,GAAA,mBAAAlB,QAAAkB,EAAAE,cAAApB,QAAAkB,IAAAlB,OAAAc,UAAA,gBAAAI,GC7BAG,GAlDAC,uBAAuB,yGAEvBC,WAAW,SAAUC,EAASC,GAC1BA,EAAWC,MAAM,KAAKC,QAAQ,SAASC,GACnCJ,EAAQK,UAAUC,IAAKF,MAI/BG,cAAc,SAAUC,GACpB,IAAIC,WAAkBD,EAAlB,YAAAE,EAAkBF,GAElBG,EADmC,WAAbF,GAAyBZ,EAAUe,SAASC,cAAcL,KACiB,SAAzDI,SAASC,cAAcL,GAAQM,QAAQC,cAMnF,OAJQC,OAAQnB,EAAUW,IAAWG,EAC7BX,QAAuB,WAAbS,EAAwBG,SAASC,cAAcL,GAAUA,IAM/ES,kBAAkB,SAAUC,EAAgBC,GAAgC,IAAlBC,EAAkB,EAAAC,UAAAC,iBAAAD,UAAA,GAAAA,UAAA,MACpEE,EAAOC,KACPC,EAAUC,KAAiBH,EAAKE,QAASL,GACzCO,KAE0B,mBAAnBT,EACPS,EAAeC,KAAMV,GACdW,MAAMC,QAAQZ,KACrBS,EAAiBT,GAGrBS,EAAexB,QAAQ,SAAS4B,GAC5BA,EAAKnE,KAAM2D,EAAMJ,EAAcM,MAIvCO,eAAe,SAAUC,GACrB,IAAIC,EAAY,IAUhB,OARmC,IAA/BD,EAAOE,QAAQD,KACY,GAAvBD,EAAOE,QAAQ,KACfD,EAAY,IACkB,GAAvBD,EAAOE,QAAQ,OACtBD,EAAY,MAIbA,GAGXrC,YAAY,SAAUuC,GAClB,OAAOC,QAAQ/C,UAAUgD,cAAeF,KAe5CV,GAZAa,wBAAwB,SAAWC,GAC/B,OAAOA,EAAQC,QAAQ,6DAG3BC,aAAa,SAAUC,GACnB,OAAOC,SAAStD,UAAUgD,cAAeK,IAG7CE,gBAAgB,SAAUzD,GACtB,MAAoD,oBAA7CjB,OAAOmB,UAAUwD,SAASlF,KAAMwB,IAG3CsC,eAAe,SAAfA,IACI,IAD+B,IAAVqB,EAAU,EAAA1B,UAAAC,iBAAAD,UAAA,GAAAA,UAAA,MACvB5D,EAAE,EAAGA,EAAE4D,UAAUC,OAAQ7D,IAAI,CACjC,IAAIuF,EAAM3B,UAAU5D,GAEpB,GAAIuF,EAEJ,IAAI,IAAIhE,KAAOgE,EAAI,CACf,IAAIlB,EAAuD,mBAA7C3D,OAAOmB,UAAUwD,SAASlF,KAAKoF,EAAIhE,IAC7CiE,EAAwD,oBAA7C9E,OAAOmB,UAAUwD,SAASlF,KAAKoF,EAAIhE,IAG9CgE,EAAIzD,eAAeP,KACf8C,YAEWiB,EAAI/D,IAAqC,OAAb+D,EAAI/D,KACvC+D,EAAI/D,OAER+D,EAAI/D,GAAO+D,EAAI/D,GAAKkE,OAAQF,EAAIhE,GAAKmE,MAAM,KAEpCF,EAEPF,EAAI/D,GAAO0C,EAAaqB,EAAI/D,GAAMgE,EAAIhE,IAKlC6C,MAAMC,QAAQiB,EAAI/D,IAClB+D,EAAI/D,GAAK4C,KAAKoB,EAAIhE,IAElB+D,EAAI/D,GAAOgE,EAAIhE,KAQnC,OAAO+D,IAGXK,cAAc,SAAUpD,EAASC,GAC7BA,EAAWC,MAAM,KAAKC,QAAQ,SAASC,GACnCJ,EAAQK,UAAUgD,OAAQjD,MAIlCkD,kBAAkB,SAAUN,GAUxB,OARSA,GAAsB,qBAARA,EAAP,YAAAtC,EAAOsC,KAAoBA,EAAIpD,cAAgBzB,OACvDA,OAAOoF,KAAKP,GACPQ,OAAO,SAASC,EAAEC,GAEf,OADAD,EAAE7B,KAAK8B,EAAE,IAAIC,mBAAmBX,EAAIU,KAC7BD,OACLG,KAAK,KACfZ,GAKZa,cAAc,SAAU5B,GACpB,OAAOA,EAAO6B,QAAQ,aAAc,SAASC,EAAKC,GAAS,OAAOA,EAAOC,iBAG7EC,2BAA4BlD,UAAewB,QAAS,MAEpD2B,0BAA2BnD,UAAcoD,YAAQ,SAAA1E,EAAAf,EAAAJ,GAAA,aAAAJ,OAAAC,eAAAO,EAAA,cAAAD,OAAA,IAAAC,EAAA0F,0BAAA1F,EAAA2F,qBAAA,ECrIjD,IAAAC,EAAAlH,EAAA,GAEaiH,mBAETE,IAAK,SAAUvC,GAEX,IAEIe,GACIhC,OAFI,IAAIyD,OAAO,cAEDC,KAAMzC,IAO5B,OAJKe,EAAIhC,QAA+C,mBAA9BQ,KAAKmD,iBAAiBH,MAC5CxB,EAAI4B,OAASpD,KAAKmD,iBAAiBH,IAAKvC,IAGrCe,GAGX6B,MAAO,SAAU5C,GAGb,IAAIe,GACAhC,OAAQ,sCAAsC0D,KAAMzC,IAOxD,OAJKe,EAAIhC,QAAiD,mBAAhCQ,KAAKmD,iBAAiBE,QAC5C7B,EAAI4B,OAASpD,KAAKmD,iBAAiBE,MAAO5C,IAGvCe,GAGX8B,KAAM,SAAU7C,GAGZ,IACIe,GACIhC,OAFG,+TAA+T0D,KAAMzC,IAShV,OAJKe,EAAIhC,QAAgD,mBAA/BQ,KAAKmD,iBAAiBG,OAC5C9B,EAAI4B,OAASpD,KAAKmD,iBAAiBG,KAAM7C,IAGtCe,GAGX+B,aAAc,SAAU9C,GAGpB,IACIe,GACIhC,OAFG,iUAAiU0D,KAAMzC,IASlV,OAJKe,EAAIhC,QAAwD,mBAAvCQ,KAAKmD,iBAAiBI,eAC5C/B,EAAI4B,OAASpD,KAAKmD,iBAAiBI,aAAc9C,IAG9Ce,GAGXgC,MAAO,SAAU/C,GAIb,IAAMe,GACFhC,OAAQ,yJAAyJ0D,KAAMzC,IAO3K,OAJKe,EAAIhC,QAAiD,mBAAhCQ,KAAKmD,iBAAiBK,QAC5ChC,EAAI4B,OAASpD,KAAKmD,iBAAiBK,MAAO/C,IAGvCe,GAGXiC,WAAY,SAAUhD,GAElB,IAAIe,GACIhC,OAAQ,+RAA+R0D,KAAMzC,IAOrT,OAJKe,EAAIhC,QAAsD,mBAArCQ,KAAKmD,iBAAiBM,aAC5CjC,EAAI4B,OAASpD,KAAKmD,iBAAiBM,WAAYhD,IAG5Ce,GAGXkC,eAAgB,SAAUjD,GAKtB,IAAIe,GACAhC,OAAQ,4EAA4E0D,KAAMzC,IAO9F,OAJKe,EAAIhC,QAA0D,mBAAzCQ,KAAKmD,iBAAiBO,iBAC5ClC,EAAI4B,OAASpD,KAAKmD,iBAAiBO,eAAgBjD,IAGhDe,GAGXmC,aAAc,SAAUlD,GAIpB,IAAIe,GACAhC,OAAQ,0FAA0F0D,KAAMzC,IAO5G,OAJKe,EAAIhC,QAAwD,mBAAvCQ,KAAKmD,iBAAiBQ,eAC5CnC,EAAI4B,OAASpD,KAAKmD,iBAAiBQ,aAAclD,IAG9Ce,GAGXoC,OAAQ,SAAUnD,GAGd,IAAIe,GACAhC,OAAQ,0BAA0B0D,KAAMzC,IAO5C,OAJKe,EAAIhC,QAAkD,mBAAjCQ,KAAKmD,iBAAiBS,SAC5CpC,EAAI4B,OAASpD,KAAKmD,iBAAiBS,OAAQnD,IAGxCe,GAGXqC,YAAa,SAAUpD,GAGnB,IAAIe,GACAhC,OAAQ,yBAAyB0D,KAAMzC,IAO3C,OAJKe,EAAIhC,QAAuD,mBAAtCQ,KAAKmD,iBAAiBU,cAC5CrC,EAAI4B,OAASpD,KAAKmD,iBAAiBU,YAAapD,IAG7Ce,GAGXsC,cAAe,SAAUrD,GAErB,IAAIe,GACAhC,OAAQ,QAAQ0D,KAAMzC,IAO1B,OAJKe,EAAIhC,QAAyD,mBAAxCQ,KAAKmD,iBAAiBW,gBAC5CtC,EAAI4B,OAASpD,KAAKmD,iBAAiBW,cAAerD,IAG/Ce,GAGXuC,SAAU,SAAUtD,GAGhB,IAAIe,GACAhC,OAAQ,qDAAqD0D,KAAKzC,IAOtE,OAJKe,EAAIhC,QAAoD,mBAAnCQ,KAAKmD,iBAAiBY,WAC5CvC,EAAI4B,OAASpD,KAAKmD,iBAAiBY,SAAUtD,IAG1Ce,GAGXwC,IAAK,SAAUvD,GAEX,IAAIe,GACAhC,OAAQQ,KAAK8C,gBAAgBY,eAAejD,GAAQjB,QAAUQ,KAAK8C,gBAAgBa,aAAalD,GAAQjB,QAO5G,OAJKgC,EAAIhC,QAA+C,mBAA9BQ,KAAKmD,iBAAiBa,MAC5CxC,EAAI4B,OAASpD,KAAKmD,iBAAiBa,IAAKvD,IAGrCe,GAGXyC,IAAK,SAAUxD,GAIX,IAAIe,GACAhC,OAAQ,4EAA4E0D,KAAMzC,IAO9F,OAJKe,EAAIhC,QAA+C,mBAA9BQ,KAAKmD,iBAAiBc,MAC5CzC,EAAI4B,OAASpD,KAAKmD,iBAAiBc,IAAKxD,IAGrCe,GAGX0C,SAAU,SAAUzD,GAKhB,IAAIe,GACAhC,OAAQ,wCAAwC0D,KAAMzC,IAO1D,OAJKe,EAAIhC,QAAoD,mBAAnCQ,KAAKmD,iBAAiBe,WAC5C1C,EAAI4B,OAASpD,KAAKmD,iBAAiBe,SAAUzD,IAG1Ce,GAGX2C,UAAW,SAAU1D,GAEjB,IAAIe,GACAhC,OAAQ,wBAAwB0D,KAAMzC,IAO1C,OAJKe,EAAIhC,QAAqD,mBAApCQ,KAAKmD,iBAAiBgB,YAC5C3C,EAAI4B,OAASpD,KAAKmD,iBAAiBgB,UAAW1D,IAG3Ce,IAKFqB,6BAETuB,SAAU,SAAUC,GAChB,IACIC,EADSD,EAAKrD,QAAQuD,QAAQ,QACRlF,cAAc,UAAYgF,EAAKrD,QAAQxE,KAAO,mBACpEgF,GAAQhC,OAAQ6E,EAAKrD,QAAQwD,SAMjC,OAJqB,OAAjBF,IACA9C,EAAMxB,KAAKyE,QAASC,UAAWJ,EAAaK,aAAa,eAAgB3D,QAASsD,KAG/E9C,GAGXiD,OAAQ,SAAUJ,GACd,IACI,IAAIK,EAAYE,KAAKC,MAAMR,EAAKK,WAC5B1D,EAAUqD,EAAKrD,QAEf8D,EADS9D,EAAQuD,QAAQ,QACAQ,iBAAiB,UAAY/D,EAAQxE,KAAO,cAAcsD,OACnFkF,EAAUF,GAAmBJ,EAAU,GACvCO,EAAUH,GAAmBJ,EAAU,GACvClD,GACIhC,OAAQwF,GAAWC,GAW3B,OARKzD,EAAIhC,SAELgC,EAAI4B,QAAWqB,WACVO,IAAWxD,EAAI4B,OAAO8B,cACtBD,IAAWzD,EAAI4B,OAAO+B,eAIxB3D,EACT,MAAMtD,GACJ,MAAM,IAAIkH,MAAM,mDAIxBC,QAAS,SAAUhB,GACf,IAAIrD,EAAUqD,EAAKrD,QAEfsE,EADStE,EAAQuD,QAAQ,QACJlF,cAAe,UAAY2B,EAAQ2D,aAAa,iBAAmB,MACxFnD,GACIhC,OAAQwB,EAAQ9D,QAAUoI,EAAYpI,OAQ9C,OALKsE,EAAIhC,SAELgC,EAAI4B,QAAWiC,aAGZ7D,GAGX+D,YAAa,SAAUlB,GACnB,IAAImB,EAAcnB,EAAKrD,QAAQ9D,MAAM4C,OACjCyF,EAAgC,EAAjBlB,EAAKK,UACpBlD,GACIhC,OAAQgG,IAAgBD,GAWhC,OARK/D,EAAIhC,SAELgC,EAAI4B,QAAWmC,gBACXC,EAAcD,EAAe/D,EAAI4B,OAAOqC,aACrCjE,EAAI4B,OAAOsC,cAIflE,GAGXmE,KAAM,SAAUtB,GACZ,IAAIrD,EAAUqD,EAAKrD,QACf4E,EAAY5E,EAAQ6E,OAAS,IAAI5C,OAAOjC,EAAQ6E,OAAOvD,QAAS,IAAK,aAAgB,KAErFd,GAAQhC,WAkBZ,OAnBgBa,MAAMyF,KAAK9E,EAAQ+E,OAGzBpH,QAAQ,SAAUgH,GACxB,IAAIK,EAAoD,EAAhC3B,EAAK4B,aAAaC,aAAoBP,EAAKQ,KAAK,KAAK,KAAQ9B,EAAK4B,aAAaC,YACnGE,EAAmC,OAAbR,GAAoBA,EAAS1C,KAAKyC,EAAKU,OAE7DL,GAAsBI,IACtB5E,EAAIhC,eAAS,IACFgC,EAAI4B,SACX5B,EAAI4B,WAER5B,EAAI4B,OAAOuC,QACPK,IAAqBxE,EAAI4B,OAAO8C,gBAC/BE,IAAsB5E,EAAI4B,OAAOkD,wBAKvC9E,GAGX1B,OAAQ,SAAUuE,GACd,IACI,IAAIkC,EAASlC,EAAKrD,QAAQ9D,MAAM4C,OAC5B4E,EAAYE,KAAKC,MAAMR,EAAKK,WAC5B8B,EAAgBD,GAAU7B,EAAU,GACpC+B,EAAgBF,GAAU7B,EAAU,GACpClD,GAAQhC,OAAQgH,GAAiBC,GAUrC,OARKjF,EAAIhC,SAELgC,EAAI4B,QAAWsD,iBACVF,IAAiBhF,EAAI4B,OAAOqC,cAC5BgB,IAAiBjF,EAAI4B,OAAOsC,eAI9BlE,EACT,MAAMtD,GACJ,MAAM,IAAIkH,MAAM,mDAIxBuB,IAAK,SAAUtC,GACX,IAAIrD,EAAUqD,EAAKrD,QACf4F,EAAU5F,EAAQC,QAAQ,kBAAoBD,EAAQC,QAAQ,0BAA4BD,EAAQC,QAAQ,iCAC1G/D,EAAQmH,EAAKrD,QAAQ9D,MACrB2J,EAASxC,EAAKK,UAElB,GAAIkC,EAAQ,CAER,IAAIlG,KAAYqC,EAAAvC,cAActD,GAU9BA,GANIA,EAF6B,IAA7BA,EAAMyD,QAAQD,GAENxD,EAAMwB,MAAOgC,GAAYoG,UAGzB5J,EAAMwB,MAAOgC,IAGX0B,KAAK,IACnByE,EAASA,EAAOnI,MAAM,KAAK0D,KAAK,IAOpC,IAAIZ,GACIhC,QAJRtC,GAAgB,KAChB2J,GAAkB,IAWlB,OALKrF,EAAIhC,SAELgC,EAAI4B,QAAWuD,SAGZnF,GAGXkE,UAAW,SAAUrB,GACjB,IAAM7C,GACFhC,OAAQ6E,EAAKrD,QAAQ9D,MAAM4C,QAA4B,EAAjBuE,EAAKK,WAQ/C,OALKlD,EAAIhC,SAELgC,EAAI4B,QAAWsC,eAGZlE,GAGXuF,IAAK,SAAU1C,GACX,IAAIrD,EAAUqD,EAAKrD,QACf4F,EAAU5F,EAAQC,QAAQ,kBAAoBD,EAAQC,QAAQ,0BAA4BD,EAAQC,QAAQ,iCAC1G/D,EAAQmH,EAAKrD,QAAQ9D,MACrB8J,EAAS3C,EAAKK,UAElB,GAAIkC,EAAQ,CAER,IAAIlG,KAAYqC,EAAAvC,cAActD,GAU9BA,GANIA,EAF6B,IAA7BA,EAAMyD,QAAQD,GAENxD,EAAMwB,MAAOgC,GAAYoG,UAGzB5J,EAAMwB,MAAOgC,IAGX0B,KAAK,IACnB4E,EAASA,EAAOtI,MAAM,KAAK0D,KAAK,IAOpC,IAAIZ,GACIhC,QAHRwH,GAAkB,KADlB9J,GAAgB,IAYhB,OALKsE,EAAIhC,SAELgC,EAAI4B,QAAW2D,SAGZvF,GAGXiE,UAAW,SAAUpB,GACjB,IAAM7C,GACFhC,OAAQ6E,EAAKrD,QAAQ9D,MAAM4C,QAA4B,EAAjBuE,EAAKK,WAQ/C,OALKlD,EAAIhC,SAELgC,EAAI4B,QAAWqC,eAGZjE,GAGXyF,QAAS,SAAU5C,GACf,IAAIrD,EAAUqD,EAAKrD,QACfkG,EAAelG,EAAQiG,QAEvBzF,GACIhC,OAFS,IAAIyD,OAAQiE,GAEFhE,KAAMlC,EAAQ9D,QAQzC,OALKsE,EAAIhC,SAELgC,EAAI4B,QAAW6D,aAGZzF,GAGX2F,MAAO,SAAU9C,GACb,IAAIrD,EAAUqD,EAAKrD,QACfoG,EAAepG,EAAQuD,QAAQ,QAAQlF,cAAe,UAAW2B,EAAQxE,KAAM,cAInF,OAFYgD,OADmB,OAAjB4H,GAA4D,EAAnCA,EAAalK,MAAMmK,OAAOvH,SAMrEwH,aAAc,SAAUjD,GACpB,IAAIrD,EAAUqD,EAAKrD,QACfhC,EAASgC,EAAQuD,QAAQ,QACzBgD,EAA6C,EAA9BvG,EAAQ9D,MAAMmK,OAAOvH,OACpC0H,EAAYxI,EAAOK,cAAe2B,EAAQ2D,aAAa,uBAEvDnD,GAAQhC,OAAsB,OADlBR,EAAOK,cAAe,UAAWmI,EAAUhL,KAAM,eAWjE,OARIgL,EAAUhD,SAAWgD,EAAUC,WAC/BjG,EAAIhC,OAAS+H,GAGZ/F,EAAIhC,SACLgC,EAAI4B,QAAWkE,kBAGZ9F,qFCjfCkG,aAAT,SAAuBC,GAAiC,IAAtBC,EAAsB,EAAA/H,UAAAC,iBAAAD,UAAA,GAAAA,UAAA,MAGrDmB,EAAgC,iBAAd2G,EADX3H,KACyChB,OAAOK,cAAcsI,GAAaA,EAEpFnG,KAAMuB,EAAA7C,iBAAiBwC,2BAE3B,OAAKK,EAAA1E,WAAU2C,GAAY,OAAOQ,EAElC,IAAIvB,KAAoB8C,EAAA7C,iBAPXF,KAOkCC,QAAQgG,aAAc2B,GACjEL,EAAkD,EAA9BvG,EAAQ9D,MAAMmK,OAAOvH,OACzC+H,EAAoB7G,EAAQyG,SAC5BK,EAAoB9G,EAAQC,QAAQ,wBACpC8G,EAAoB/G,EAAQC,QAAQ,6BAkBxC,OAfM4G,IAAeE,IAAuBD,GACvCC,IAAuBR,GACvBO,IAAcD,EAGfrG,EAAIhC,UAIJgC,EAAMwG,UAAQ5L,KAvBL4D,KAuBiBgB,EAASf,GAIvCuB,EAAIR,QAAUA,EAEPQ,GAlCX,IAAAuB,EAAAlH,EAAA,GACAoM,EAAApM,EAAA,cAAAqC,EAAAf,EAAAJ,GAAA,iBAAAW,EAAA,oBAAAA,EAAAQ,EAAAf,GAAA,QAAAJ,EAAA,EAAAA,EAAAI,EAAA2C,OAAA/C,IAAA,KAAAW,EAAAP,EAAAJ,GAAAW,EAAAb,WAAAa,EAAAb,aAAA,EAAAa,EAAAwK,cAAA,YAAAxK,MAAAyK,UAAA,GAAAxL,OAAAC,eAAAsB,EAAAR,EAAAF,IAAAE,IAAA,gBAAAQ,EAAAf,EAAAJ,GAAA,OAAAI,GAAAO,EAAAQ,EAAAJ,UAAAX,GAAAJ,GAAAW,EAAAQ,EAAAnB,GAAAmB,GAAA,GCCA6E,EAAAlH,EAAA,GACAuM,EAAAvM,EAAA,GAEAwM,EAAAxM,EAAA,GACAyM,EAAAzM,EAAA,GACA0M,EAAA1M,EAAA,GAGA2M,EAAA3M,EAAA,GACA4M,EAAA5M,EAAA,IACA6M,EAAA7M,EAAA,IACA8M,EAAA9M,EAAA,IACA+M,EAAA/M,EAAA,IACAgN,EAAAhN,EAAA,IACAiN,EAAAjN,EAAA,IAIMkN,aAEF,SAAAA,EAAa/J,EAAQgK,oCAAYD,GAAZC,0DAAYhJ,MAC7BiJ,gBAAc7M,KAAK4D,KAAMhB,EAAQgK,+CAIjCE,UAAQ9M,KAAK4D,0CAGJmJ,GACT,OAAOC,cAAYhN,KAAK4D,KAAMmJ,kCAI9B,OAAOE,OAAKjN,KAAK4D,qCAGbgJ,EAAYM,GAChBC,SAAOnN,KAAK4D,KAAMgJ,EAAYM,yCAGnB3B,EAAW1B,GACtB,OAAOuD,gBAAcpN,KAAK4D,KAAM2H,EAAW1B,wCAGjCA,GACV,OAAOwD,eAAarN,KAAK4D,KAAMiG,iDAGPyD,GACxB1J,KAAKlC,UAAUqF,oBAAmBJ,EAAA7C,iBAAiBF,KAAKlC,UAAUqF,iBAAkBuG,8CAG7DC,GACvB3J,KAAKlC,UAAUgF,mBAAkBC,EAAA7C,iBAAiBF,KAAKlC,UAAUgF,gBAAiB6G,sCAGnEX,GACfhJ,KAAKlC,UAAUmC,WAAU8C,EAAA7C,iBAAiBF,KAAKlC,UAAUmC,QAAS+I,SAvCpED;gKA4CNA,EAAKjL,UAAU8L,iBACfb,EAAKjL,UAAUmC,QAAUA,UACzB8I,EAAKjL,UAAUqF,iBAAmBA,mBAClC4F,EAAKjL,UAAUgF,gBAAkBA,kBACjCiG,EAAKjL,UAAU+L,QAlDC,QAoDhBC,gCAA8B1N,KAAK2M,EAAKjL,WAEnCiM,OAAOhB,OAAQgB,OAAOhB,KAAOA,GAC7BgB,OAAOC,SAAWD,OAAOC,OAASjB,yHCzEvC,IAAAhG,EAAAlH,EAAA,GACAoO,EAAApO,EAAA,GAEMqO,GACFjE,cACIkE,aAAc,SAA+BC,EAAaxK,GAEtD,IAAIG,EAAOC,KACPC,EAAUL,EAAYqG,aAE1BmE,EAAYzL,QAAQ,SAAU6C,GAC1B,IAAIR,EAAUQ,EAAIR,QACdqJ,EAAcrJ,EAAQuD,QAAQ,0BAC9BuD,EAAY9G,EAAQC,QAAQ,wBAC5BuG,EAAYzH,EAAKf,OAAOK,cAAe2B,EAAQ2D,aAAa,uBAIhE,GAFA2F,kBAAgBlO,KAAM2D,EAAMiB,GAER,OAAhBqJ,IAAyBpK,EAAQsK,eACjC,GAAI/I,EAAIhC,QAEJ,IAAKsI,GAAcA,GAAaN,EAAUhD,QAAU,CAEhD,IAAIgG,EAAevK,EAAQxB,WAAWgM,MAAQ,IAAMxK,EAAQxB,WAAWiM,WAAa,IAAMzK,EAAQxB,WAAWkM,aAC7G5H,EAAAnB,aAAayI,EAAaG,MAC1BzH,EAAAxE,UAAU8L,EAAapK,EAAQxB,WAAWmM,YAG3C,CAGH,IAAIC,EAAkB5K,EAAQxB,WAAWkM,UAGrCG,EAAW9J,EAAQC,QAAQ,iBAC3B6D,EAAmBgG,EAAWT,EAAYtF,iBAAiB,UAAY/D,EAAQxE,KAAO,cAAcsD,OAAS,IAE3GgL,GAAatJ,EAAI4B,QAAU5B,EAAI4B,OAAO2H,OAAYD,GAAgC,IAApBhG,KAChE+F,EAAkB5K,EAAQxB,WAAWiM,YAGzC,IAAIF,EAAevK,EAAQxB,WAAWgM,MAAQ,IAAMI,EAChDG,EAAqB/K,EAAQxB,WAAWiM,WAAa,IAAMzK,EAAQxB,WAAWkM,aAClF5H,EAAAnB,aAAayI,EAAapK,EAAQxB,WAAWmM,MAAQ,IAAMI,MAC3DjI,EAAAxE,UAAU8L,EAAaG,SAUlCV,gCAAgC,WACzC,IAAQ/J,EAAOC,KACPiL,GACIhF,cAAe,mBAAoB,gBACnCiF,aAAc,aAAc,mBAAoB,gBAAiB,oBAJ1BC,EAAA,SAO3CC,GACSH,EAAUG,GAEhBzM,QAAQ,SAAS0M,GACpB,IAAIC,EAAcvL,EAAKE,QAAQmL,GAAKC,GAChCE,KAEAlL,MAAMC,QAAQgL,GACdC,EAAO7J,OAAO4J,GACPA,GACPC,EAAOnL,KAAKkL,YAGLpB,EAA0BkB,IAA0E,mBAA3ClB,EAA0BkB,GAAKC,IAC/FE,EAAOC,QAAQtB,EAA0BkB,GAAKC,IAGlDtL,EAAKE,QAAQmL,GAAKC,GAAUE,KAjBpC,IAAI,IAAIH,KAAOH,EAAUE,EAAjBC,qFC3DId,gBAAT,SAA0B1H,GAAiE,IAAzDnE,EAAyD,EAAAoB,UAAAC,iBAAAD,UAAA,GAAAA,UAAA,GAA5CG,KAAKC,QAAQgG,aAAaxH,WAAWgN,OAEnF7I,KAAUG,EAAA7B,YAAW0B,GAAUvC,MAAMyF,KAAMlD,IAAYA,IAEpDjE,QAAQ,SAASqC,GACpB,GAAqB,aAAjBA,EAAQqF,MAAwC,UAAjBrF,EAAQqF,KAAkB,CACzD,IAAIgE,EAAcrJ,EAAQuD,QAAQ,2BAA6BvD,EAE3DA,EAAQ9D,SAER6F,EAAAxE,UAAU8L,EAAa5L,MAIvBsE,EAAAnB,aAAayI,EAAa5L,OAhB1C,IAAAsE,EAAAlH,EAAA,aAAAqC,EAAAf,EAAAJ,GAAA,aAAAJ,OAAAC,eAAAO,EAAA,cAAAD,OAAA,IAAAC,EAAA8C,aAAA,ECCA,IAAAyL,EAAA7P,EAAA,GAEaoE,WAETgG,cACIxH,YACIgN,MAAoB,WACpBhB,MAAoB,YACpBC,WAAoB,kBACpBC,UAAoB,iBACpBC,MAAoB,YAExBe,kBACAC,oBACAC,oBACA3F,YAAwB,GACxB4F,iBAAwB,KACxB3B,aAAwB,KACxB4B,mBAAwB,qCACxBxB,kBACAyB,wBACAC,iBAAwB,gBAG5Bf,aACIgB,YAAwBA,cACxBC,cACAC,WAAwB,KACxBhD,YAAwB,KACxBiD,gBACAC,iBAAwB,KACxBC,cAAwB,KACxBC,gBAAwB,iBAAAtO,EAAAf,EAAAJ,GAAA,aAAAJ,OAAAC,eAAAO,EAAA,cAAAD,OAAA,ICjCrBgP,eACPO,SACAC,SACAC,YAAoB,mDACpBC,SACoBC,mBAAoB,kBAExCC,OAAoB,OACpBC,QAAoB,EACpB9I,IAAoB+I,SAASC,qFCTpB9J,oBAETH,IAAK,SAAUvC,GAEX,IAAMe,KACA0L,EAAYzM,EAAOX,OAMzB,OAJgB,EAAZoN,IAAiB1L,EAAIkE,cACT,EAAZwH,GAAiBA,EAAY,IAAK1L,EAAIiE,cACtC,SAASvC,KAAKzC,KAAWe,EAAI2L,iBAE1B3L,GAIXgC,MAAO,SAAW/C,GACd,IAAMe,KAEN,IAA6B,IAAzBf,EAAOE,QAAQ,KAGfa,EAAI4L,qBAED,CAEH,IAAIC,EAAa5M,EAAO/B,MAAM,KAQ9B,GAP6B,IAAzB2O,EAAW,GAAGvN,SAGd0B,EAAI8L,oBAIqB,IAAzBD,EAAW,GAAGvN,OAGd0B,EAAI+L,iBACJ/L,EAAIgM,uBACJhM,EAAIiM,yBAED,IAAoC,IAAhCJ,EAAW,GAAG1M,QAAQ,KAG7Ba,EAAIgM,uBACJhM,EAAIiM,wBAED,CAGH,IACIC,EADcL,EAAW,GAAG3O,MAAM,KACV,GAAGoB,OACb,IAAd4N,EACAlM,EAAIiM,oBACGC,EAAY,IACnBlM,EAAImM,wBAMhB,OAAOnM,GAIXuC,SAAU,SAAWtD,GAEjB,IAAMe,KAQN,OANIf,EAAOX,OAAS,IAAK0B,EAAIiE,cACxB,KAAKvC,KAAKzC,KAAWe,EAAIoM,kBACzB,QAAQ1K,KAAKzC,KAAWe,EAAIqM,qBAC5B,QAAQ3K,KAAKzC,KAAWe,EAAIsM,qBAC7B,eAAe5K,KAAKzC,KAAWe,EAAI2L,iBAEhC3L,GAIX0C,SAAU,SAAWzD,GAEjB,IAAMe,KACA0L,EAAYzM,EAAOX,OAOzB,OALIoN,EAAY,IAAK1L,EAAIiE,cACT,GAAZyH,IAAkB1L,EAAIkE,cACtB,cAAcxC,KAAKzC,KAAWe,EAAI2L,iBACjC,QAAQjK,KAAKzC,KAAWe,EAAIuM,qBAE1BvM,GAIX2C,UAAW,SAAW1D,GAElB,IAAMe,KACF0L,EAAYzM,EAAOX,OACnBkO,EAAYvN,EAAOE,QAAQ,MAQ/B,OALIqN,EAAY,IACRd,GAHyB,IAAdc,EAAkB,GAAK,IAGPxM,EAAIiE,aAC5BjE,EAAIkE,cAGRlE,qFCnGCyH,cAAT,SAAwBjK,GAAyB,IAAjBgK,EAAiB,EAAAnJ,UAAAC,iBAAAD,UAAA,GAAAA,UAAA,MAEhDE,EAAOC,KACPiO,EAAQpO,UAAUC,OAClBoO,KAAgBnL,EAAAhE,aAAYC,GAEhC,GAAc,IAAViP,GAAwB,EAARA,IAAcjP,EAC9B,MAAM,IAAIoG,MAAM,gDAEpB,MAAIrC,EAAA7B,YAAWlC,GACX,MAAM,IAAIoG,MAAM,6FAEpB,IAAK8I,EAAc1O,OACf,MAAM,IAAI4F,MAAM,sEAGpBrF,EAAKf,OAASkP,EAAc1P,SAC5BuB,EAAKf,OAAOmP,OAASpO,GAChBE,WAAU8C,EAAA7C,iBAAiB6I,KAAKjL,UAAUmC,QAAS+I,GACxDjJ,EAAKqO,mBACDC,UAAoBC,cAAYD,UAChCE,eAAoBD,cAAYC,eAChCC,kBAAoBF,cAAYE,kBAChCC,aAAoBH,cAAYG,aAAahR,KAAKsC,GAClDwJ,OAAoB+E,cAAY/E,OAAO9L,KAAKsC,GAC5C2O,WAAoBJ,cAAYI,WAAWjR,KAAKsC,IAEpDpD,OAAOgS,OAAO5O,EAAKqO,mBAEnBQ,cAAYxS,KAAM2D,IAlCtB,IAAAgD,EAAAlH,EAAA,GAEAgT,EAAAhT,EAAA,IACAiT,EAAAjT,EAAA,cAAAqC,EAAAf,EAAAJ,GAAA,aAAAJ,OAAAC,eAAAO,EAAA,cAAAD,OAAA,IAAAC,EAAAmR,iBAAA,ECHA,IAAAvL,EAAAlH,EAAA,GAEayS,eAETD,UAAW,SAAUU,GAEjB,IAAM/N,EAAU+N,EAAaC,QAAUD,EAEvC,GAAI/N,EAAQC,QAAS,qBACjB,IACI,IAAIgO,EAAejO,EAAQuD,QAAQ,0BAA0BlF,cAAc,sBAE3E,GAAqB,OAAjB4P,EAAuB,CACvB,IAAIC,EAAYlO,EAAQ9D,MAAM4C,OAC9BmP,EAAaE,YAAcD,GAEjC,MAAOzE,MAKjB8D,eAAgB,SAAUjF,GAEtB,IAAMtI,EAAUsI,EAAM0F,OAEtB,GAAIhO,EAAQC,QAAQ,wBAAyB,CACzC,IAAImO,EAAapO,EAAQ9D,MAGzB,GAFsB,aAAagG,KAAKkM,GAEnB,CACjB9F,EAAM+F,2BACN,IAAIC,EAAgBF,EAAW9M,QAAQ,cAAe,IACtDtB,EAAQ9D,MAAQoS,KAM5Bd,kBAAmB,SAAUlF,GAEzB,IAAMtI,EAAUsI,EAAM0F,OAEtB,GAAIhO,EAAQC,QAAS,eAAiB,CAClC,IAAMsO,EAAgC,EAApBvO,EAAQuO,UACtBC,EAAalG,EAAMmG,OAASnG,EAAMoG,QAGtC,GAAI1O,EAAQ9D,MAAM4C,QAAUyP,IAAkD,KAF3D,EAAG,GAAI,GAAI,GAAI,IAEmB5O,QAAQ6O,GACzD,WAMZf,aAAc,SAAUnF,GAEpB,IACMtI,EAAUsI,EAAM0F,OAClB/I,EAFSjG,KAEWC,QAAQgG,aAE5BjF,EAAQC,QAASgF,EAAa8F,sBAC9BzC,EAAMqG,iBACNlQ,kBAAgBrD,KANP4D,KAMmBiG,EAAa6F,iBAAkB9K,KAKnEuI,OAAQ,SAAUD,GACdtJ,KAAKuJ,UAAYD,IAGrBoF,WAAY,SAAUpF,GAElB,IAAMvJ,EAAOC,KACT4P,EAAYtG,EAAMjD,KAClBrF,EAAUsI,EAAM0F,OAEpB,GAAIhO,EAAQC,QAAS3C,wBAAwB,CACzC,IAAMuR,KAA+B9M,EAAAhC,uBAAsBC,GACvD8O,EAA2B,UAAjB9O,EAAQqF,KAClByB,EAAY9G,EAAQC,QAAQ,wBAC5B8O,EAAY/O,EAAQC,QAAQ,uBAC5BsG,EAA6C,EAA9BvG,EAAQ9D,MAAMmK,OAAOvH,OAGxC,GAAIgQ,GAAyB,WAAdF,EAAwB,CACnC,IAAII,EAAiBD,EAAY/O,EAAUjB,EAAKf,OAAOK,cAAc,UAAW2B,EAAQxE,KAAM,yBAC1FyT,EAAmC,OAAlBD,EAAyBjQ,EAAKf,OAAOK,cAAc,yBAA0B2Q,EAAcE,GAAI,MAAQ,KAExHH,EAEsB,OAAlBE,IACIjP,EAAQyG,WACRwI,EAAcxI,aAEd1H,EAAKE,QAAQgG,aAAa0F,gBAC1BsE,EAAcE,SAIG,OAAlBH,GAEe,OAAlBC,IACAA,EAAcxI,YACdwI,EAAc/S,MAAQ,IAOlC,GAAI4K,GACIP,EAAc,CAEd,IAAIC,EAAYzH,EAAKf,OAAOK,cAAe2B,EAAQ2D,aAAa,uBAChE6C,EAAUhD,WAENgD,EAAUC,WACVzG,EAAQyG,cAMfoI,GAA8C,WAAdD,IAC/BC,GAA8C,WAAdD,IAGlC7P,EAAKyJ,cAAexI,uFChIpB4N,YAAT,WAEH,IAAM7O,EAAOC,KACPhB,EAASe,EAAKf,OAEpB,IAAKA,EAAOiC,QAAQ,gBAAmB,OAAO,KAE9C,IAAIgF,EAAelG,EAAKE,QAAQgG,aAC5BiF,EAAcnL,EAAKE,QAAQiL,YAG3BkF,EAAkBpR,EAAO+F,iBAAiB,sBAmB9C,GAlB6B,EAAzBqL,EAAgBtQ,QAChBO,MAAMyF,KAAMsK,GAAkBzR,QAAQ,SAAUH,GAC5C,IACI,IAAI6L,EAAc7L,EAAQ+F,QAAQ,0BAC9BvD,EAAUqJ,EAAYhL,cAAc,qBAExC,GAAgB,OAAZ2B,GAAoBA,EAAQC,QAAQ,eAAgB,CAEpD,IAAIyE,EAAY1E,EAAQ2D,aAAa,aACrC0F,EAAYhL,cAAc,yBAAyB8P,YAAczJ,EAIrE3F,EAAKqO,kBAAkBC,UAAUjS,KAAM,KAAM4E,GAC/C,MAAOyJ,OAIc,EAA3BxE,EAAaC,YAAiB,CAC9B,IAAImK,EAAmBrR,EAAO+F,iBAAiB,wBACjB,EAA1BsL,EAAiBvQ,QACjBO,MAAMyF,KAAMuK,GAAmB1R,QAAQ,SAAUH,GAC7C,IAGoB,OAFFA,EAAQ+F,QAAQ,0BAA0BlF,cAAc,mBAIlEb,EAAQ2Q,YAAclJ,EAAaC,aAEzC,MAAOuE,OAOjBxE,EAAa4F,mBAGT5F,EAAa+F,uBAIbhN,EAAOsR,iBAAiB,WAAYvQ,EAAKqO,kBAAkBI,sBAI3DxP,EAAOsR,iBAAiB,QAASvQ,EAAKqO,kBAAkBG,oBAIxDtI,EAAa8F,oBAAsB/M,EAAO+F,iBAAkBkB,EAAa8F,oBAAqBjM,QAE9Fd,EAAOsR,iBAAiB,QAASvQ,EAAKqO,kBAAkBK,iBAGF,EAAtDzP,EAAO+F,iBAAiB,qBAAqBjF,QAE7Cd,EAAOsR,iBAAiB,QAASvQ,EAAKqO,kBAAkBC,cAI5DpI,EAAagG,iBAAiBvN,MAAM,KAAKC,QAAQ,SAAUiR,GACvD,IAAIW,EAA8B,SAAdX,EACpB5Q,EAAOsR,iBAAiBV,EAAW7P,EAAKqO,kBAAkBM,WAAY6B,MAM1ErF,EAAYmB,eAEZrN,EAAOsR,iBAAiB,SAAUvQ,EAAKqO,kBAAkB7E,QAErD2B,EAAYiB,aACRnN,EAAO2F,aAAa,aAGpBuG,EAAYgB,YAAYS,YAAc3N,EAAO2F,aAAa,WAG1DuG,EAAYgB,YAAYU,QAAQ,gBAAkB5N,EAAO2F,aAAa,YAItE3F,EAAO2F,aAAa,YACpBuG,EAAYgB,YAAYY,OAAS9N,EAAO2F,aAAa,UAAUlC,eAG/DzD,EAAO2F,aAAa,YACpBuG,EAAYgB,YAAYjI,IAAMjF,EAAO2F,aAAa,wBAAAzG,EAAAf,EAAAJ,GAAA,aAAAJ,OAAAC,eAAAO,EAAA,cAAAD,OAAA,IAAAC,ECtGlD+L,QAAT,WAEH,IAAMnJ,EAAOC,KACPhB,EAASe,EAAKf,OACdwR,EAA0BzQ,EAAKE,QAAQgG,aAAagG,iBAEA,EAAtDjN,EAAO+F,iBAAiB,qBAAqBjF,QAC7Cd,EAAOyR,oBAAoB,QAAS1Q,EAAKqO,kBAAkBC,cAG3DtO,EAAKE,QAAQgG,aAAa+F,uBAC1BhN,EAAOyR,oBAAoB,WAAY1Q,EAAKqO,kBAAkBI,sBAC9DxP,EAAOyR,oBAAoB,QAAS1Q,EAAKqO,kBAAkBG,oBAG3DxO,EAAKE,QAAQgG,aAAa8F,oBAC1B/M,EAAOyR,oBAAoB,QAAS1Q,EAAKqO,kBAAkBK,iBAG3D1O,EAAKE,QAAQiL,YAAYmB,cACzBrN,EAAOyR,oBAAoB,SAAU1Q,EAAKqO,kBAAkB7E,QAGhEiH,EAAwB9R,MAAM,KAAKC,QAAQ,SAAUiR,GACjD,IAAIW,EAA8B,SAAdX,EACpB5Q,EAAOyR,oBAAoBb,EAAW7P,EAAKqO,kBAAkBM,WAAY6B,YAGtExQ,EAAKf,OAAOmP,yFC5BP/E,YAAT,WAAuE,IAAjDD,EAAiD,EAAAtJ,UAAAC,iBAAAD,UAAA,GAAAA,UAAA,GAAtCG,KAAKC,QAAQiL,YAAY9B,YAEzDsH,KAEA1R,EADOgB,KACOhB,OACd2R,EAAe3R,EAAO+F,iBAAiB,2BAEvC6L,EAAiBvQ,MAAMyF,KAAK6K,GAAcE,OAAO,SAAAC,GAAA,OAAQA,EAAK7P,QAD3C,gHAqDvB,MAlDwB,mBAAbkI,EAEPuH,EAAWvH,EAAS/M,KARb4D,KAQyB4Q,GAIhCA,EAAejS,QAAQ,SAAUqC,GAC7B,IAAI+P,EAA8B,aAAjB/P,EAAQqF,KACrByJ,EAA2B,UAAjB9O,EAAQqF,KAClB2K,EAAWhQ,EAAQC,QAAQ,UAC3BzE,EAAOwE,EAAQxE,KACfU,EAAQ8D,EAAQ9D,MAEpB,GAAI6T,EAAa,CAEb7T,EAAQ8D,EAAQwD,QAChB,IAAIyM,EAAa5Q,MAAMyF,KAAM9G,EAAO+F,iBAAiB,UAAWvI,EAAM,OACtE,GAAwB,EAApByU,EAAWnR,OAEX5C,KACmB+T,EAAWJ,OAAO,SAAAK,GAAA,OAASA,EAAM1M,UACvC7F,QAAQ,SAAAqC,GACjB9D,EAAMkD,KAAMY,EAAQ9D,cAKzB,GAAI4S,EAAS,CAEhB,IAAIqB,EAAenS,EAAOK,cAAc,UAAW7C,EAAM,cACzDU,EAA0B,OAAjBiU,EAAwB,KAAOA,EAAajU,WAElD,GAAI8T,EAAU,CAEjB,IAAII,EAAe/Q,MAAMyF,KAAM9E,EAAQf,SAAU4Q,OAAO,SAAAQ,GAAA,OAAUA,EAAOC,WAC/C,EAAtBF,EAAatR,SAEb5C,KACAkU,EAAazS,QAAQ,SAAAqC,GACjB9D,EAAMkD,KAAMY,EAAQ9D,UAMhCwT,EAAUlU,GAASU,IAKpBwT,gGC3DX,IAAA3N,EAAAlH,EAAA,GAEawN,OAAO,WAEhB,IAAMtJ,EAAOC,KACPhB,EAASe,EAAKf,OACduS,EAAavS,EAAO+F,iBAAkBzG,wBAExCkT,EAAmB,GACnBC,EAAmB,GA6CvB,OA3CApR,MAAMyF,KAAMyL,GAAa5S,QAAQ,SAAUqC,GACvC,IAAQxE,EAAOwE,EAAQxE,KACf6J,EAAOrF,EAAQqF,KAGvB,GAAK7J,IAASgV,GAAoBnL,IAASoL,EAAqB,SAEhE,IAAMC,EAAsC,aAAjB1Q,EAAQqF,MAAwC,UAAjBrF,EAAQqF,KAC5DwJ,KAA+B9M,EAAAhC,uBAAsBC,GACrDoG,EAAepI,EAAOK,cAAc,UAAY2B,EAAQxE,KAAO,cAC/DsL,EAAY9G,EAAQC,QAAQ,wBAC5BuG,EAAaM,EAAY9I,EAAOK,cAAc2B,EAAQ2D,aAAa,uBAAyB,KAQlG,GANKmD,IACD0J,EAAmBhV,EACnBiV,EAAmBpL,IAKjBqL,GAAqB1Q,EAAQ9D,OAC9BwU,GAAsC,OAAjBtK,GACrBU,GAAaN,EAAUhD,QAC3B,CAEG,IAAImN,EAAiB,SAEjBD,EACA1Q,EAAUoG,EACFyI,IACR8B,EAAiB5R,EAAKE,QAAQgG,aAAagG,iBAAiBvN,MAAM,KAAKmS,OAAO,SAASe,GACnF,MAAkB,WAAXA,IACR,IAAM,SAGb,IAAIC,EAAW,IAAIC,MAAMH,GAAiBI,QAA+B,SAAnBJ,EAA4BK,gBAClFhR,EAAQiR,cAAcJ,MAK9B9R,EAAK6J,iBAEE7J,oFClDKwJ,OAAT,WAA6C,IAA5BtJ,EAA4B,EAAAJ,UAAAC,iBAAAD,UAAA,GAAAA,UAAA,MAAdyJ,EAAc,EAAAzJ,UAAAC,iBAAAD,UAAA,GAAAA,UAAA,GAAN,KAEpCE,EAAOC,KACPhB,EAASe,EAAKf,OACdkT,EAAsB,WAAwB,IAAtBC,IAAsB,EAAAtS,UAAAC,iBAAAD,UAAA,KAAAA,UAAA,GACtCuS,GAASD,IAAaC,EAAMC,aAC5B/I,GAASA,EAAMqG,kBAG7B1P,EAAQgG,gBAAelD,EAAA7C,iBAAkBH,EAAKE,QAAQgG,aAAchG,EAAQgG,cAC5EhG,EAAQiL,eAAcnI,EAAA7C,iBAAkBH,EAAKE,QAAQiL,YAAajL,EAAQiL,aAE1E,IACMoH,EADmBrS,EAAQgG,aAAa4F,iBACH9L,EAAK0J,aAAcxJ,EAAQgG,eAAmBzG,WAEnF4S,EAAQpT,EAAOK,cAAc,mBAC7BkT,EAAatS,EAAQiL,YAAYiB,WAEnCqG,EAAeD,EAAaxS,EAAKqJ,cAAgB,KACjDqJ,KACAC,EAAgBzS,EAAQiL,YAAYkB,WAExC,GAA6B,mBAAlBsG,GAAgCrS,MAAMC,QAAQoS,GAAgB,CACrE,IAAIC,GACIC,kBAEJC,KAyBJ,GAvBIL,IACAG,EAAejC,SAAW8B,GAGD,mBAAlBE,EACPD,EAAoBrS,KAAMsS,GACnBrS,MAAMC,QAAQoS,KACrBD,EAAsBC,GAG1BD,EAAoB9T,QAAQ,SAAS4B,GACjC,IAAKsS,EAAkB,CACnB,IAAIC,EAAevS,EAAKnE,KAAM2D,EAAM4S,EAAgB1S,MAEhD8C,EAAA1B,eAAcyR,KACdN,EAAcM,EAAapC,UAAY8B,EACnCM,EAAaF,gBACbC,UAMZA,EAEA,OADAX,OAKR,IAAKI,EAAe9S,QAAW4S,GAASA,EAAMC,SAE1C,OADAH,OAQJ,GAJIE,IACAA,EAAMC,aAGNE,EAGAL,MACAa,WAAS3W,KAAK2D,EAAMyS,EAAavS,QAE9B,IAAKqJ,EAAO,CAGf,IAAI0J,EAAc,IAAIlB,MAAM,UAAWC,WAAiBC,gBACxDhT,EAAOiT,cAAce,KAhF7B,IAAAjQ,EAAAlH,EAAA,GAEAoX,EAAApX,EAAA,cAAAqC,EAAAf,EAAAJ,GAAA,aAAAJ,OAAAC,eAAAO,EAAA,cAAAD,OAAA,IAAAC,ECCgB4V,SAAT,SAAmBP,EAAavS,GAEnC,IAAIF,EAAOC,KACPhB,EAASe,EAAKf,OACdiH,EAAehG,EAAQgG,aACvBiF,EAAcjL,EAAQiL,YACtBkH,EAAQpT,EAAOK,cAAc,mBAC7B6T,SACAC,KAAapQ,EAAA7C,iBAAkBgL,EAAYgB,aAC3CkH,EAAyC,wBAA3BD,EAAWxG,YAI7B,GAFAwG,EAAW9O,KAAOmO,EAEdY,GAAenN,EAAa2F,iBAAkB,CAC9C,IAAIyH,EAAoB,IAAIC,SAE5B,IAAI,IAAI9V,KAAO2V,EAAW9O,KACtBgP,EAAkBE,OAAQ/V,EAAK2V,EAAW9O,KAAK7G,IAGnD6C,MAAMyF,KAAM9G,EAAO+F,iBAAiB,kBAAmBpG,QAAQ,SAAUuS,GACrE7Q,MAAMyF,KAAKoL,EAAMnL,OAAOpH,QAAQ,SAAUgH,EAAM6N,GAC5C,IAAIhX,EAAO0U,EAAM1U,KAAK,IAAKgX,EAAK,IAChCH,EAAkBE,OAAQ/W,EAAMmJ,EAAMA,EAAKnJ,UAInD2W,EAAW9O,KAAOgP,EAGtB,IAAII,EAAM,IAAIC,eACVC,KAkCAC,EAAU,SAAS1V,GACf,IAAI2V,EAAM3V,EAAE8Q,OACZ2E,GAAiBG,OAAQ,QAASC,KAAMF,EAAIC,OAAQE,QAASH,EAAII,YACjExU,kBAAgBrD,KAAM2D,EAAMmL,EAAYqB,cAAeoH,IAwB/D,GAbAF,EAAInD,iBAAiB,OAzBL,SAASpS,GACjB,IAvBsB2V,EAClBxP,EAsBAwP,EAAM3V,EAAE8Q,OAEZ,GAAmB,MAAf6E,EAAIC,OAAgB,CACpB,IAAII,GAzBJ7P,GADkBwP,EA0BeA,GAzBtBM,aACD,WACN,IAEI,OADUvP,KAAKC,MAAMR,GAEvB,MAAMnG,GACJ,UALE,IAQI,WACV,IAGI,OAFgC,OAApB2V,EAAIO,aACLC,IAAYC,WAAYC,gBAAgBlQ,EAAM,YAAcA,EAEzE,MAAMnG,GACJ,UANM,IAUoBmG,GAOlCsP,GAAiBG,OAAQ,UAAWC,KAAMF,EAAIC,OAAQzP,KAAM6P,GAC5DzU,kBAAgBrD,KAAM2D,EAAMmL,EAAYsB,gBAAiBmH,QAEzDC,EAAQ1V,QAkBpBuV,EAAInD,iBAAiB,QAAWsD,MAChCH,EAAInD,iBAAiB,UAXJ,SAASpS,GACdgV,GACAnJ,OAAOyK,aAActB,GAGzBd,EAAMC,YACN5S,kBAAgBrD,KAAM2D,EAAMmL,EAAYoB,iBAAkBqH,QAOxC,QAAtBR,EAAWrG,SACXqG,EAAWlP,MAAS,KAAKf,KAAKiQ,EAAWlP,KAAO,IAAM,QAAQlB,EAAAjB,iBAAiBqR,EAAW9O,WACtF8O,EAAWzG,QACXyG,EAAWlP,MAAS,KAAKf,KAAKiQ,EAAWlP,KAAO,IAAM,IAAM,UAAYwQ,MAAOC,YAIvFjB,EAAIkB,KAAKxB,EAAWrG,OAAQqG,EAAWlP,IAAKkP,EAAW1G,OAElD0G,EAAWyB,UACZ,IAAM,IAAI3Y,KAAKkX,EAAWyB,UACtBnB,EAAKxX,GAAMkX,EAAWyB,UAAW3Y,GAYzC,IAAK,IAAI4Y,KARJ1B,EAAW2B,UAAYrB,EAAIsB,kBAC5BtB,EAAIsB,iBAAkB5B,EAAW2B,UAGjC3B,EAAW9O,MAAmC,wBAA3B8O,EAAWxG,aAC9B8G,EAAIuB,iBAAiB,eAAgB7B,EAAWxG,aAGtCwG,EAAWvG,QACrB6G,EAAIuB,iBAAkBH,EAAG1B,EAAWvG,QAAQiI,IAG3CzB,IACDD,EAAW9O,KAAOO,KAAKqQ,UAAU9B,EAAW9O,OAGhDoP,EAAIyB,KAA6B,QAAtB/B,EAAWrG,OAAmB,KAAOqG,EAAW9O,MAEtD8O,EAAW1G,OAA8B,EAArB0G,EAAWpG,UAChCmG,EAAenJ,OAAOoL,WAAW,WAC7B1B,EAAI2B,SACLjC,EAAWpG,WA1HtB,IAAAhK,EAAAlH,EAAA,aAAAqC,EAAAf,EAAAJ,GAAA,aAAAJ,OAAAC,eAAAO,EAAA,cAAAD,OAAA,IAAAC,ECGgBqM,cAAT,SAAwB7B,GAAiC,IAAtBC,EAAsB,EAAA/H,UAAAC,iBAAAD,UAAA,GAAAA,UAAA,MAGtDmB,EAAgC,iBAAd2G,EADX3H,KACyChB,OAAOK,cAAcsI,GAAaA,EACpFnG,KAAMuB,EAAA7C,iBAAiBwC,2BAE3B,MAAIK,EAAA1E,WAAU2C,GAAU,CACpB,IAAIiF,KAAelD,EAAA7C,iBALVF,KAKgCC,QAAQgG,aAAc2B,GAC/DpG,EAAMkG,eAAatL,KANV4D,KAMsBgB,EAAS4G,GACxCnI,kBAAgBrD,KAPP4D,KAOmBiG,EAAakE,cAAe3I,IAAOyE,iBAGnE,OAAOzE,GAfX,IAAAuB,EAAAlH,EAAA,GACAwZ,EAAAxZ,EAAA,aAAAqC,EAAAf,EAAAJ,GAAA,aAAAJ,OAAAC,eAAAO,EAAA,cAAAD,OAAA,IAAAC,ECEgB6K,QAAT,SAAkBhH,GAA4B,IAAnBiF,EAAmB,EAAApG,UAAAC,iBAAAD,UAAA,GAAAA,UAAA,MAG3CyV,EAActU,EAAQC,QAAQ,qBAAoB8B,EAAAV,aAAarB,EAAQ2D,aAAa,iBAAoB3D,EAAQqF,KAChH+I,EAAapO,EAAQ9D,MACrBqK,EAA0C,EAA3B6H,EAAW/H,OAAOvH,OAEjCyV,EAAkBlV,MAAMyF,KAAK9E,EAAQwU,YAAYC,KAAK,SAASxT,EAAEyT,GAAI,OAAOzT,EAAEzF,KAAOkZ,EAAElZ,OAEzFmZ,KACAC,EAAwBrO,EACxB/F,GAAQhC,OAAQ+H,GAEpB,OAAKA,GAOLgO,EAAgB5W,QAAQ,SAASkX,GAE7B,IAAIC,KAAW/S,EAAAV,aAAawT,EAAKrZ,KAAK8F,QAAQ,QAAS,KACnDoC,EAAYmR,EAAK3Y,MACjB6Y,EAAiC,SAAbD,GAAuE,mBAAzCjT,4BAA0B6B,GAC5EsR,EAAkE,mBAAxCnT,4BAA0BiT,GAExD,GAAIC,GAAqBC,EAAkB,CAEvC,IAAIC,GACIH,SAAWC,EAAoBrR,EAAYoR,EAC3CpR,UAAWA,EACX1D,UACAiF,gBAGJ8P,GAAkC,iBAAbD,EAErBH,EAAgBnK,QAASyK,GAEzBN,EAAgBvV,KAAM6V,MAOlCN,EAAgBhX,QAAQ,SAASuX,GAC7B,IAAIC,EAAWtT,4BAA0BqT,EAAKJ,UAAWI,EAAMlV,GAC1DmV,EAAS3W,SACVgC,KAAMuB,EAAA7C,iBAAiBsB,EAAK2U,GAC5BP,QAKuC,mBAtDlC5V,KAsDG8C,gBAAgBwS,MAC5B9T,KAAMuB,EAAA7C,iBAAkBsB,EAvDfxB,KAuDyB8C,gBAAgBwS,GAAWlZ,KAvDpD4D,KAuD+DoP,EAAYpO,KAChFxB,OAASgC,EAAIhC,QAAUoW,EACtBpU,EAAIhC,kBACMgC,EAAI4B,SACX5B,EAAI4B,WAER5B,EAAI4B,OAAOgT,UAIZ5U,IArDHA,EAAI4B,QAAW2H,UACfvJ,EAAIhC,UACGgC,IAnBf,IAAAuB,EAAAlH,EAAA,GACAyM,EAAAzM,EAAA,aAAAqC,EAAAf,EAAAJ,GAAA,aAAAJ,OAAAC,eAAAO,EAAA,cAAAD,OAAA,IAAAC,ECEgBsM,aAAT,WAA6C,IAAtB7B,EAAsB,EAAA/H,UAAAC,iBAAAD,UAAA,GAAAA,UAAA,MAG1CoG,KAAelD,EAAA7C,iBADRF,KAC8BC,QAAQgG,aAAc2B,GAC3DpG,EAAM6U,cAAYja,KAFX4D,KAEuBiG,GAIpC,OAFAxG,kBAAgBrD,KAJH4D,KAIeiG,EAAakE,aAAc3I,EAAIoB,QAASqD,iBAE7DzE,GAXX,IAAAuB,EAAAlH,EAAA,GACAya,EAAAza,EAAA,cAAAqC,EAAAf,EAAAJ,GAAA,aAAAJ,OAAAC,eAAAO,EAAA,cAAAD,OAAA,IAAAC,ECEgBkZ,YAAT,WAA4C,IAAtBzO,EAAsB,EAAA/H,UAAAC,iBAAAD,UAAA,GAAAA,UAAA,MAEzCE,EAAOC,KACPhB,EAASe,EAAKf,OAEhBwC,KAAMuB,EAAA7C,iBAAiByC,0BAE3B,OAAKI,EAAA1E,WAAUW,KAAYA,EAAOiC,QAAQ,gBAEtC,OADAO,EAAIhC,UACGgC,EAGX,IAAIyE,KAAelD,EAAA7C,iBAAkBH,EAAKE,QAAQgG,aAAc2B,GAAkB+D,oBAC9E6F,EAAmB,GACnBC,EAAmB,GAuBvB,OArBApR,MAAMyF,KAAM9G,EAAO+F,iBAAiBzG,yBAAwBK,QAAQ,SAAUqC,GAC1E,IAEIuV,EAFA/Z,EAAOwE,EAAQxE,KACf6J,EAAOrF,EAAQqF,KAGnB,GAAK7J,IAASgV,GAAoBnL,IAASoL,EAAqB,SAE3DzQ,EAAQC,QAAQ,0BACjBuQ,EAAmBhV,EACnBiV,EAAmBpL,IAGvBkQ,EAAY7O,eAAatL,KAAM2D,EAAMiB,EAASiF,IAE/BzG,SACXgC,EAAIhC,WAGRgC,EAAIoB,OAAOxC,KAAMmW,KAGd/U,GAxCX,IAAAuB,EAAAlH,EAAA,GACAwZ,EAAAxZ,EAAA","file":"formJS.xhr.min.js","sourcesContent":[" \t// The module cache\n \tvar installedModules = {};\n\n \t// The require function\n \tfunction __webpack_require__(moduleId) {\n\n \t\t// Check if module is in cache\n \t\tif(installedModules[moduleId]) {\n \t\t\treturn installedModules[moduleId].exports;\n \t\t}\n \t\t// Create a new module (and put it into the cache)\n \t\tvar module = installedModules[moduleId] = {\n \t\t\ti: moduleId,\n \t\t\tl: false,\n \t\t\texports: {}\n \t\t};\n\n \t\t// Execute the module function\n \t\tmodules[moduleId].call(module.exports, module, module.exports, __webpack_require__);\n\n \t\t// Flag the module as loaded\n \t\tmodule.l = true;\n\n \t\t// Return the exports of the module\n \t\treturn module.exports;\n \t}\n\n\n \t// expose the modules object (__webpack_modules__)\n \t__webpack_require__.m = modules;\n\n \t// expose the module cache\n \t__webpack_require__.c = installedModules;\n\n \t// define getter function for harmony exports\n \t__webpack_require__.d = function(exports, name, getter) {\n \t\tif(!__webpack_require__.o(exports, name)) {\n \t\t\tObject.defineProperty(exports, name, { enumerable: true, get: getter });\n \t\t}\n \t};\n\n \t// define __esModule on exports\n \t__webpack_require__.r = function(exports) {\n \t\tif(typeof Symbol !== 'undefined' && Symbol.toStringTag) {\n \t\t\tObject.defineProperty(exports, Symbol.toStringTag, { value: 'Module' });\n \t\t}\n \t\tObject.defineProperty(exports, '__esModule', { value: true });\n \t};\n\n \t// create a fake namespace object\n \t// mode & 1: value is a module id, require it\n \t// mode & 2: merge all properties of value into the ns\n \t// mode & 4: return value when already ns object\n \t// mode & 8|1: behave like require\n \t__webpack_require__.t = function(value, mode) {\n \t\tif(mode & 1) value = __webpack_require__(value);\n \t\tif(mode & 8) return value;\n \t\tif((mode & 4) && typeof value === 'object' && value && value.__esModule) return value;\n \t\tvar ns = Object.create(null);\n \t\t__webpack_require__.r(ns);\n \t\tObject.defineProperty(ns, 'default', { enumerable: true, value: value });\n \t\tif(mode & 2 && typeof value != 'string') for(var key in value) __webpack_require__.d(ns, key, function(key) { return value[key]; }.bind(null, key));\n \t\treturn ns;\n \t};\n\n \t// getDefaultExport function for compatibility with non-harmony modules\n \t__webpack_require__.n = function(module) {\n \t\tvar getter = module && module.__esModule ?\n \t\t\tfunction getDefault() { return module['default']; } :\n \t\t\tfunction getModuleExports() { return module; };\n \t\t__webpack_require__.d(getter, 'a', getter);\n \t\treturn getter;\n \t};\n\n \t// Object.prototype.hasOwnProperty.call\n \t__webpack_require__.o = function(object, property) { return Object.prototype.hasOwnProperty.call(object, property); };\n\n \t// __webpack_public_path__\n \t__webpack_require__.p = \"\";\n\n\n \t// Load entry module and return exports\n \treturn __webpack_require__(__webpack_require__.s = 3);\n","\nexport const\n\nfieldsStringSelector = 'input:not([type=\"reset\"]):not([type=\"submit\"]):not([type=button]):not([type=hidden]), select, textarea',\n\naddClass = function( element, cssClasses ){\n    cssClasses.split(' ').forEach(function(className){\n        element.classList.add( className );\n    });\n},\n\ncheckFormEl = function( formEl ){\n    let isString = typeof formEl,\n        isValidNodeSelector = isString === 'string' && isDOMNode(document.querySelector(formEl)),\n        isFormSelector = isValidNodeSelector && document.querySelector(formEl).tagName.toLowerCase() === 'form',\n        obj = {\n            result: isDOMNode(formEl) || isFormSelector,\n            element: (isString === 'string' ? document.querySelector(formEl) : formEl)\n        };\n\n    return obj;\n},\n\nexecuteCallback = function( callbackOption, callbackData, tempOptions = {} ){\n    let self = this,\n        options = mergeObjects({}, self.options, tempOptions),\n        callbackFnList = [];\n\n    if( typeof callbackOption === 'function' ){\n        callbackFnList.push( callbackOption );\n    } else if( Array.isArray(callbackOption) ) {\n        callbackFnList = callbackOption;\n    }\n\n    callbackFnList.forEach(function(cbFn){\n        cbFn.call( self, callbackData, options );\n    });\n},\n\ngetSplitChar = function( string ){\n    let splitChar = '.';\n\n    if( string.indexOf(splitChar) === -1 ){\n        if( string.indexOf('-') >= 0 ){\n            splitChar = '-';\n        } else if( string.indexOf('/') >= 0 ){\n            splitChar = '/';\n        }\n    }\n\n    return splitChar;\n},\n\nisDOMNode = function( node ){\n    return Element.prototype.isPrototypeOf( node );\n},\n\nisFieldForChangeEvent = function ( fieldEl ) {\n    return fieldEl.matches('select, [type=\"radio\"], [type=\"checkbox\"], [type=\"file\"]');\n},\n\nisNodeList = function( nodeList ){\n    return NodeList.prototype.isPrototypeOf( nodeList );\n},\n\nisPlainObject = function( object ){\n    return Object.prototype.toString.call( object ) === '[object Object]';\n},\n\nmergeObjects = function( out = {} ){\n    for(let i=1; i<arguments.length; i++){\n        let obj = arguments[i];\n\n        if(!obj){ continue; }\n\n        for(let key in obj){\n            let isArray = Object.prototype.toString.call(obj[key]) === \"[object Array]\";\n            let isObject = Object.prototype.toString.call(obj[key]) === \"[object Object]\";\n\n            // COPY ONLY ENUMERABLE PROPERTIES\n            if( obj.hasOwnProperty(key) ){\n                if( isArray ){\n\n                    if( typeof out[key] === 'undefined' || out[key] === null ){\n                        out[key] = [];\n                    }\n                    out[key] = out[key].concat( obj[key].slice(0) );\n\n                } else if( isObject ){\n\n                    out[key] = mergeObjects(out[key], obj[key]);\n\n                } else {\n\n                    // STRING | NUMBER | BOOLEAN | FUNCTION\n                    if( Array.isArray(out[key]) ){\n                        out[key].push(obj[key]);\n                    } else {\n                        out[key] = obj[key];\n                    }\n\n                }\n            }\n        }\n    }\n\n    return out;\n},\n\nremoveClass = function( element, cssClasses ){\n    cssClasses.split(' ').forEach(function(className){\n        element.classList.remove( className );\n    });\n},\n\nserializeObject = function( obj ){\n    var objToString = (\n            (obj && typeof obj === 'object' && obj.constructor === Object) ? \n            Object.keys(obj)\n                .reduce(function(a,k){\n                    a.push(k+'='+encodeURIComponent(obj[k]));\n                    return a\n                },[]).join('&') : \n            obj\n    );\n    return objToString;\n},\n\ntoCamelCase = function( string ){\n    return string.replace(/-([a-z])/ig, function(all, letter){ return letter.toUpperCase(); });\n},\n\nvalidateFieldObjDefault = { result: false, fieldEl: null },\n\nvalidateFormObjDefault = { result: true, fields: [] }\n","\nimport { getSplitChar } from './helper.js';\n\nexport const validationRules = {\n            \n    cap: function( string ){\n        // VALID ITALIAN CAP WITH 5 DIGITS\n        const\n            regex = new RegExp(/^[0-9]{5}$/),\n            obj = {\n                result: regex.test( string )\n            };\n\n        if( !obj.result && typeof this.validationErrors.cap === 'function' ){\n            obj.errors = this.validationErrors.cap( string );\n        }\n\n        return obj;\n    },\n\n    color: function( string ){\n        // HEX COLOR WITH/WITHOUT #\n        // CAN BE 3 OR 6 CHARACTERS ( fff | FFF | ffffff | FFFFFF )\n        let obj = {\n            result: /^#?([a-fA-F0-9]{6}|[a-fA-F0-9]{3})$/.test( string )\n        };\n\n        if( !obj.result && typeof this.validationErrors.color === 'function' ){\n            obj.errors = this.validationErrors.color( string );\n        }\n\n        return obj;\n    },\n    \n    date: function( string ){\n        // DATE AS ISO 8601 DATE FORMAT     YYYY MM DD | YYYY/MM/DD | YYYY.MM.DD | YYYY-MM-DD\n\n        let date = /^(((19|[2-9]\\d)\\d{2})[ \\/\\-.](0[13578]|1[02])[ \\/\\-.](0[1-9]|[12]\\d|3[01]))|(((19|[2-9]\\d)\\d{2})[ \\/\\-.](0[13456789]|1[012])[ \\/\\-.](0[1-9]|[12]\\d|30))|(((19|[2-9]\\d)\\d{2})[ \\/\\-.]02[ \\/\\-.](0[1-9]|1\\d|2[0-8]))|(((1[6-9]|[2-9]\\d)(0[48]|[2468][048]|[13579][26])|((16|[2468][048]|[3579][26])00))[ \\/\\-.]02[ \\/\\-.]29)$/g.test( string ),\n            obj = {\n                result: date\n            };\n\n        if( !obj.result && typeof this.validationErrors.date === 'function' ){\n            obj.errors = this.validationErrors.date( string );\n        }\n\n        return obj;\n    },\n\n    dateDDMMYYYY: function( string ){\n        // DATE AS ITALIAN SYNTAX       DD MM YYYY | DD/MM/YYYY | DD.MM.YYYY | DD-MM-YYYY\n\n        let date = /^(((0[1-9]|[12]\\d|3[01])[ \\/\\-.](0[13578]|1[02])[ \\/\\-.]((19|[2-9]\\d)\\d{2}))|((0[1-9]|[12]\\d|30)[ \\/\\-.](0[13456789]|1[012])[ \\/\\-.]((19|[2-9]\\d)\\d{2}))|((0[1-9]|1\\d|2[0-8])[ \\/\\-.]02[ \\/\\-.]((19|[2-9]\\d)\\d{2}))|(29[ \\/\\-.]02[ \\/\\-.]((1[6-9]|[2-9]\\d)(0[48]|[2468][048]|[13579][26])|((16|[2468][048]|[3579][26])00))))$/g.test( string ),\n            obj = {\n                result: date\n            };\n\n        if( !obj.result && typeof this.validationErrors.dateDDMMYYYY === 'function' ){\n            obj.errors = this.validationErrors.dateDDMMYYYY( string );\n        }\n\n        return obj;\n    },\n    \n    email: function( string ){\n        // FROM https://emailregex.com\n        // AS FOR RFC 5322 Official Standard EMAIL MUST BE AT LEAST:\n        // a@a.aa\n        const obj = {\n            result: /^(([^<>()\\[\\]\\\\.,;:\\s@\"]+(\\.[^<>()\\[\\]\\\\.,;:\\s@\"]+)*)|(\".+\"))@((\\[[0-9]{1,3}\\.[0-9]{1,3}\\.[0-9]{1,3}\\.[0-9]{1,3}])|(([a-zA-Z\\-0-9]+\\.)+[a-zA-Z]{2,}))$/.test( string )\n        };\n\n        if( !obj.result && typeof this.validationErrors.email === 'function' ){\n            obj.errors = this.validationErrors.email( string );\n        }\n\n        return obj;\n    },\n    \n    fiscalCode: function( string ){\n        // http://blog.marketto.it/2016/01/regex-validazione-codice-fiscale-con-omocodia/\n        let obj = {\n                result: /^(?:[B-DF-HJ-NP-TV-Z](?:[AEIOU]{2}|[AEIOU]X)|[AEIOU]{2}X|[B-DF-HJ-NP-TV-Z]{2}[A-Z]){2}[\\dLMNP-V]{2}(?:[A-EHLMPR-T](?:[04LQ][1-9MNP-V]|[1256LMRS][\\dLMNP-V])|[DHPS][37PT][0L]|[ACELMRT][37PT][01LM])(?:[A-MZ][1-9MNP-V][\\dLMNP-V]{2}|[A-M][0L](?:[\\dLMNP-V][1-9MNP-V]|[1-9MNP-V][0L]))[A-Z]$/i.test( string )\n            };\n\n        if( !obj.result && typeof this.validationErrors.fiscalCode === 'function' ){\n            obj.errors = this.validationErrors.fiscalCode( string );\n        }\n        \n        return obj;\n    },\n    \n    landlineNumber: function( string ){\n        // LANDLINE PREFIX:\n        // +39 | 0039 | not-set ( ALSO WITH INTERNATIONAL PREFIXES WITH 2 DIGITS )\n        // LANDLINE NUMBER MUST START WITH 0 ( AS FOR ITALIAN ONES ):\n        // 1234567890 | 12 34567890 | 123456789 | 1234 56789 ( ALSO WITH . - / AS SEPARATOR )\n        let obj = {\n            result: /^((00|\\+)\\d{2}[\\-\\. ]??)??(((0[\\d]{1,4}))([\\/\\-\\. ]){0,1}([\\d, ]{5,10}))$/.test( string )\n        };\n\n        if( !obj.result && typeof this.validationErrors.landlineNumber === 'function' ){\n            obj.errors = this.validationErrors.landlineNumber( string );\n        }\n\n        return obj; \n    },\n    \n    mobileNumber: function( string ){\n        // +39 | 0039 | 39 | not-set ( ALSO WITH ALL INTERNATIONAL PREFIXES WITH 2 DIGITS )\n        // MOBILE NUMBER MUST START WITH 3\n        // 3234567890 | 323 4567890 | 323 45 67 890 ( ALSO WITH . OR - AS SEPARATOR )\n        let obj = {\n            result: /^((00|\\+)??\\d{2}[\\-\\. ]??)??3\\d{2}[\\-\\. ]??(\\d{6,7}|\\d{2}[\\-\\. ]??\\d{2}[\\-\\. ]??\\d{3})$/.test( string )\n        };\n\n        if( !obj.result && typeof this.validationErrors.mobileNumber === 'function' ){\n            obj.errors = this.validationErrors.mobileNumber( string );\n        }\n\n        return obj;\n    },\n    \n    number: function( string ){\n        // ALL NUMBERS ( INTEGERS AND FLOATING )\n        // VALID NUMBERS: 123 | 123.456 | .123\n        let obj = {\n            result: /[+-]?([0-9]*[.])?[0-9]+/.test( string )\n        };\n\n        if( !obj.result && typeof this.validationErrors.number === 'function' ){\n            obj.errors = this.validationErrors.number( string );\n        }\n\n        return obj;\n    },\n    \n    numberFloat: function( string ){\n        // ONLY FLOATING NUMBERS\n        // VALID NUMBERS: 123.456 | .123\n        let obj = {\n            result: /[+-]?([0-9]*[.])[0-9]+/.test( string )\n        };\n\n        if( !obj.result && typeof this.validationErrors.numberFloat === 'function' ){\n            obj.errors = this.validationErrors.numberFloat( string );\n        }\n\n        return obj;\n    },\n    \n    numberInteger: function( string ){\n        // ONLY INTEGER NUMBERS\n        let obj = {\n            result: /^\\d+$/.test( string )\n        };\n\n        if( !obj.result && typeof this.validationErrors.numberInteger === 'function' ){\n            obj.errors = this.validationErrors.numberInteger( string );\n        }\n\n        return obj;\n    },\n    \n    password: function( string ){\n        // PASSWORD ( NO SPECIAL CHARACTERS ) WITH AT LEAST:\n        // ONE DIGIT + ONE LOWERCASE + ONE UPPERCASE + MIN LENGTH OF 8 CHARACTERS\n        let obj = {\n            result: /^(?=.*[0-9])(?=.*[a-z])(?=.*[A-Z])[0-9a-zA-Z]{8,}$/.test(string)\n        };\n\n        if( !obj.result && typeof this.validationErrors.password === 'function' ){\n            obj.errors = this.validationErrors.password( string );\n        }\n\n        return obj;\n    },\n\n    tel: function( string ){\n        // CHECK IF ONE OF landlineNumber OR mobileNumber IS VALID\n        let obj = {\n            result: this.validationRules.landlineNumber(string).result || this.validationRules.mobileNumber(string).result\n        };\n\n        if( !obj.result && typeof this.validationErrors.tel === 'function' ){\n            obj.errors = this.validationErrors.tel( string );\n        }\n\n        return obj;\n    },\n    \n    url: function( string ){\n        // MUST NOT CONTAIN PARAMETERS:\n        // www.mysite.com/index.html         --> VALID URL\n        // www.mysite.com/index.html?v=hello --> INVALID URL\n        let obj = {\n            result: /^((https?|ftp|file):\\/\\/)?([\\da-z\\.-]+)\\.([a-z\\.]{2,6})([\\/\\w \\.-]*)*\\/?$/.test( string )\n        };\n\n        if( !obj.result && typeof this.validationErrors.url === 'function' ){\n            obj.errors = this.validationErrors.url( string );\n        }\n\n        return obj;\n    },\n    \n    username: function( string ){\n        // USERNAME WITH LETTERS/NUMBERS/UNDERSCORE AND . - @ WITH MIN LENGTH 3 AND MAX LENGTH 24\n        //return /^[\\w\\.\\-\\@]{3,24}$/.test( string );\n        \n        // USERNAME MUST START WITH A LETTER/NUMBER/UNDERSCORE AND CAN ALSO CONTAIN . - @ WITH MIN LENGTH 3 AND MAX LENGTH 24\n        let obj = {\n            result: /^(?=\\w)(?=[\\-\\.\\@]?)[\\w\\-\\.\\@]{3,24}$/.test( string )\n        };\n\n        if( !obj.result && typeof this.validationErrors.username === 'function' ){\n            obj.errors = this.validationErrors.username( string );\n        }\n\n        return obj;\n    },\n    \n    vatNumber: function( string ){\n        // VAT NUMBER CAN CONTAIN OR NOT THE 'IT' STRING AND THEN 11 NUMBERS\n        let obj = {\n            result: /^(IT){0,1}[0-9]{11}$/i.test( string )\n        };\n\n        if( !obj.result && typeof this.validationErrors.vatNumber === 'function' ){\n            obj.errors = this.validationErrors.vatNumber( string );\n        }\n\n        return obj;\n    }\n    \n}\n\nexport const validationRulesAttributes = {\n\n    checkbox: function( data ){\n        let formEl = data.fieldEl.closest('form'),\n            dataChecksEl = formEl.querySelector('[name=\"' + data.fieldEl.name + '\"][data-checks]'),\n            obj = { result: data.fieldEl.checked };\n\n        if( dataChecksEl !== null ){\n            obj = this.checks({ attrValue: dataChecksEl.getAttribute('data-checks'), fieldEl: dataChecksEl});\n        }\n\n        return obj;\n    },\n\n    checks: function( data ){\n        try {\n            let attrValue = JSON.parse(data.attrValue),\n                fieldEl = data.fieldEl,\n                formEl = fieldEl.closest('form'),\n                checkedElLength = formEl.querySelectorAll('[name=\"' + fieldEl.name + '\"]:checked').length,\n                isMinOk = checkedElLength >= attrValue[0],\n                isMaxOk = checkedElLength <= attrValue[1],\n                obj = {\n                    result: isMinOk && isMaxOk\n                };\n\n            if( !obj.result ){\n\n                obj.errors = { checks: true };\n                if( !isMinOk ){ obj.errors.minChecks = true; }\n                if( !isMaxOk ){ obj.errors.maxChecks = true; }\n\n            }\n\n            return obj;\n        } catch(e){\n            throw new Error('\"data-checks\" attribute is not a valid array!');\n        }\n    },\n\n    equalTo: function( data ){\n        let fieldEl = data.fieldEl,\n            formEl = fieldEl.closest('form'),\n            checkFromEl = formEl.querySelector( '[name=\"' + fieldEl.getAttribute('data-equal-to') + '\"]' ),\n            obj = {\n                result: fieldEl.value === checkFromEl.value\n            };\n\n        if( !obj.result ){\n            \n            obj.errors = { equalTo: true };\n        }\n\n        return obj;\n    },\n    \n    exactLength: function( data ){\n        let valueLength = data.fieldEl.value.length,\n            exactLength = (data.attrValue * 1),\n            obj = {\n                result: valueLength === exactLength\n            };\n\n        if( !obj.result ){\n\n            obj.errors = { exactLength: true };\n            if( valueLength < exactLength ){ obj.errors.minlength = true; }\n            else { obj.errors.maxlength = true; }\n\n        }\n\n        return obj;\n    },\n\n    file: function( data ){\n        let fieldEl = data.fieldEl,\n            MIMEtype = (fieldEl.accept ? new RegExp(fieldEl.accept.replace( '*', '[^\\\\/,]+' )) : null),\n            filesList = Array.from(fieldEl.files),\n            obj = { result: true };\n\n        filesList.forEach(function( file ){\n            let exceedMaxFileSize = data.fieldOptions.maxFileSize > 0 && (file.size/1024/1024) > data.fieldOptions.maxFileSize,\n                isAcceptedFileType = (MIMEtype !== null ? MIMEtype.test(file.type) : true);\n\n            if( exceedMaxFileSize || !isAcceptedFileType ){\n                obj.result = false;\n                if( typeof obj.errors === 'undefined' ){\n                    obj.errors = {};\n                }\n                obj.errors.file = true;\n                if( exceedMaxFileSize ){ obj.errors.maxFileSize = true; }\n                if( !isAcceptedFileType ){ obj.errors.acceptedFileType = true; }\n\n            }\n        });\n\n        return obj;\n    },\n\n    length: function( data ){\n        try {\n            let valueL = data.fieldEl.value.length,\n                attrValue = JSON.parse(data.attrValue),\n                isMinlengthOk = valueL >= attrValue[0],\n                isMaxlengthOk = valueL <= attrValue[1],\n                obj = { result: isMinlengthOk && isMaxlengthOk };\n\n            if( !obj.result ){\n\n                obj.errors = { stringLength: true };\n                if( !isMinlengthOk ){ obj.errors.minlength = true; }\n                if( !isMaxlengthOk ){ obj.errors.maxlength = true; }\n\n            }\n\n            return obj;\n        } catch(e){\n            throw new Error('\"data-length\" attribute is not a valid array!');\n        }\n    },\n    \n    max: function( data ){\n        let fieldEl = data.fieldEl,\n            isDate = (fieldEl.matches('[type=\"date\"]') || fieldEl.matches('[data-subtype=\"date\"]') || fieldEl.matches('[data-subtype=\"dateDDMMYYYY\"]')),\n            value = data.fieldEl.value,\n            maxVal = data.attrValue;\n        \n        if( isDate ){\n\n            let splitChar = getSplitChar( value );\n\n            if( value.indexOf(splitChar) === 2 ){\n                // DD MM YYYY\n                value = value.split( splitChar ).reverse();\n            } else {\n                // YYYY MM DD\n                value = value.split( splitChar );\n            }\n\n            value = value.join('');\n            maxVal = maxVal.split('-').join('');\n\n        }\n\n        value = value * 1;\n        maxVal = maxVal * 1;\n\n        let obj = {\n                result: value <= maxVal\n            };\n\n        if( !obj.result ){\n            \n            obj.errors = { max: true };\n        }\n        \n        return obj;\n    },\n    \n    maxlength: function( data ){\n        const obj = {\n            result: data.fieldEl.value.length <= (data.attrValue * 1)\n        };\n\n        if( !obj.result ){\n\n            obj.errors = { maxlength: true };\n        }\n\n        return obj;\n    },\n    \n    min: function( data ){\n        let fieldEl = data.fieldEl,\n            isDate = (fieldEl.matches('[type=\"date\"]') || fieldEl.matches('[data-subtype=\"date\"]') || fieldEl.matches('[data-subtype=\"dateDDMMYYYY\"]')),\n            value = data.fieldEl.value,\n            minVal = data.attrValue;\n        \n        if( isDate ){\n\n            let splitChar = getSplitChar( value );\n\n            if( value.indexOf(splitChar) === 2 ){\n                // DD MM YYYY\n                value = value.split( splitChar ).reverse();\n            } else {\n                // YYYY MM DD\n                value = value.split( splitChar );\n            }\n\n            value = value.join('');\n            minVal = minVal.split('-').join('');\n\n        }\n\n        value = value * 1;\n        minVal = minVal * 1;\n\n        let obj = {\n                result: value >= minVal\n            };\n\n        if( !obj.result ){\n            \n            obj.errors = { min: true };\n        }\n        \n        return obj;\n    },\n\n    minlength: function( data ){\n        const obj = {\n            result: data.fieldEl.value.length >= (data.attrValue * 1)\n        };\n\n        if( !obj.result ){\n\n            obj.errors = { minlength: true };\n        }\n\n        return obj;\n    },\n\n    pattern: function( data ){\n        let fieldEl = data.fieldEl,\n            fieldPattern = fieldEl.pattern,\n            fieldRegex = new RegExp( fieldPattern ),\n            obj = {\n                result: fieldRegex.test( fieldEl.value )\n            };\n\n        if( !obj.result ){\n\n            obj.errors = { pattern: true };\n        }\n\n        return obj;\n    },\n\n    radio: function( data ){\n        let fieldEl = data.fieldEl,\n            fieldChecked = fieldEl.closest('form').querySelector( '[name=\"'+ fieldEl.name +'\"]:checked' ),\n            isValid = fieldChecked !== null && fieldChecked.value.trim().length > 0,\n            obj = { result: isValid };\n\n        return obj;\n    },\n\n    requiredFrom: function( data ){\n        let fieldEl = data.fieldEl,\n            formEl = fieldEl.closest('form'),\n            isValidValue = fieldEl.value.trim().length > 0,\n            reqMoreEl = formEl.querySelector( fieldEl.getAttribute('data-required-from') ),\n            checkedEl = formEl.querySelector( '[name=\"'+ reqMoreEl.name +'\"]:checked' ),\n            obj = { result: checkedEl !== null };\n\n        if( reqMoreEl.checked && reqMoreEl.required ){\n            obj.result = isValidValue;\n        }\n\n        if( !obj.result ){\n            obj.errors = { requiredFrom: true };\n        }\n        \n        return obj;\n    }\n    \n}\n","\nimport { isDOMNode, mergeObjects, validateFieldObjDefault } from './helper.js';\nimport { isValid } from './isValid.js';\n\nexport function isValidField( fieldElem, fieldOptionsObj = {} ){\n\n    const self = this,\n          fieldEl = (typeof fieldElem === 'string' ? self.formEl.querySelector(fieldElem) : fieldElem);\n\n    let obj = mergeObjects({}, validateFieldObjDefault);\n\n    if( !isDOMNode(fieldEl) ){ return obj; }\n\n    let options =           mergeObjects( {}, self.options.fieldOptions, fieldOptionsObj ),\n        isValidValue =      fieldEl.value.trim().length > 0,\n        isRequired =        fieldEl.required,\n        isReqFrom =         fieldEl.matches('[data-required-from]'),\n        isValidateIfFilled =fieldEl.matches('[data-validate-if-filled]');\n    \n    if(\n        (!isRequired && !isValidateIfFilled && !isReqFrom) ||   // IT IS A NORMAL FORM FIELD\n        (isValidateIfFilled && !isValidValue) ||                // IT IS data-validate-if-filled AND EMPTY\n        (isReqFrom && !isRequired )                             // IT IS data-required-from AND NOT required\n    ){\n\n        obj.result = true;\n       \n    } else {\n        \n        obj = isValid.call( self, fieldEl, options );\n        \n    }\n\n    obj.fieldEl = fieldEl;\n    \n    return obj;\n\n}\n","\n/**! formJS v3.0.0 | Valerio Di Punzio (@SimplySayHi) | https://www.valeriodipunzio.com/plugins/formJS/ | https://github.com/SimplySayHi/formJS | MIT license */\n\nimport { mergeObjects }         from './modules/helper.js';\nimport { setCallbackFunctionsInOptions } from './modules/optionsUtils.js';\n\nimport { options }              from './modules/options.js';\nimport { validationRules }      from './modules/validationRules.js';\nimport { validationErrors }     from './modules/validationErrors.js';\n\n// CONSTRUCTOR FUNCTION & PUBLIC METHODS\nimport { constructorFn }        from './modules/constructor.js';\nimport { destroy }              from './modules/destroy.js';\nimport { getFormData }          from './modules/getFormData.js';\nimport { init }                 from './modules/init.js';\nimport { submit }               from './modules/submit.js';\nimport { validateField }        from './modules/validateField.js';\nimport { validateForm }         from './modules/validateForm.js';\n\nconst version = '3.0.0';\n\nclass Form {\n\n    constructor( formEl, optionsObj ){\n        constructorFn.call(this, formEl, optionsObj);\n    }\n\n    destroy(){\n        destroy.call(this);\n    }\n    \n    getFormData( customFn ){\n        return getFormData.call(this, customFn);\n    }\n\n    init(){\n        return init.call(this);\n    }\n\n    submit( optionsObj, event ){\n        submit.call(this, optionsObj, event);\n    }\n\n    validateField( fieldElem, fieldOptions ){\n        return validateField.call(this, fieldElem, fieldOptions);\n    }\n\n    validateForm( fieldOptions ){\n        return validateForm.call(this, fieldOptions);\n    }\n    \n    static addValidationErrors( errorsObj ){\n        this.prototype.validationErrors = mergeObjects({}, this.prototype.validationErrors, errorsObj);\n    }\n\n    static addValidationRules( rulesObj ){\n        this.prototype.validationRules = mergeObjects({}, this.prototype.validationRules, rulesObj);\n    }\n    \n    static setOptions( optionsObj ){\n        this.prototype.options = mergeObjects({}, this.prototype.options, optionsObj);\n    }\n\n}\n\nForm.prototype.isInitialized = false;\nForm.prototype.options = options;\nForm.prototype.validationErrors = validationErrors;\nForm.prototype.validationRules = validationRules;\nForm.prototype.version = version;\n\nsetCallbackFunctionsInOptions.call(Form.prototype);\n\nif( !window.Form ){ window.Form = Form; }\nif( !window.FormJS ) { window.FormJS = Form; }\n","\nimport { addClass, removeClass }    from './helper.js';\nimport { checkDirtyField }          from './checkDirtyField.js';\n\nconst defaultCallbacksInOptions = {\n    fieldOptions: {\n        onValidation: function onValidationDefault ( fieldsArray, tempOptions ) {\n\n            let self = this,\n                options = tempOptions.fieldOptions;\n\n            fieldsArray.forEach(function( obj ){\n                let fieldEl = obj.fieldEl,\n                    containerEl = fieldEl.closest('[data-formjs-question]'),\n                    isReqFrom = fieldEl.matches('[data-required-from]'),\n                    reqMoreEl = self.formEl.querySelector( fieldEl.getAttribute('data-required-from') );\n\n                checkDirtyField.call( self, fieldEl );\n                \n                if( containerEl !== null && !options.skipUIfeedback ){\n                    if( obj.result ){\n\n                        if( !isReqFrom || (isReqFrom && reqMoreEl.checked) ){\n                            // IF FIELD IS VALID\n                            let errorClasses = options.cssClasses.error + ' ' + options.cssClasses.errorEmpty + ' ' + options.cssClasses.errorRule;\n                            removeClass( containerEl, errorClasses );\n                            addClass( containerEl, options.cssClasses.valid );\n                        }\n\n                    } else {\n\n                        // IF FIELD IS NOT VALID\n                        let extraErrorClass = options.cssClasses.errorRule;\n\n                        // HANDLE CASE OF FIELD data-checks\n                        let isChecks = fieldEl.matches('[data-checks]'),\n                            checkedElLength = (isChecks ? containerEl.querySelectorAll('[name=\"' + fieldEl.name + '\"]:checked').length : 0);\n\n                        if( (!isChecks && (obj.errors && obj.errors.empty)) || (isChecks && checkedElLength === 0) ){\n                            extraErrorClass = options.cssClasses.errorEmpty;\n                        }\n\n                        let errorClasses = options.cssClasses.error + ' ' + extraErrorClass,\n                            errorClassToRemove = options.cssClasses.errorEmpty + ' ' + options.cssClasses.errorRule;\n                        removeClass( containerEl, options.cssClasses.valid + ' ' + errorClassToRemove );\n                        addClass( containerEl, errorClasses );\n\n                    }\n                }\n            });\n            \n        }\n    }\n};\n\nexport const setCallbackFunctionsInOptions = function(){\n    const   self = this,\n            callbacks = {\n                fieldOptions: ['onPastePrevented', 'onValidation'],\n                formOptions: ['beforeSend', 'onSubmitComplete', 'onSubmitError', 'onSubmitSuccess']\n            };\n\n    for(let opt in callbacks){\n        let fjsOpt = callbacks[opt];\n\n        fjsOpt.forEach(function(fnName){\n            let fnInOptions = self.options[opt][fnName],\n                fnList = [];\n\n            if( Array.isArray(fnInOptions) ) {\n                fnList.concat(fnInOptions);\n            } else if( fnInOptions ) {\n                fnList.push(fnInOptions);\n            }\n\n            if( typeof defaultCallbacksInOptions[opt] !== 'undefined' && typeof defaultCallbacksInOptions[opt][fnName] === 'function' ){\n                fnList.unshift(defaultCallbacksInOptions[opt][fnName]);\n            }\n\n            self.options[opt][fnName] = fnList;\n        });\n    }\n\n}\n","\nimport { addClass, isNodeList, removeClass } from './helper.js';\n\nexport function checkDirtyField( fields, cssClasses = this.options.fieldOptions.cssClasses.dirty ){\n\n    var fields = (isNodeList(fields) ? Array.from( fields ) : [fields]);\n    \n    fields.forEach(function(fieldEl){\n        if( fieldEl.type !== 'checkbox' && fieldEl.type !== 'radio' ){\n            let containerEl = fieldEl.closest('[data-formjs-question]') || fieldEl;\n\n            if( fieldEl.value ){\n                \n                addClass( containerEl, cssClasses );\n                \n            } else {\n                \n                removeClass( containerEl, cssClasses );\n                \n            }\n        }\n    });\n    \n}\n","\n//import { ajaxOptions } from './optionsAjax.js';\nimport { ajaxOptions } from './optionsAjaxXhr.js';\n\nexport const options = {\n\n    fieldOptions: {\n        cssClasses: {\n            dirty:              'is-dirty',\n            error:              'has-error',\n            errorEmpty:         'has-error-empty',\n            errorRule:          'has-error-rule',\n            valid:              'is-valid'\n        },\n        focusOnRelated:         true,\n        handleFileUpload:       true,\n        handleValidation:       true,\n        maxFileSize:            10,\n        onPastePrevented:       null,\n        onValidation:           null,\n        preventPasteFields:     '[type=\"password\"], [data-equal-to]',\n        skipUIfeedback:         false,\n        strictHtmlValidation:   true,\n        validateOnEvents:       'input change'\n    },\n\n    formOptions: {\n        ajaxOptions:            ajaxOptions,\n        ajaxSubmit:             true,\n        beforeSend:             null,\n        getFormData:            null,\n        handleSubmit:           true,\n        onSubmitComplete:       null,\n        onSubmitError:          null,\n        onSubmitSuccess:        null\n    }\n    \n}\n","\nexport let ajaxOptions = {\n    async:              true,\n    cache:              false,\n    contentType:        'application/x-www-form-urlencoded; charset=UTF-8',\n    headers: {\n                        'X-Requested-With': 'XMLHttpRequest',\n    },\n    method:             'POST',\n    timeout:            0,\n    url:                location.href\n}\n","\nexport const validationErrors = {\n\n    cap: function( string ){\n\n        const obj = {};\n        const strLength = string.length;\n        \n        if( strLength > 5 ){ obj.maxlength = true; }\n        if( strLength > 0 && strLength < 5 ){ obj.minlength = true; }\n        if( /[^0-9]/.test(string) ){ obj.invalidChars = true; }\n\n        return obj;\n\n    },\n\n    email: function ( string ) {\n        const obj = {};\n\n        if( string.indexOf('@') === -1 ){\n\n            // @ IS MISSING\n            obj.missingAtChar = true;\n\n        } else {\n\n            let splitAt_at = string.split('@');\n            if( splitAt_at[0].length === 0 ){\n\n                // USER NAME IS MISSING\n                obj.missingUserName = true;\n\n            }\n\n            if( splitAt_at[1].length === 0 ){\n\n                // IS EMPTY AFTER @\n                obj.missingDomain = true;\n                obj.missingExtensionDot = true;\n                obj.missingExtension = true;\n\n            } else if( splitAt_at[1].indexOf('.') === -1 ) {\n\n                // DOT IS MISSING\n                obj.missingExtensionDot = true;\n                obj.missingExtension = true;\n\n            } else {\n\n                // EXTENSION MISSING OR NOT LONG ENOUGH\n                let splitAt_dot = splitAt_at[1].split('.'),\n                    extLength = splitAt_dot[1].length;\n                if( extLength === 0 ) {\n                    obj.missingExtension = true;\n                } else if( extLength < 2 ){\n                    obj.minlengthExtension = true;\n                }\n\n            }\n        }\n\n        return obj;\n\n    },\n\n    password: function ( string ) {\n\n        const obj = {};\n\n        if( string.length < 8 ){ obj.minlength = true; }\n        if( !/\\d/.test(string) ){ obj.missingNumber = true; }\n        if( !/[a-z]/.test(string) ){ obj.missingLowercase = true; }\n        if( !/[A-Z]/.test(string) ){ obj.missingUppercase = true; }\n        if( /[^0-9a-zA-Z]/.test(string) ){ obj.invalidChars = true; }\n\n        return obj;\n\n    },\n\n    username: function ( string ) {\n\n        const obj = {};\n        const strLength = string.length;\n\n        if( strLength < 3 ){ obj.minlength = true; }\n        if( strLength > 24 ){ obj.maxlength = true; }\n        if( /[^\\w\\-\\.\\@]/.test(string) ){ obj.invalidChars = true; }\n        if( !/^[\\w]/.test(string) ){ obj.invalidStartChar = true; }\n\n        return obj;\n\n    },\n\n    vatNumber: function ( string ) {\n\n        const obj = {};\n        let strLength = string.length,\n            indexOfIT = string.indexOf('IT'),\n            checkLength = (indexOfIT === 0 ? 13 : 11);\n\n        if( indexOfIT < 1 ){\n            if( strLength < checkLength ){ obj.minlength = true; }\n            else { obj.maxlength = true; }\n        }\n\n        return obj;\n\n    }\n\n}","\nimport { checkFormEl, isNodeList, mergeObjects } from './helper.js';\n\nimport { callbackFns }                             from './listenerCallbacks.js';\nimport { formStartup }                             from './formStartup.js';\n\nexport function constructorFn( formEl, optionsObj = {} ){\n\n    let self = this,\n        argsL = arguments.length,\n        checkFormElem = checkFormEl(formEl);\n\n    if( argsL === 0 || (argsL > 0 && !formEl) ){\n        throw new Error('First argument \"formEl\" is missing or falsy!');\n    }\n    if( isNodeList(formEl) ){\n        throw new Error('First argument \"formEl\" must be a single DOM node or a form CSS selector, not a NodeList!');\n    }\n    if( !checkFormElem.result ){\n        throw new Error('First argument \"formEl\" is not a DOM node nor a form CSS selector!');\n    }\n\n    self.formEl = checkFormElem.element;\n    self.formEl.formjs = self;\n    self.options = mergeObjects({}, Form.prototype.options, optionsObj);\n    self.listenerCallbacks = {\n        charCount:          callbackFns.charCount,\n        dataTypeNumber:     callbackFns.dataTypeNumber,\n        keypressMaxlength:  callbackFns.keypressMaxlength,\n        pastePrevent:       callbackFns.pastePrevent.bind(self),\n        submit:             callbackFns.submit.bind(self),\n        validation:         callbackFns.validation.bind(self)\n    };\n    Object.freeze(self.listenerCallbacks);\n\n    formStartup.call( self );\n    \n}\n","\nimport { executeCallback, fieldsStringSelector, isFieldForChangeEvent } from './helper.js';\n\nexport const callbackFns = {\n\n    charCount: function( eventOrField ){\n\n        const fieldEl = eventOrField.target || eventOrField;\n\n        if( fieldEl.matches( '[data-char-count]' ) ){\n            try {\n                let charLengthEl = fieldEl.closest('[data-formjs-question]').querySelector('[data-char-length]');\n\n                if( charLengthEl !== null ){\n                    let usedChars = fieldEl.value.length;\n                    charLengthEl.textContent = usedChars;\n                }\n            } catch (error) {}\n        }\n\n    },\n\n    dataTypeNumber: function( event ){\n\n        const fieldEl = event.target;\n        \n        if( fieldEl.matches('[data-type=\"number\"]') ){\n            let fieldValue = fieldEl.value,\n                hasInvalidChars = /[^\\d.,+\\-]/.test(fieldValue);\n            \n            if( hasInvalidChars ){\n                event.stopImmediatePropagation();\n                let valueReplaced = fieldValue.replace(/[^\\d.,+\\-]/g, '');\n                fieldEl.value = valueReplaced;\n            }\n        }\n\n    },\n\n    keypressMaxlength: function( event ){\n\n        const fieldEl = event.target;\n        \n        if( fieldEl.matches( '[maxlength]' ) ){\n            const maxLength = fieldEl.maxLength * 1,\n                keyPressed = event.which || event.keyCode,\n                allowedKeys = [8, 37, 38, 39, 46];\n\n            if( fieldEl.value.length >= maxLength && allowedKeys.indexOf(keyPressed) === -1 ){\n                return false;\n            }\n        }\n\n    },\n\n    pastePrevent: function( event ){\n\n        const self = this,\n              fieldEl = event.target;\n        let fieldOptions = self.options.fieldOptions;\n\n        if( fieldEl.matches( fieldOptions.preventPasteFields ) ){     \n            event.preventDefault();\n            executeCallback.call( self, fieldOptions.onPastePrevented, fieldEl );\n        }\n\n    },\n\n    submit: function( event ){\n        this.submit( {}, event );\n    },\n\n    validation: function( event ){\n\n        const self = this,\n            eventName = event.type,\n            fieldEl = event.target;\n\n        if( fieldEl.matches( fieldsStringSelector ) ){\n            const isFieldForChangeEventBoolean = isFieldForChangeEvent(fieldEl),\n                isRadio = fieldEl.type === 'radio',\n                isReqFrom = fieldEl.matches('[data-required-from]'),\n                isReqMore = fieldEl.matches('[data-require-more]'),\n                isValidValue = fieldEl.value.trim().length > 0;\n\n            // HANDLE data-require-more FIELDS\n            if( isRadio && eventName === 'change' ){\n                let findReqMoreEl = (isReqMore ? fieldEl : self.formEl.querySelector('[name=\"'+ fieldEl.name +'\"][data-require-more]')),\n                    findReqFromEl = (findReqMoreEl !== null ? self.formEl.querySelector('[data-required-from=\"#'+ findReqMoreEl.id +'\"]') : null);\n\n                if( isReqMore ){\n\n                    if( findReqFromEl !== null ){\n                        if( fieldEl.required ){\n                            findReqFromEl.required = true;\n                        }\n                        if( self.options.fieldOptions.focusOnRelated ){\n                            findReqFromEl.focus();\n                        }\n                    }\n\n                } else if( findReqMoreEl !== null ){\n\n                    if( findReqFromEl !== null ){\n                        findReqFromEl.required = false;\n                        findReqFromEl.value = '';\n                    }\n\n                }\n            }\n\n            // HANDLE data-required-from FIELDS\n            if( isReqFrom ){\n                if( isValidValue ){\n\n                    let reqMoreEl = self.formEl.querySelector( fieldEl.getAttribute('data-required-from') );\n                    reqMoreEl.checked = true;\n\n                    if( reqMoreEl.required ){\n                        fieldEl.required = true;\n                    }\n                }\n            }\n            \n            if(\n                (isFieldForChangeEventBoolean && eventName === 'change') ||\n                (!isFieldForChangeEventBoolean && eventName !== 'change')\n            ){\n                \n                self.validateField( fieldEl );\n\n            }\n        }\n        \n    }\n\n};\n","\nexport function formStartup(){\n\n    const self = this,\n          formEl = self.formEl;\n\n    if( !formEl.matches('[novalidate]') ){ return null; }\n\n    let fieldOptions = self.options.fieldOptions,\n        formOptions = self.options.formOptions;\n\n    // INIT FORM UTILITIES - START\n    let charLengthElems = formEl.querySelectorAll('[data-char-length]');\n    if( charLengthElems.length > 0 ){\n        Array.from( charLengthElems ).forEach(function( element ){\n            try {\n                let containerEl = element.closest('[data-formjs-question]'),\n                    fieldEl = containerEl.querySelector('[data-char-count]');\n\n                if( fieldEl !== null && fieldEl.matches('[maxlength]') ){\n                    // PRINT RELATED MAX LENGTH IN HTML\n                    let maxlength = fieldEl.getAttribute('maxlength');\n                    containerEl.querySelector('[data-char-maxlength]').textContent = maxlength;\n                }\n\n                // PRINT CHAR COUNT IN HTML\n                self.listenerCallbacks.charCount.call( null, fieldEl );\n            } catch (error) {}\n        });\n    }\n\n    if( fieldOptions.maxFileSize > 0 ){\n        let maxFileSizeElems = formEl.querySelectorAll('[data-max-file-size]');\n        if( maxFileSizeElems.length > 0 ){\n            Array.from( maxFileSizeElems ).forEach(function( element ){\n                try {\n                    let fieldEl = element.closest('[data-formjs-question]').querySelector('[type=\"file\"]');\n\n                    if( fieldEl !== null ){\n                        // PRINT MAX FILE SIZE FOR INPUTS WITH type=\"file\"\n                        element.textContent = fieldOptions.maxFileSize;\n                    }\n                } catch (error) {}\n            });\n        }\n    }\n    // INIT FORM UTILITIES - END\n\n    // HANDLE FIELD VALIDATION\n    if( fieldOptions.handleValidation ){\n        \n        // VALIDATION WITH ATTRIBUTES LIKE HTML ONES ( ALSO FOR BUG FIXING, EG: maxlength IN ANDROID )\n        if( fieldOptions.strictHtmlValidation ){\n            \n            // maxlength\n            // BUGGY IN ANDROID BROWSERS\n            formEl.addEventListener('keypress', self.listenerCallbacks.keypressMaxlength, false);\n\n            // data-type=\"number\"\n            // SINCE VALIDATING type=\"number\" WITH NON NUMERIC CHARS WILL RETURN EMPTY STRING IN SOME BROWSERS ( EG: FIREFOX )\n            formEl.addEventListener('input', self.listenerCallbacks.dataTypeNumber, false);\n            \n        }\n        \n        if( fieldOptions.preventPasteFields && formEl.querySelectorAll( fieldOptions.preventPasteFields ).length ){\n            // INIT EVENT LISTENER FOR \"PASTE\" EVENT TO PREVENT IT ON SPECIFIED FIELDS\n            formEl.addEventListener('paste', self.listenerCallbacks.pastePrevent, false);\n        }\n\n        if( formEl.querySelectorAll('[data-char-count]').length > 0 ){\n            // INIT EVENT LISTENER FOR FIELDS WITH \"data-char-count\" ATTRIBUTE\n            formEl.addEventListener('input', self.listenerCallbacks.charCount, false);\n        }\n\n        // INIT EVENTS LISTENER ( AS IN fieldOptions )\n        fieldOptions.validateOnEvents.split(' ').forEach(function( eventName ){\n            let useCapturing = (eventName === 'blur' ? true : false);\n            formEl.addEventListener(eventName, self.listenerCallbacks.validation, useCapturing);\n        });\n\n    }\n    \n    // HANDLE FORM SUBMIT\n    if( formOptions.handleSubmit ){\n        // INIT FORM SUBMIT ( DEFAULT AND AJAX )\n        formEl.addEventListener('submit', self.listenerCallbacks.submit);\n\n        if( formOptions.ajaxSubmit ){\n            if( formEl.getAttribute('enctype') ){\n\n                // FOR XMLHttpRequest API\n                formOptions.ajaxOptions.contentType = formEl.getAttribute('enctype');\n\n                // FOR fetch API\n                formOptions.ajaxOptions.headers['Content-Type'] = formEl.getAttribute('enctype');\n                \n            }\n\n            if( formEl.getAttribute('method') ){\n                formOptions.ajaxOptions.method = formEl.getAttribute('method').toUpperCase();\n            }\n\n            if( formEl.getAttribute('action') ){\n                formOptions.ajaxOptions.url = formEl.getAttribute('action');\n            }\n        }\n    }\n\n}\n","\nexport function destroy(){\n\n    const self = this,\n          formEl = self.formEl,\n          validationListenerNames = self.options.fieldOptions.validateOnEvents;\n\n    if( formEl.querySelectorAll('[data-char-count]').length > 0 ){\n        formEl.removeEventListener('input', self.listenerCallbacks.charCount, false);\n    }\n\n    if( self.options.fieldOptions.strictHtmlValidation ){\n        formEl.removeEventListener('keypress', self.listenerCallbacks.keypressMaxlength, false);\n        formEl.removeEventListener('input', self.listenerCallbacks.dataTypeNumber, false);\n    }\n\n    if( self.options.fieldOptions.preventPasteFields ){\n        formEl.removeEventListener('paste', self.listenerCallbacks.pastePrevent, false);\n    }\n\n    if( self.options.formOptions.handleSubmit ){\n        formEl.removeEventListener('submit', self.listenerCallbacks.submit);\n    }\n\n    validationListenerNames.split(' ').forEach(function( eventName ){\n        let useCapturing = (eventName === 'blur' ? true : false);\n        formEl.removeEventListener(eventName, self.listenerCallbacks.validation, useCapturing);\n    });\n\n    delete self.formEl.formjs;\n    \n}\n","\nexport function getFormData( customFn = this.options.formOptions.getFormData ){\n\n    let formData = {},\n        self = this,\n        formEl = self.formEl,\n        formFieldsEl = formEl.querySelectorAll('input, select, textarea'),\n        excludeSelectors = ':not([type=\"reset\"]):not([type=\"submit\"]):not([type=\"button\"]):not([type=\"file\"]):not([data-exclude-data])',\n        filteredFields = Array.from(formFieldsEl).filter(elem => elem.matches(excludeSelectors) );\n    \n    if( typeof customFn === 'function' ){\n\n        formData = customFn.call( self, filteredFields );\n\n    } else {\n\n        filteredFields.forEach(function( fieldEl ){\n            let isCheckbox = fieldEl.type === 'checkbox',\n                isRadio = fieldEl.type === 'radio',\n                isSelect = fieldEl.matches('select'),\n                name = fieldEl.name,\n                value = fieldEl.value;\n                         \n            if( isCheckbox ) {\n                \n                value = fieldEl.checked;\n                let checkboxes = Array.from( formEl.querySelectorAll('[name=\"'+ name +'\"]') );\n                if( checkboxes.length > 1 ){\n\n                    value = [];\n                    let checkedElems = checkboxes.filter(field => field.checked);\n                    checkedElems.forEach(fieldEl => {\n                        value.push( fieldEl.value );\n                    });\n\n                }\n                    \n            } else if( isRadio ){\n                \n                let checkedRadio = formEl.querySelector('[name=\"'+ name +'\"]:checked');\n                value = (checkedRadio === null ? null : checkedRadio.value);\n                \n            } else if( isSelect ){\n\n                let selectedOpts = Array.from( fieldEl.options ).filter(option => option.selected);\n                if( selectedOpts.length > 1 ){\n\n                    value = [];\n                    selectedOpts.forEach(fieldEl => {\n                        value.push( fieldEl.value );\n                    });\n\n                }\n            }\n\n            formData[ name ] = value;\n        });\n\n    }\n    \n    return formData;\n    \n}\n","\nimport { fieldsStringSelector, isFieldForChangeEvent } from './helper.js';\n\nexport const init = function(){\n\n    const self = this,\n          formEl = self.formEl,\n          formFields = formEl.querySelectorAll( fieldsStringSelector );\n\n    let currentFieldName = '',\n        currentFieldType = '';\n\n    Array.from( formFields ).forEach(function( fieldEl ){\n        const   name = fieldEl.name,\n                type = fieldEl.type;\n        \n        // AVOID REPEATING VALIDATION IF THE FIELD HAS THE SAME NAME OF THE PREVIOUS ONE\n        if( (name === currentFieldName && type === currentFieldType) ){ return true; }\n\n        const isCheckboxOrRadio = (fieldEl.type === 'checkbox' || fieldEl.type === 'radio'),\n              isFieldForChangeEventBoolean = isFieldForChangeEvent(fieldEl),\n              fieldChecked = formEl.querySelector('[name=\"' + fieldEl.name + '\"]:checked'),\n              isReqFrom = fieldEl.matches('[data-required-from]'),\n              reqMoreEl = (isReqFrom ? formEl.querySelector(fieldEl.getAttribute('data-required-from')) : null);\n\n        if( !isReqFrom ){\n            currentFieldName = name;\n            currentFieldType = type;\n        }\n        \n        // VALIDATE FIELD ( BY TRIGGERING THE EVENT LISTENER ) IF IT ALREADY HAS A VALUE\n        if(\n            (!isCheckboxOrRadio && fieldEl.value) || \n            (isCheckboxOrRadio && fieldChecked !== null) ||\n            (isReqFrom && reqMoreEl.checked)\n        ){\n\n            let eventToTrigger = 'change';\n\n            if( isCheckboxOrRadio ){\n                fieldEl = fieldChecked;\n            } else if( !isFieldForChangeEventBoolean ) {\n                eventToTrigger = self.options.fieldOptions.validateOnEvents.split(' ').filter(function(evName){\n                    return evName !== 'change';\n                })[0] || 'input';\n            }\n\n            let newEvent = new Event(eventToTrigger, {'bubbles': (eventToTrigger !== 'blur'), 'cancelable': true});\n            fieldEl.dispatchEvent(newEvent);\n\n        }\n    });\n\n    self.isInitialized = true;\n\n    return self;\n\n}\n","\nimport { isPlainObject, mergeObjects } from './helper.js';\n//import { ajaxCall }     from './ajaxCall.js';\nimport { ajaxCall }     from './ajaxCallXhr.js';\n\nexport function submit( options = {}, event = null ){\n\n    const self = this,\n          formEl = self.formEl,\n          eventPreventDefault = ( enableBtn = true ) => {\n              if( btnEl && enableBtn ){ btnEl.disabled = false; }\n              if( event ){ event.preventDefault(); }\n          };\n    \n    options.fieldOptions = mergeObjects( {}, self.options.fieldOptions, options.fieldOptions );\n    options.formOptions = mergeObjects( {}, self.options.formOptions, options.formOptions );\n    \n    const handleValidation = options.fieldOptions.handleValidation,\n          formValidation = (handleValidation ? self.validateForm( options.fieldOptions ) : { result: true });\n\n    const btnEl = formEl.querySelector('[type=\"submit\"]'),\n          isAjaxForm = options.formOptions.ajaxSubmit;\n    \n    let formDataObj = (isAjaxForm ? self.getFormData() : null),\n        callbacksBeforeSend = [],\n        beforeSendOpt = options.formOptions.beforeSend;\n\n    if( typeof beforeSendOpt === 'function' || Array.isArray(beforeSendOpt) ){\n        let beforeSendData = {\n                stopExecution: false\n            },\n            stopCallbackLoop = false;\n\n        if( formDataObj ){\n            beforeSendData.formData = formDataObj;\n        }\n\n        if( typeof beforeSendOpt === 'function' ){\n            callbacksBeforeSend.push( beforeSendOpt );\n        } else if( Array.isArray(beforeSendOpt) ) {\n            callbacksBeforeSend = beforeSendOpt;\n        }\n\n        callbacksBeforeSend.forEach(function(cbFn){\n            if( !stopCallbackLoop ){\n                let beforeSendFn = cbFn.call( self, beforeSendData, options );\n                \n                if( isPlainObject(beforeSendFn) ){\n                    formDataObj = beforeSendFn.formData || formDataObj;\n                    if( beforeSendFn.stopExecution ){\n                        stopCallbackLoop = true;\n                    }\n                }\n            }\n        });\n\n        if( stopCallbackLoop ){\n            eventPreventDefault();\n            return false;\n        }\n    }\n\n    if( !formValidation.result || (btnEl && btnEl.disabled) ){\n        eventPreventDefault();\n        return false;\n    }\n\n    if( btnEl ){\n        btnEl.disabled = true;\n    }\n    \n    if( isAjaxForm ){\n\n        // AJAX FORM SUBMIT\n        eventPreventDefault(false);\n        ajaxCall.call(self, formDataObj, options);\n\n    } else if( !event ){\n\n        // TRIGGER SUBMIT EVENT\n        let submitEvent = new Event('submit', {'bubbles': true, 'cancelable': true});\n        formEl.dispatchEvent(submitEvent);\n\n    }\n    \n}\n","\nimport { executeCallback, mergeObjects, serializeObject } from './helper.js';\n\n// AJAX CALL USING XMLHttpRequest API\nexport function ajaxCall( formDataObj, options ){\n\n    let self = this,\n        formEl = self.formEl,\n        fieldOptions = options.fieldOptions,\n        formOptions = options.formOptions,\n        btnEl = formEl.querySelector('[type=\"submit\"]'),\n        timeoutTimer,\n        xhrOptions = mergeObjects( {}, formOptions.ajaxOptions ),\n        isMultipart = xhrOptions.contentType === 'multipart/form-data';\n\n    xhrOptions.data = formDataObj;\n    \n    if( isMultipart && fieldOptions.handleFileUpload ){\n        let formDataMultipart = new FormData();\n        \n        for(let key in xhrOptions.data){\n            formDataMultipart.append( key, xhrOptions.data[key] );\n        }\n        \n        Array.from( formEl.querySelectorAll('[type=\"file\"]') ).forEach(function( field ){\n            Array.from(field.files).forEach(function( file, idx ){\n                let name = field.name+'['+ idx +']';\n                formDataMultipart.append( name, file, file.name );\n            });\n        });\n        \n        xhrOptions.data = formDataMultipart;\n    }\n\n    let XHR = new XMLHttpRequest(),\n        ajaxResponse = {},\n        parseResponse = function( xhr ){\n            let data = xhr.responseText,\n                getJSON = function(){\n                    try{\n                        let obj = JSON.parse(data);\n                        return obj;\n                    } catch(e){\n                        return false;\n                    }\n                },\n                getXML_HTML = function(){\n                    try{\n                        let isXML = xhr.responseXML !== null,\n                            obj = (isXML ? new DOMParser().parseFromString(data, 'text/xml') : data);\n                        return obj;\n                    } catch(e){\n                        return false;\n                    }\n                };\n            \n            return (getJSON() || getXML_HTML() || data);\n        },\n        successFn = function(e) {\n            let xhr = e.target;\n\n            if( xhr.status === 200 ){\n                let responseData = parseResponse(xhr);\n                ajaxResponse = { status: 'success', code: xhr.status, data: responseData };\n                executeCallback.call( self, formOptions.onSubmitSuccess, ajaxResponse );\n            } else {\n                errorFn(e);\n            }\n        },\n        errorFn = function(e) {\n            let xhr = e.target;\n            ajaxResponse = { status: 'error', code: xhr.status, message: xhr.statusText };\n            executeCallback.call( self, formOptions.onSubmitError, ajaxResponse );\n        },\n        completeFn = function(e) {\n            if( timeoutTimer ){\n                window.clearTimeout( timeoutTimer );\n            }\n\n            btnEl.disabled = false;\n            executeCallback.call( self, formOptions.onSubmitComplete, ajaxResponse );\n        };\n    \n    XHR.addEventListener('load',    successFn, false);\n    XHR.addEventListener('error',   errorFn,    false);\n    XHR.addEventListener('loadend', completeFn,  false);\n    \n    if( xhrOptions.method === 'GET' ){\n        xhrOptions.url += ( /\\?/.test(xhrOptions.url) ? '&' : '?' ) + serializeObject( xhrOptions.data );\n        if( xhrOptions.cache === false ){\n            xhrOptions.url +=  (/\\&/.test(xhrOptions.url) ? '&' : '') + '_=' + (new Date().getTime());\n        }\n    }\n    \n    XHR.open(xhrOptions.method, xhrOptions.url, xhrOptions.async);\n\n    if ( xhrOptions.xhrFields ) {\n        for ( let i in xhrOptions.xhrFields ) {\n            XHR[ i ] = xhrOptions.xhrFields[ i ];\n        }\n    }\n\n    if ( xhrOptions.mimeType && XHR.overrideMimeType ) {\n        XHR.overrideMimeType( xhrOptions.mimeType );\n    }\n    \n    if( xhrOptions.data && xhrOptions.contentType !== 'multipart/form-data' ){\n        XHR.setRequestHeader('Content-Type', xhrOptions.contentType);\n    }\n    \n    for( let h in xhrOptions.headers ){\n        XHR.setRequestHeader( h, xhrOptions.headers[h] );\n    }\n\n    if( !isMultipart ){\n        xhrOptions.data = JSON.stringify(xhrOptions.data);\n    }\n    \n    XHR.send( (xhrOptions.method === 'GET' ? null : xhrOptions.data) );\n\n    if ( xhrOptions.async && xhrOptions.timeout > 0 ) {\n        timeoutTimer = window.setTimeout(function() {\n            XHR.abort();\n        }, xhrOptions.timeout);\n    }\n    \n}\n","\nimport { executeCallback, isDOMNode, mergeObjects, validateFieldObjDefault } from './helper.js';\nimport { isValidField } from './isValidField.js';\n\nexport function validateField( fieldElem, fieldOptionsObj = {} ){\n\n    const self = this,\n          fieldEl = (typeof fieldElem === 'string' ? self.formEl.querySelector(fieldElem) : fieldElem);\n    let obj = mergeObjects({}, validateFieldObjDefault);\n\n    if( isDOMNode(fieldEl) ){\n        let fieldOptions = mergeObjects({}, self.options.fieldOptions, fieldOptionsObj);\n        obj = isValidField.call( self, fieldEl, fieldOptionsObj );\n        executeCallback.call( self, fieldOptions.onValidation, [obj], {fieldOptions} );\n    }\n\n    return obj;\n    \n}\n","\nimport { mergeObjects, toCamelCase } from './helper.js';\nimport { validationRulesAttributes } from './validationRules.js';\n\nexport function isValid( fieldEl, fieldOptions = {} ){\n\n    const self = this,\n          fieldType = ( fieldEl.matches('[data-subtype]') ? toCamelCase( fieldEl.getAttribute('data-subtype') ) : fieldEl.type ),\n          fieldValue = fieldEl.value,\n          isValidValue = fieldValue.trim().length > 0,\n          // ALPHABETICAL REVERSE ORDER\n          fieldAttributes = Array.from(fieldEl.attributes).sort(function(a,b){ return a.name < b.name });\n\n    let attrValidations = [],\n        attrValidationsResult = isValidValue,\n        obj = { result: isValidValue };\n\n    if( !isValidValue ){\n        obj.errors = { empty: true };\n        obj.result = false;\n        return obj;\n    }\n\n    // COLLECT SPECIFIC VALIDATIONS FOR validationRulesAttributes\n    fieldAttributes.forEach(function(attr){\n        // FOR data-* ATTRIBUTES -> REMOVE \"data-\" AND TRANSFORM TO CAMELCASE\n        let attrName = toCamelCase( attr.name.replace('data-', '') ),\n            attrValue = attr.value,\n            isTypeValueWithFn = attrName === 'type' && typeof validationRulesAttributes[attrValue] === 'function',\n            isAttrNameWithFn = typeof validationRulesAttributes[attrName] === 'function';\n\n        if( isTypeValueWithFn || isAttrNameWithFn ){\n\n            let extraValObj = {\n                    attrName: (isTypeValueWithFn ? attrValue : attrName),\n                    attrValue: attrValue,\n                    fieldEl,\n                    fieldOptions\n                };\n\n            if( isTypeValueWithFn || attrName === 'requiredFrom' ){\n                // THESE VALIDATIONS MUST RUN BEFORE ALL OTHERS\n                attrValidations.unshift( extraValObj );\n            } else {\n                attrValidations.push( extraValObj );\n            }\n\n        }\n    });\n\n    // RUN SPECIFIC VALIDATIONS FOR validationRulesAttributes\n    attrValidations.forEach(function(item){\n        let extraVal = validationRulesAttributes[item.attrName]( item, fieldEl );\n        if( !extraVal.result ){\n            obj = mergeObjects({}, obj, extraVal);\n            attrValidationsResult = false;\n        }\n    });\n\n    // RUN VALIDATIONS FOR validationRules\n    if( typeof self.validationRules[fieldType] === 'function' ){\n        obj = mergeObjects( {}, obj, self.validationRules[fieldType].call(self, fieldValue, fieldEl) );\n        obj.result = obj.result && attrValidationsResult;\n        if( !obj.result ){\n            if( typeof obj.errors === 'undefined' ){\n                obj.errors = {};\n            }\n            obj.errors.rule = true;\n        }\n    }\n\n    return obj;\n\n}\n","\nimport { executeCallback, mergeObjects } from './helper.js';\nimport { isValidForm } from './isValidForm.js';\n\nexport function validateForm( fieldOptionsObj = {} ){\n\n    const self = this,\n          fieldOptions = mergeObjects({}, self.options.fieldOptions, fieldOptionsObj),\n          obj = isValidForm.call( self, fieldOptions );\n\n    executeCallback.call( self, fieldOptions.onValidation, obj.fields, {fieldOptions} );\n\n    return obj;\n    \n}\n","\nimport { fieldsStringSelector, isDOMNode, mergeObjects, validateFormObjDefault } from './helper.js';\nimport { isValidField } from './isValidField.js';\n\nexport function isValidForm( fieldOptionsObj = {} ){\n\n    const self = this,\n          formEl = self.formEl;\n\n    let obj = mergeObjects({}, validateFormObjDefault);\n\n    if( !isDOMNode(formEl) || !formEl.matches('[novalidate]') ){\n        obj.result = false;\n        return obj;\n    }\n    \n    let fieldOptions = mergeObjects( {}, self.options.fieldOptions, fieldOptionsObj, {focusOnRelated: false} ),\n        currentFieldName = '',\n        currentFieldType = '';\n    \n    Array.from( formEl.querySelectorAll(fieldsStringSelector) ).forEach(function( fieldEl ){\n        let name = fieldEl.name,\n            type = fieldEl.type,\n            fieldData = {};\n        \n        if( (name === currentFieldName && type === currentFieldType) ){ return true; }\n        \n        if( !fieldEl.matches('[data-required-from]') ){\n            currentFieldName = name;\n            currentFieldType = type;\n        }\n        \n        fieldData = isValidField.call( self, fieldEl, fieldOptions );\n\n        if( !fieldData.result ){\n            obj.result = false;\n        }\n        \n        obj.fields.push( fieldData );\n    });\n    \n    return obj;\n\n}\n"],"sourceRoot":""}