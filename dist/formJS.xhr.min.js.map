{"version":3,"sources":["webpack:///webpack/bootstrap","webpack:///./src/modules/helper.js","webpack:///./src/modules/validationRules.js","webpack:///./src/modules/isValidField.js","webpack:///./src/index.js","webpack:///./src/modules/options.js","webpack:///./src/modules/optionsUtils.js","webpack:///./src/modules/optionsAjaxXhr.js","webpack:///./src/modules/validationErrors.js","webpack:///./src/modules/constructor.js","webpack:///./src/modules/listenerCallbacks.js","webpack:///./src/modules/submit.js","webpack:///./src/modules/ajaxCallXhr.js","webpack:///./src/modules/formStartup.js","webpack:///./src/modules/destroy.js","webpack:///./src/modules/getFormData.js","webpack:///./src/modules/init.js","webpack:///./src/modules/validateField.js","webpack:///./src/modules/checkDirtyField.js","webpack:///./src/modules/isValid.js","webpack:///./src/modules/validateForm.js","webpack:///./src/modules/isValidForm.js"],"names":["installedModules","__webpack_require__","moduleId","exports","module","i","l","modules","call","m","c","d","name","getter","o","Object","defineProperty","enumerable","get","r","Symbol","toStringTag","value","t","mode","__esModule","ns","create","key","bind","n","default","object","property","prototype","hasOwnProperty","p","s","e","iterator","constructor","isDOMNode","fieldsStringSelector","addClass","element","cssClasses","split","forEach","className","classList","add","checkFormEl","formEl","isString","_typeof","isFormSelector","document","querySelector","tagName","toLowerCase","result","executeCallback","callbackOption","callbackData","tempOptions","arguments","length","self","this","options","mergeObjects","callbackFnList","push","Array","isArray","cbFn","getSplitChar","string","splitChar","indexOf","node","Element","isPrototypeOf","isFieldForChangeEvent","fieldEl","matches","isNodeList","nodeList","NodeList","isPlainObject","toString","out","obj","isObject","concat","slice","removeClass","remove","serializeObject","keys","reduce","a","k","encodeURIComponent","join","toCamelCase","replace","all","letter","toUpperCase","validateFieldObjDefault","validateFormObjDefault","fields","validationRulesAttributes","validationRules","_helper","date","test","email","number","numberFloat","numberInteger","checkbox","data","dataChecksEl","closest","checked","checks","attrValue","getAttribute","JSON","parse","checkedElLength","querySelectorAll","isMinOk","isMaxOk","errors","minChecks","maxChecks","Error","equalTo","checkFromEl","exactLength","valueLength","minlength","maxlength","file","maxFileSize","fieldOptions","MIMEtype","accept","RegExp","from","files","exceedMaxFileSize","size","isAcceptedFileType","type","acceptedFileType","valueL","isMinlengthOk","isMaxlengthOk","stringLength","max","isDate","maxVal","reverse","min","minVal","pattern","fieldPattern","radio","fieldChecked","trim","requiredFrom","isValidValue","reqMoreEl","required","isValidField","fieldElem","fieldOptionsObj","Promise","resolve","isRequired","isReqFrom","isValidateIfFilled","checkDirtyField","isValid","then","_checkDirtyField","_isValid","configurable","writable","_options","_validationRules","_validationErrors","_constructor","_destroy2","_getFormData2","_init2","_validateField2","_validateForm2","Form","optionsObj","constructorFn","destroy","getFormData","init","validateField","validateForm","errorsObj","validationErrors","rulesObj","isInitialized","version","window","FormJS","_optionsUtils","_optionsAjaxXhr","dirty","error","errorEmpty","errorRule","valid","focusOnRelated","handleFileUpload","handleValidation","onPastePrevented","onValidation","defaultCallbacksInOptions","preventPasteFields","skipUIfeedback","strictHtmlValidation","validateOnEvents","formOptions","ajaxOptions","ajaxSubmit","beforeSend","handleSubmit","onSubmitComplete","onSubmitError","onSubmitSuccess","fieldsArray","containerEl","errorClasses","extraErrorClass","isChecks","empty","errorClassToRemove","filteredFields","formData","isCheckbox","isRadio","isSelect","checkboxes","filter","field","checkedRadio","selectedOpts","option","selected","async","cache","contentType","headers","X-Requested-With","method","timeout","url","location","href","missingAtChar","splitAt_at","missingUserName","missingDomain","missingExtensionDot","missingExtension","extLength","minlengthExtension","argsL","checkFormElem","formjs","listenerCallbacks","dataTypeNumber","callbackFns","keypressMaxlength","pastePrevent","submit","validation","freeze","formStartup","_listenerCallbacks","_formStartup","_submit2","event","target","fieldValue","stopImmediatePropagation","valueReplaced","maxLength","keyPressed","which","keyCode","preventDefault","eventName","isFieldForChangeEventBoolean","isReqMore","findReqMoreEl","findReqFromEl","id","focus","isAjaxForm","btnEl","eventPreventDefault","enableBtn","disabled","formValidation","formDataObj","callbacksBeforeSend","beforeSendData","stopExecution","stopCallbackLoop","beforeSendFn","ajaxCall","_ajaxCallXhr","timeoutTimer","xhrOptions","isMultipart","formDataMultipart","FormData","append","idx","XHR","XMLHttpRequest","ajaxResponse","errorFn","xhr","status","code","message","statusText","addEventListener","responseData","responseText","responseXML","isXML","DOMParser","parseFromString","clearTimeout","Date","getTime","open","xhrFields","h","mimeType","overrideMimeType","setRequestHeader","stringify","send","setTimeout","abort","useCapturing","validationListenerNames","removeEventListener","formFieldsEl","elem","formFields","currentFieldName","currentFieldType","isCheckboxOrRadio","fakeEventObj","_isValidField","fieldType","fieldAttributes","attributes","sort","b","attrValidations","attrValidationsResult","attr","attrName","isTypeValueWithFn","isAttrNameWithFn","extraValObj","unshift","item","extraVal","prom","fieldErrors","rule","isValidForm","_isValidForm","fieldsList","map","list","areAllFieldsValid","fieldObj"],"mappings":"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","file":"formJS.xhr.min.js","sourcesContent":[" \t// The module cache\n \tvar installedModules = {};\n\n \t// The require function\n \tfunction __webpack_require__(moduleId) {\n\n \t\t// Check if module is in cache\n \t\tif(installedModules[moduleId]) {\n \t\t\treturn installedModules[moduleId].exports;\n \t\t}\n \t\t// Create a new module (and put it into the cache)\n \t\tvar module = installedModules[moduleId] = {\n \t\t\ti: moduleId,\n \t\t\tl: false,\n \t\t\texports: {}\n \t\t};\n\n \t\t// Execute the module function\n \t\tmodules[moduleId].call(module.exports, module, module.exports, __webpack_require__);\n\n \t\t// Flag the module as loaded\n \t\tmodule.l = true;\n\n \t\t// Return the exports of the module\n \t\treturn module.exports;\n \t}\n\n\n \t// expose the modules object (__webpack_modules__)\n \t__webpack_require__.m = modules;\n\n \t// expose the module cache\n \t__webpack_require__.c = installedModules;\n\n \t// define getter function for harmony exports\n \t__webpack_require__.d = function(exports, name, getter) {\n \t\tif(!__webpack_require__.o(exports, name)) {\n \t\t\tObject.defineProperty(exports, name, { enumerable: true, get: getter });\n \t\t}\n \t};\n\n \t// define __esModule on exports\n \t__webpack_require__.r = function(exports) {\n \t\tif(typeof Symbol !== 'undefined' && Symbol.toStringTag) {\n \t\t\tObject.defineProperty(exports, Symbol.toStringTag, { value: 'Module' });\n \t\t}\n \t\tObject.defineProperty(exports, '__esModule', { value: true });\n \t};\n\n \t// create a fake namespace object\n \t// mode & 1: value is a module id, require it\n \t// mode & 2: merge all properties of value into the ns\n \t// mode & 4: return value when already ns object\n \t// mode & 8|1: behave like require\n \t__webpack_require__.t = function(value, mode) {\n \t\tif(mode & 1) value = __webpack_require__(value);\n \t\tif(mode & 8) return value;\n \t\tif((mode & 4) && typeof value === 'object' && value && value.__esModule) return value;\n \t\tvar ns = Object.create(null);\n \t\t__webpack_require__.r(ns);\n \t\tObject.defineProperty(ns, 'default', { enumerable: true, value: value });\n \t\tif(mode & 2 && typeof value != 'string') for(var key in value) __webpack_require__.d(ns, key, function(key) { return value[key]; }.bind(null, key));\n \t\treturn ns;\n \t};\n\n \t// getDefaultExport function for compatibility with non-harmony modules\n \t__webpack_require__.n = function(module) {\n \t\tvar getter = module && module.__esModule ?\n \t\t\tfunction getDefault() { return module['default']; } :\n \t\t\tfunction getModuleExports() { return module; };\n \t\t__webpack_require__.d(getter, 'a', getter);\n \t\treturn getter;\n \t};\n\n \t// Object.prototype.hasOwnProperty.call\n \t__webpack_require__.o = function(object, property) { return Object.prototype.hasOwnProperty.call(object, property); };\n\n \t// __webpack_public_path__\n \t__webpack_require__.p = \"\";\n\n\n \t// Load entry module and return exports\n \treturn __webpack_require__(__webpack_require__.s = 3);\n","\nexport const\n\nfieldsStringSelector = 'input:not([type=\"reset\"]):not([type=\"submit\"]):not([type=button]):not([type=hidden]), select, textarea',\n\naddClass = function( element, cssClasses ){\n    cssClasses.split(' ').forEach(function(className){\n        element.classList.add( className );\n    });\n},\n\ncheckFormEl = function( formEl ){\n    let isString = typeof formEl,\n        isValidNodeSelector = isString === 'string' && isDOMNode(document.querySelector(formEl)),\n        isFormSelector = isValidNodeSelector && document.querySelector(formEl).tagName.toLowerCase() === 'form',\n        obj = {\n            result: isDOMNode(formEl) || isFormSelector,\n            element: (isString === 'string' ? document.querySelector(formEl) : formEl)\n        };\n\n    return obj;\n},\n\nexecuteCallback = function( callbackOption, callbackData, tempOptions = {} ){\n    let self = this,\n        options = mergeObjects({}, self.options, tempOptions),\n        callbackFnList = [];\n\n    if( typeof callbackOption === 'function' ){\n        callbackFnList.push( callbackOption );\n    } else if( Array.isArray(callbackOption) ) {\n        callbackFnList = callbackOption;\n    }\n\n    callbackFnList.forEach(function(cbFn){\n        cbFn.call( self, callbackData, options );\n    });\n},\n\ngetSplitChar = function( string ){\n    let splitChar = '.';\n\n    if( string.indexOf(splitChar) === -1 ){\n        if( string.indexOf('-') >= 0 ){\n            splitChar = '-';\n        } else if( string.indexOf('/') >= 0 ){\n            splitChar = '/';\n        }\n    }\n\n    return splitChar;\n},\n\nisDOMNode = function( node ){\n    return Element.prototype.isPrototypeOf( node );\n},\n\nisFieldForChangeEvent = function ( fieldEl ) {\n    return fieldEl.matches('select, [type=\"radio\"], [type=\"checkbox\"], [type=\"file\"]');\n},\n\nisNodeList = function( nodeList ){\n    return NodeList.prototype.isPrototypeOf( nodeList );\n},\n\nisPlainObject = function( object ){\n    return Object.prototype.toString.call( object ) === '[object Object]';\n},\n\nmergeObjects = function( out = {} ){\n    for(let i=1; i<arguments.length; i++){\n        let obj = arguments[i];\n\n        if(!obj){ continue; }\n\n        for(let key in obj){\n            let isArray = Object.prototype.toString.call(obj[key]) === \"[object Array]\";\n            let isObject = Object.prototype.toString.call(obj[key]) === \"[object Object]\";\n\n            // COPY ONLY ENUMERABLE PROPERTIES\n            if( obj.hasOwnProperty(key) ){\n                if( isArray ){\n\n                    if( typeof out[key] === 'undefined' ){\n                        out[key] = [];\n                    }\n                    out[key] = out[key].concat( obj[key].slice(0) );\n\n                } else if( isObject ){\n\n                    out[key] = mergeObjects(out[key], obj[key]);\n\n                } else {\n\n                    // * STRING | NUMBER | BOOLEAN | FUNCTION\n                    if( Array.isArray(out[key]) ){\n                        // IF THIS IS ONE OF ABOVE (*) AND THE DESTINATION OBJECT IS AN ARRAY\n                        out[key].push(obj[key]);\n                    } else {\n                        out[key] = obj[key];\n                    }\n\n                }\n            }\n        }\n    }\n\n    return out;\n},\n\nremoveClass = function( element, cssClasses ){\n    cssClasses.split(' ').forEach(function(className){\n        element.classList.remove( className );\n    });\n},\n\nserializeObject = function( obj ){\n    var objToString = (\n            (obj && typeof obj === 'object' && obj.constructor === Object) ? \n            Object.keys(obj)\n                .reduce(function(a,k){\n                    a.push(k+'='+encodeURIComponent(obj[k]));\n                    return a\n                },[]).join('&') : \n            obj\n    );\n    return objToString;\n},\n\ntoCamelCase = function( string ){\n    return string.replace(/-([a-z])/ig, function(all, letter){ return letter.toUpperCase(); });\n},\n\nvalidateFieldObjDefault = { result: false, fieldEl: null },\n\nvalidateFormObjDefault = { result: true, fields: [] }\n","\nimport { getSplitChar } from './helper.js';\n\nexport const validationRules = {\n            \n    date: function( string ){\n        // DATE AS ISO 8601 DATE FORMAT     YYYY MM DD | YYYY/MM/DD | YYYY.MM.DD | YYYY-MM-DD\n\n        let date = /^(((19|[2-9]\\d)\\d{2})[ \\/\\-.](0[13578]|1[02])[ \\/\\-.](0[1-9]|[12]\\d|3[01]))|(((19|[2-9]\\d)\\d{2})[ \\/\\-.](0[13456789]|1[012])[ \\/\\-.](0[1-9]|[12]\\d|30))|(((19|[2-9]\\d)\\d{2})[ \\/\\-.]02[ \\/\\-.](0[1-9]|1\\d|2[0-8]))|(((1[6-9]|[2-9]\\d)(0[48]|[2468][048]|[13579][26])|((16|[2468][048]|[3579][26])00))[ \\/\\-.]02[ \\/\\-.]29)$/g.test( string ),\n            obj = {\n                result: date\n            };\n\n        return obj;\n    },\n    \n    email: function( string ){\n        // FROM https://emailregex.com\n        // AS FOR RFC 5322 Official Standard EMAIL MUST BE AT LEAST:\n        // a@a.aa\n        const obj = {\n            result: /^(([^<>()\\[\\]\\\\.,;:\\s@\"]+(\\.[^<>()\\[\\]\\\\.,;:\\s@\"]+)*)|(\".+\"))@((\\[[0-9]{1,3}\\.[0-9]{1,3}\\.[0-9]{1,3}\\.[0-9]{1,3}])|(([a-zA-Z\\-0-9]+\\.)+[a-zA-Z]{2,}))$/.test( string )\n        };\n\n        return obj;\n    },\n    \n    number: function( string ){\n        // ALL NUMBERS ( INTEGERS AND FLOATING )\n        // VALID NUMBERS: 123 | 123.456 | .123\n        let obj = {\n            result: /[+-]?([0-9]*[.])?[0-9]+/.test( string )\n        };\n\n        return obj;\n    },\n    \n    numberFloat: function( string ){\n        // ONLY FLOATING NUMBERS\n        // VALID NUMBERS: 123.456 | .123\n        let obj = {\n            result: /[+-]?([0-9]*[.])[0-9]+/.test( string )\n        };\n\n        return obj;\n    },\n    \n    numberInteger: function( string ){\n        // ONLY INTEGER NUMBERS\n        let obj = {\n            result: /^\\d+$/.test( string )\n        };\n\n        return obj;\n    }\n    \n}\n\nexport const validationRulesAttributes = {\n\n    checkbox: function( data ){\n        let formEl = data.fieldEl.closest('form'),\n            dataChecksEl = formEl.querySelector('[name=\"' + data.fieldEl.name + '\"][data-checks]'),\n            obj = { result: data.fieldEl.checked };\n\n        if( dataChecksEl !== null ){\n            obj = this.checks({ attrValue: dataChecksEl.getAttribute('data-checks'), fieldEl: dataChecksEl});\n        }\n\n        return obj;\n    },\n\n    checks: function( data ){\n        try {\n            let attrValue = JSON.parse(data.attrValue),\n                fieldEl = data.fieldEl,\n                formEl = fieldEl.closest('form'),\n                checkedElLength = formEl.querySelectorAll('[name=\"' + fieldEl.name + '\"]:checked').length,\n                isMinOk = checkedElLength >= attrValue[0],\n                isMaxOk = checkedElLength <= attrValue[1],\n                obj = {\n                    result: isMinOk && isMaxOk\n                };\n\n            if( !obj.result ){\n\n                obj.errors = { checks: true };\n                if( !isMinOk ){ obj.errors.minChecks = true; }\n                if( !isMaxOk ){ obj.errors.maxChecks = true; }\n\n            }\n\n            return obj;\n        } catch(e){\n            throw new Error('\"data-checks\" attribute is not a valid array!');\n        }\n    },\n\n    equalTo: function( data ){\n        let fieldEl = data.fieldEl,\n            formEl = fieldEl.closest('form'),\n            checkFromEl = formEl.querySelector( '[name=\"' + fieldEl.getAttribute('data-equal-to') + '\"]' ),\n            obj = {\n                result: fieldEl.value === checkFromEl.value\n            };\n\n        if( !obj.result ){\n            \n            obj.errors = { equalTo: true };\n        }\n\n        return obj;\n    },\n    \n    exactLength: function( data ){\n        let valueLength = data.fieldEl.value.length,\n            exactLength = (data.attrValue * 1),\n            obj = {\n                result: valueLength === exactLength\n            };\n\n        if( !obj.result ){\n\n            obj.errors = { exactLength: true };\n            if( valueLength < exactLength ){ obj.errors.minlength = true; }\n            else { obj.errors.maxlength = true; }\n\n        }\n\n        return obj;\n    },\n\n    file: function( data ){\n        let fieldEl = data.fieldEl,\n            maxFileSize = (fieldEl.getAttribute('data-max-file-size') || data.fieldOptions.maxFileSize) * 1,\n            MIMEtype = (fieldEl.accept ? new RegExp(fieldEl.accept.replace( '*', '[^\\\\/,]+' )) : null),\n            filesList = Array.from(fieldEl.files),\n            obj = { result: true };\n\n        filesList.forEach(function( file ){\n            let exceedMaxFileSize = maxFileSize > 0 && (file.size/1024/1024) > maxFileSize,\n                isAcceptedFileType = (MIMEtype !== null ? MIMEtype.test(file.type) : true);\n\n            if( exceedMaxFileSize || !isAcceptedFileType ){\n                obj.result = false;\n                if( typeof obj.errors === 'undefined' ){\n                    obj.errors = {};\n                }\n                obj.errors.file = true;\n                if( exceedMaxFileSize ){ obj.errors.maxFileSize = true; }\n                if( !isAcceptedFileType ){ obj.errors.acceptedFileType = true; }\n\n            }\n        });\n\n        return obj;\n    },\n\n    length: function( data ){\n        try {\n            let valueL = data.fieldEl.value.length,\n                attrValue = JSON.parse(data.attrValue),\n                isMinlengthOk = valueL >= attrValue[0],\n                isMaxlengthOk = valueL <= attrValue[1],\n                obj = { result: isMinlengthOk && isMaxlengthOk };\n\n            if( !obj.result ){\n\n                obj.errors = { stringLength: true };\n                if( !isMinlengthOk ){ obj.errors.minlength = true; }\n                if( !isMaxlengthOk ){ obj.errors.maxlength = true; }\n\n            }\n\n            return obj;\n        } catch(e){\n            throw new Error('\"data-length\" attribute is not a valid array!');\n        }\n    },\n    \n    max: function( data ){\n        let fieldEl = data.fieldEl,\n            isDate = (fieldEl.matches('[type=\"date\"]') || fieldEl.matches('[data-subtype=\"date\"]') || fieldEl.matches('[data-subtype=\"dateDDMMYYYY\"]')),\n            value = data.fieldEl.value,\n            maxVal = data.attrValue;\n        \n        if( isDate ){\n\n            let splitChar = getSplitChar( value );\n\n            if( value.indexOf(splitChar) === 2 ){\n                // DD MM YYYY\n                value = value.split( splitChar ).reverse();\n            } else {\n                // YYYY MM DD\n                value = value.split( splitChar );\n            }\n\n            value = value.join('');\n            maxVal = maxVal.split('-').join('');\n\n        }\n\n        value = value * 1;\n        maxVal = maxVal * 1;\n\n        let obj = {\n                result: value <= maxVal\n            };\n\n        if( !obj.result ){\n            \n            obj.errors = { max: true };\n        }\n        \n        return obj;\n    },\n    \n    maxlength: function( data ){\n        const obj = {\n            result: data.fieldEl.value.length <= (data.attrValue * 1)\n        };\n\n        if( !obj.result ){\n\n            obj.errors = { maxlength: true };\n        }\n\n        return obj;\n    },\n    \n    min: function( data ){\n        let fieldEl = data.fieldEl,\n            isDate = (fieldEl.matches('[type=\"date\"]') || fieldEl.matches('[data-subtype=\"date\"]') || fieldEl.matches('[data-subtype=\"dateDDMMYYYY\"]')),\n            value = data.fieldEl.value,\n            minVal = data.attrValue;\n        \n        if( isDate ){\n\n            let splitChar = getSplitChar( value );\n\n            if( value.indexOf(splitChar) === 2 ){\n                // DD MM YYYY\n                value = value.split( splitChar ).reverse();\n            } else {\n                // YYYY MM DD\n                value = value.split( splitChar );\n            }\n\n            value = value.join('');\n            minVal = minVal.split('-').join('');\n\n        }\n\n        value = value * 1;\n        minVal = minVal * 1;\n\n        let obj = {\n                result: value >= minVal\n            };\n\n        if( !obj.result ){\n            \n            obj.errors = { min: true };\n        }\n        \n        return obj;\n    },\n\n    minlength: function( data ){\n        const obj = {\n            result: data.fieldEl.value.length >= (data.attrValue * 1)\n        };\n\n        if( !obj.result ){\n\n            obj.errors = { minlength: true };\n        }\n\n        return obj;\n    },\n\n    pattern: function( data ){\n        let fieldEl = data.fieldEl,\n            fieldPattern = fieldEl.pattern,\n            fieldRegex = new RegExp( fieldPattern ),\n            obj = {\n                result: fieldRegex.test( fieldEl.value )\n            };\n\n        if( !obj.result ){\n\n            obj.errors = { pattern: true };\n        }\n\n        return obj;\n    },\n\n    radio: function( data ){\n        let fieldEl = data.fieldEl,\n            fieldChecked = fieldEl.closest('form').querySelector( '[name=\"'+ fieldEl.name +'\"]:checked' ),\n            isValid = fieldChecked !== null && fieldChecked.value.trim().length > 0,\n            obj = { result: isValid };\n\n        return obj;\n    },\n\n    requiredFrom: function( data ){\n        let fieldEl = data.fieldEl,\n            formEl = fieldEl.closest('form'),\n            isValidValue = fieldEl.value.trim().length > 0,\n            reqMoreEl = formEl.querySelector( fieldEl.getAttribute('data-required-from') ),\n            checkedEl = formEl.querySelector( '[name=\"'+ reqMoreEl.name +'\"]:checked' ),\n            obj = { result: checkedEl !== null };\n\n        if( reqMoreEl.checked && reqMoreEl.required ){\n            obj.result = isValidValue;\n        }\n\n        if( !obj.result ){\n            obj.errors = { requiredFrom: true };\n        }\n        \n        return obj;\n    }\n    \n}\n","\nimport { isDOMNode, mergeObjects, validateFieldObjDefault } from './helper.js';\nimport { checkDirtyField } from './checkDirtyField.js';\nimport { isValid } from './isValid.js';\n\nexport function isValidField( fieldElem, fieldOptionsObj = {} ){\n\n    const self = this,\n          fieldEl = (typeof fieldElem === 'string' ? self.formEl.querySelector(fieldElem) : fieldElem);\n\n    let obj = mergeObjects({}, validateFieldObjDefault);\n\n    if( !isDOMNode(fieldEl) ){ return Promise.resolve(obj); }\n\n    let options =           mergeObjects( {}, self.options.fieldOptions, fieldOptionsObj ),\n        isValidValue =      fieldEl.value.trim().length > 0,\n        isRequired =        fieldEl.required,\n        isReqFrom =         fieldEl.matches('[data-required-from]'),\n        isValidateIfFilled =fieldEl.matches('[data-validate-if-filled]');\n\n    checkDirtyField.call( self, fieldEl );\n\n    return new Promise(function(resolve){\n        if(\n            (!isRequired && !isValidateIfFilled && !isReqFrom) ||   // IT IS A NORMAL FORM FIELD\n            (isValidateIfFilled && !isValidValue) ||                // IT IS data-validate-if-filled AND EMPTY\n            (isReqFrom && !isRequired )                             // IT IS data-required-from AND NOT required\n        ){\n\n            obj.result = true;\n        \n        } else {\n            \n            obj = isValid.call( self, fieldEl, options );\n            \n        }\n        \n        resolve( obj );\n\n    }).then(obj => {\n\n        obj.fieldEl = fieldEl;\n        //console.log(obj);\n        return obj;\n\n    });\n\n}\n","\n/**! formJS v3.0.0 | Valerio Di Punzio (@SimplySayHi) | https://www.valeriodipunzio.com/plugins/formJS/ | https://github.com/SimplySayHi/formJS | MIT license */\n\nimport { mergeObjects }         from './modules/helper.js';\nimport { options }              from './modules/options.js';\nimport { validationRules }      from './modules/validationRules.js';\nimport { validationErrors }     from './modules/validationErrors.js';\n\n// CONSTRUCTOR FUNCTION & PUBLIC METHODS\nimport { constructorFn }        from './modules/constructor.js';\nimport { destroy }              from './modules/destroy.js';\nimport { getFormData }          from './modules/getFormData.js';\nimport { init }                 from './modules/init.js';\nimport { validateField }        from './modules/validateField.js';\nimport { validateForm }         from './modules/validateForm.js';\n\nconst version = '3.0.0';\n\nclass Form {\n\n    constructor( formEl, optionsObj ){\n        constructorFn.call(this, formEl, optionsObj);\n    }\n\n    destroy(){\n        destroy.call(this);\n    }\n    \n    getFormData(){\n        return getFormData.call(this);\n    }\n\n    init(){\n        return init.call(this);\n    }\n\n    validateField( fieldEl, fieldOptions ){\n        return validateField.call(this, fieldEl, fieldOptions);\n    }\n\n    validateForm( fieldOptions ){\n        return validateForm.call(this, fieldOptions);\n    }\n    \n    static addValidationErrors( errorsObj ){\n        this.prototype.validationErrors = mergeObjects({}, this.prototype.validationErrors, errorsObj);\n    }\n\n    static addValidationRules( rulesObj ){\n        this.prototype.validationRules = mergeObjects({}, this.prototype.validationRules, rulesObj);\n    }\n    \n    static setOptions( optionsObj ){\n        this.prototype.options = mergeObjects({}, this.prototype.options, optionsObj);\n    }\n\n}\n\nForm.prototype.isInitialized = false;\nForm.prototype.options = options;\nForm.prototype.validationErrors = validationErrors;\nForm.prototype.validationRules = validationRules;\nForm.prototype.version = version;\n\nif( !window.Form ){ window.Form = Form; }\nif( !window.FormJS ) { window.FormJS = Form; }\n","\nimport { defaultCallbacksInOptions } from './optionsUtils.js';\n//import { ajaxOptions } from './optionsAjax.js';\nimport { ajaxOptions } from './optionsAjaxXhr.js';\n\nexport const options = {\n\n    fieldOptions: {\n        cssClasses: {\n            dirty:              'is-dirty',\n            error:              'has-error',\n            errorEmpty:         'has-error-empty',\n            errorRule:          'has-error-rule',\n            valid:              'is-valid'\n        },\n        focusOnRelated:         true,\n        handleFileUpload:       true,\n        handleValidation:       true,\n        maxFileSize:            10,\n        onPastePrevented:       [],\n        onValidation:           [defaultCallbacksInOptions.fieldOptions.onValidation],\n        preventPasteFields:     '[type=\"password\"], [data-equal-to]',\n        skipUIfeedback:         false,\n        strictHtmlValidation:   true,\n        validateOnEvents:       'input change'\n    },\n\n    formOptions: {\n        ajaxOptions:            ajaxOptions,\n        ajaxSubmit:             true,\n        beforeSend:             [],\n        getFormData:            defaultCallbacksInOptions.formOptions.getFormData,\n        handleSubmit:           true,\n        onSubmitComplete:       [],\n        onSubmitError:          [],\n        onSubmitSuccess:        []\n    }\n    \n}\n","\nimport { addClass, removeClass }    from './helper.js';\n\nexport const defaultCallbacksInOptions = {\n    fieldOptions: {\n\n        onValidation: function onValidationDefault ( fieldsArray, tempOptions ) {\n\n            let self = this,\n                options = tempOptions.fieldOptions;\n\n            fieldsArray.forEach(function( obj ){\n                let fieldEl = obj.fieldEl,\n                    containerEl = fieldEl.closest('[data-formjs-question]'),\n                    isReqFrom = fieldEl.matches('[data-required-from]'),\n                    reqMoreEl = self.formEl.querySelector( fieldEl.getAttribute('data-required-from') );\n                \n                if( containerEl !== null && !options.skipUIfeedback ){\n                    if( obj.result ){\n\n                        if( !isReqFrom || (isReqFrom && reqMoreEl.checked) ){\n                            // IF FIELD IS VALID\n                            let errorClasses = options.cssClasses.error + ' ' + options.cssClasses.errorEmpty + ' ' + options.cssClasses.errorRule;\n                            removeClass( containerEl, errorClasses );\n                            addClass( containerEl, options.cssClasses.valid );\n                        }\n\n                    } else {\n\n                        // IF FIELD IS NOT VALID\n                        let extraErrorClass = options.cssClasses.errorRule;\n\n                        // HANDLE CASE OF FIELD data-checks\n                        let isChecks = fieldEl.matches('[data-checks]'),\n                            checkedElLength = (isChecks ? containerEl.querySelectorAll('[name=\"' + fieldEl.name + '\"]:checked').length : 0);\n\n                        if( (!isChecks && (obj.errors && obj.errors.empty)) || (isChecks && checkedElLength === 0) ){\n                            extraErrorClass = options.cssClasses.errorEmpty;\n                        }\n\n                        let errorClasses = options.cssClasses.error + ' ' + extraErrorClass,\n                            errorClassToRemove = options.cssClasses.errorEmpty + ' ' + options.cssClasses.errorRule;\n                        removeClass( containerEl, options.cssClasses.valid + ' ' + errorClassToRemove );\n                        addClass( containerEl, errorClasses );\n\n                    }\n                }\n            });\n            \n        }\n\n    },\n    formOptions: {\n\n        getFormData: function getFormDataDefault ( filteredFields ) {\n\n            let formData = {},\n                self = this,\n                formEl = self.formEl;\n\n            filteredFields.forEach(function( fieldEl ){\n                let isCheckbox = fieldEl.type === 'checkbox',\n                    isRadio = fieldEl.type === 'radio',\n                    isSelect = fieldEl.matches('select'),\n                    name = fieldEl.name,\n                    value = fieldEl.value;\n                                \n                if( isCheckbox ) {\n                    \n                    value = fieldEl.checked;\n                    let checkboxes = Array.from( formEl.querySelectorAll('[name=\"'+ name +'\"]') );\n                    if( checkboxes.length > 1 ){\n\n                        value = [];\n                        let checkedElems = checkboxes.filter(field => field.checked);\n                        checkedElems.forEach(fieldEl => {\n                            value.push( fieldEl.value );\n                        });\n\n                    }\n                        \n                } else if( isRadio ){\n                    \n                    let checkedRadio = formEl.querySelector('[name=\"'+ name +'\"]:checked');\n                    value = (checkedRadio === null ? null : checkedRadio.value);\n                    \n                } else if( isSelect ){\n\n                    let selectedOpts = Array.from( fieldEl.options ).filter(option => option.selected);\n                    if( selectedOpts.length > 1 ){\n\n                        value = [];\n                        selectedOpts.forEach(fieldEl => {\n                            value.push( fieldEl.value );\n                        });\n\n                    }\n                }\n\n                formData[ name ] = value;\n            });\n\n            return formData;\n\n        }\n\n    }\n}\n","\nexport let ajaxOptions = {\n    async:              true,\n    cache:              false,\n    contentType:        'application/x-www-form-urlencoded; charset=UTF-8',\n    headers: {\n                        'X-Requested-With': 'XMLHttpRequest',\n    },\n    method:             'POST',\n    timeout:            0,\n    url:                location.href\n}\n","\nexport const validationErrors = {\n\n    email: function ( string ) {\n        const obj = {};\n\n        if( string.indexOf('@') === -1 ){\n\n            // @ IS MISSING\n            obj.missingAtChar = true;\n\n        } else {\n\n            let splitAt_at = string.split('@');\n            if( splitAt_at[0].length === 0 ){\n\n                // USER NAME IS MISSING\n                obj.missingUserName = true;\n\n            }\n\n            if( splitAt_at[1].length === 0 ){\n\n                // IS EMPTY AFTER @\n                obj.missingDomain = true;\n                obj.missingExtensionDot = true;\n                obj.missingExtension = true;\n\n            } else if( splitAt_at[1].indexOf('.') === -1 ) {\n\n                // DOT IS MISSING\n                obj.missingExtensionDot = true;\n                obj.missingExtension = true;\n\n            } else {\n\n                // EXTENSION MISSING OR NOT LONG ENOUGH\n                let splitAt_dot = splitAt_at[1].split('.'),\n                    extLength = splitAt_dot[1].length;\n                if( extLength === 0 ) {\n                    obj.missingExtension = true;\n                } else if( extLength < 2 ){\n                    obj.minlengthExtension = true;\n                }\n\n            }\n        }\n\n        return obj;\n\n    }\n\n}","\nimport { checkFormEl, isNodeList, mergeObjects }   from './helper.js';\nimport { callbackFns }                             from './listenerCallbacks.js';\nimport { formStartup }                             from './formStartup.js';\n\nexport function constructorFn( formEl, optionsObj = {} ){\n\n    let self = this,\n        argsL = arguments.length,\n        checkFormElem = checkFormEl(formEl);\n\n    if( argsL === 0 || (argsL > 0 && !formEl) ){\n        throw new Error('First argument \"formEl\" is missing or falsy!');\n    }\n    if( isNodeList(formEl) ){\n        throw new Error('First argument \"formEl\" must be a single DOM node or a form CSS selector, not a NodeList!');\n    }\n    if( !checkFormElem.result ){\n        throw new Error('First argument \"formEl\" is not a DOM node nor a form CSS selector!');\n    }\n\n    self.formEl = checkFormElem.element;\n    self.formEl.formjs = self;\n    self.options = mergeObjects({}, Form.prototype.options, optionsObj);\n    self.listenerCallbacks = {\n        dataTypeNumber:     callbackFns.dataTypeNumber,\n        keypressMaxlength:  callbackFns.keypressMaxlength,\n        pastePrevent:       callbackFns.pastePrevent.bind(self),\n        submit:             callbackFns.submit.bind(self),\n        validation:         callbackFns.validation.bind(self)\n    };\n    Object.freeze(self.listenerCallbacks);\n\n    formStartup.call( self );\n    \n}\n","\nimport { executeCallback, fieldsStringSelector, isFieldForChangeEvent } from './helper.js';\nimport { submit } from './submit.js';\n\nexport const callbackFns = {\n\n    dataTypeNumber: function( event ){\n\n        const fieldEl = event.target;\n        \n        if( fieldEl.matches('[data-type=\"number\"]') ){\n            let fieldValue = fieldEl.value,\n                hasInvalidChars = /[^\\d.,+\\-]/.test(fieldValue);\n            \n            if( hasInvalidChars ){\n                event.stopImmediatePropagation();\n                let valueReplaced = fieldValue.replace(/[^\\d.,+\\-]/g, '');\n                fieldEl.value = valueReplaced;\n            }\n        }\n\n    },\n\n    keypressMaxlength: function( event ){\n\n        const fieldEl = event.target;\n        \n        if( fieldEl.matches( '[maxlength]' ) ){\n            const maxLength = fieldEl.maxLength * 1,\n                keyPressed = event.which || event.keyCode,\n                allowedKeys = [8, 37, 38, 39, 46];\n\n            if( fieldEl.value.length >= maxLength && allowedKeys.indexOf(keyPressed) === -1 ){\n                return false;\n            }\n        }\n\n    },\n\n    pastePrevent: function( event ){\n\n        const self = this,\n              fieldEl = event.target;\n        let fieldOptions = self.options.fieldOptions;\n\n        if( fieldEl.matches( fieldOptions.preventPasteFields ) ){     \n            event.preventDefault();\n            executeCallback.call( self, fieldOptions.onPastePrevented, fieldEl );\n        }\n\n    },\n\n    submit: function( event ){\n        submit.call( this, event );\n    },\n\n    validation: function( event ){\n\n        const self = this,\n            eventName = event.type,\n            fieldEl = event.target;\n\n        if( fieldEl.matches( fieldsStringSelector ) ){\n            const isFieldForChangeEventBoolean = isFieldForChangeEvent(fieldEl),\n                isRadio = fieldEl.type === 'radio',\n                isReqFrom = fieldEl.matches('[data-required-from]'),\n                isReqMore = fieldEl.matches('[data-require-more]'),\n                isValidValue = fieldEl.value.trim().length > 0;\n\n            // HANDLE data-require-more FIELDS\n            if( isRadio && eventName === 'change' ){\n                let findReqMoreEl = (isReqMore ? fieldEl : self.formEl.querySelector('[name=\"'+ fieldEl.name +'\"][data-require-more]')),\n                    findReqFromEl = (findReqMoreEl !== null ? self.formEl.querySelector('[data-required-from=\"#'+ findReqMoreEl.id +'\"]') : null);\n\n                if( isReqMore ){\n\n                    if( findReqFromEl !== null ){\n                        findReqFromEl.required = fieldEl.required;\n                        if( self.options.fieldOptions.focusOnRelated ){\n                            findReqFromEl.focus();\n                        }\n                    }\n\n                } else if( findReqMoreEl !== null ){\n\n                    if( findReqFromEl !== null ){\n                        findReqFromEl.required = findReqMoreEl.required && findReqMoreEl.checked;\n                        findReqFromEl.value = '';\n                    }\n\n                }\n            }\n\n            // HANDLE data-required-from FIELDS\n            if( isReqFrom ){\n                if( isValidValue ){\n\n                    let reqMoreEl = self.formEl.querySelector( fieldEl.getAttribute('data-required-from') );\n                    reqMoreEl.checked = true;\n                    fieldEl.required = reqMoreEl.required;\n                }\n            }\n            \n            if(\n                (isFieldForChangeEventBoolean && eventName === 'change') ||\n                (!isFieldForChangeEventBoolean && eventName !== 'change')\n            ){\n                \n                self.validateField( fieldEl );\n\n            }\n        }\n        \n    }\n\n}\n","\nimport { isPlainObject, validateFormObjDefault } from './helper.js';\n//import { ajaxCall }     from './ajaxCall.js';\nimport { ajaxCall }     from './ajaxCallXhr.js';\n\nexport function submit( event ){\n\n    const self = this,\n          options = self.options,\n          isAjaxForm = options.formOptions.ajaxSubmit,\n          formEl = self.formEl,\n          btnEl = formEl.querySelector('[type=\"submit\"]'),\n          eventPreventDefault = ( enableBtn = true ) => {\n              if( btnEl && enableBtn ){ btnEl.disabled = false; }\n              if( event ){ event.preventDefault(); }\n          };\n\n    if( isAjaxForm ){\n        eventPreventDefault(false);\n    }\n\n    if( btnEl ){\n        if( btnEl.disabled ){\n            eventPreventDefault(false);\n            return false;\n        }\n        btnEl.disabled = true;\n    }\n    \n    const handleValidation = options.fieldOptions.handleValidation,\n          formValidationPromise = (handleValidation ? self.validateForm() : Promise.resolve(validateFormObjDefault));\n\n    formValidationPromise.then(formValidation => {\n        //console.log(formValidation);\n        if( !formValidation.result ){\n            eventPreventDefault();\n            return false;\n        }\n        \n        let formDataObj = (isAjaxForm ? self.getFormData() : null),\n            callbacksBeforeSend = options.formOptions.beforeSend,\n            beforeSendData = { stopExecution: false },\n            stopCallbackLoop = false;\n\n        if( formDataObj ){\n            beforeSendData.formData = formDataObj;\n        }\n\n        callbacksBeforeSend.forEach(function(cbFn){\n            if( !stopCallbackLoop ){\n                let beforeSendFn = cbFn.call( self, beforeSendData, options );\n                \n                if( isPlainObject(beforeSendFn) ){\n                    formDataObj = beforeSendFn.formData || formDataObj;\n                    if( beforeSendFn.stopExecution ){\n                        stopCallbackLoop = true;\n                    }\n                }\n            }\n        });\n\n        if( stopCallbackLoop ){\n            eventPreventDefault();\n            return false;\n        }\n        \n        if( isAjaxForm ){\n            ajaxCall.call(self, formDataObj);\n        }\n    });\n    \n}\n","\nimport { executeCallback, mergeObjects, serializeObject } from './helper.js';\n\n// AJAX CALL USING XMLHttpRequest API\nexport function ajaxCall( formDataObj ){\n\n    let self = this,\n        formEl = self.formEl,\n        fieldOptions = self.options.fieldOptions,\n        formOptions = self.options.formOptions,\n        btnEl = formEl.querySelector('[type=\"submit\"]'),\n        timeoutTimer,\n        xhrOptions = mergeObjects( {}, formOptions.ajaxOptions ),\n        isMultipart = xhrOptions.contentType === 'multipart/form-data';\n\n    xhrOptions.data = formDataObj;\n    \n    if( isMultipart && fieldOptions.handleFileUpload ){\n        let formDataMultipart = new FormData();\n        \n        for(let key in xhrOptions.data){\n            formDataMultipart.append( key, xhrOptions.data[key] );\n        }\n        \n        Array.from( formEl.querySelectorAll('[type=\"file\"]') ).forEach(function( field ){\n            Array.from(field.files).forEach(function( file, idx ){\n                let name = field.name+'['+ idx +']';\n                formDataMultipart.append( name, file, file.name );\n            });\n        });\n        \n        xhrOptions.data = formDataMultipart;\n    }\n\n    let XHR = new XMLHttpRequest(),\n        ajaxResponse = {},\n        parseResponse = function( xhr ){\n            let data = xhr.responseText,\n                getJSON = function(){\n                    try{\n                        let obj = JSON.parse(data);\n                        return obj;\n                    } catch(e){\n                        return false;\n                    }\n                },\n                getXML_HTML = function(){\n                    try{\n                        let isXML = xhr.responseXML !== null,\n                            obj = (isXML ? new DOMParser().parseFromString(data, 'text/xml') : data);\n                        return obj;\n                    } catch(e){\n                        return false;\n                    }\n                };\n            \n            return (getJSON() || getXML_HTML() || data);\n        },\n        successFn = function(e) {\n            let xhr = e.target;\n\n            if( xhr.status === 200 ){\n                let responseData = parseResponse(xhr);\n                ajaxResponse = { status: 'success', code: xhr.status, data: responseData };\n                executeCallback.call( self, formOptions.onSubmitSuccess, ajaxResponse );\n            } else {\n                errorFn(e);\n            }\n        },\n        errorFn = function(e) {\n            let xhr = e.target;\n            ajaxResponse = { status: 'error', code: xhr.status, message: xhr.statusText };\n            executeCallback.call( self, formOptions.onSubmitError, ajaxResponse );\n        },\n        completeFn = function(e) {\n            if( timeoutTimer ){\n                window.clearTimeout( timeoutTimer );\n            }\n\n            btnEl.disabled = false;\n            executeCallback.call( self, formOptions.onSubmitComplete, ajaxResponse );\n        };\n    \n    XHR.addEventListener('load',    successFn, false);\n    XHR.addEventListener('error',   errorFn,    false);\n    XHR.addEventListener('loadend', completeFn,  false);\n    \n    if( xhrOptions.method === 'GET' ){\n        xhrOptions.url += ( /\\?/.test(xhrOptions.url) ? '&' : '?' ) + serializeObject( xhrOptions.data );\n        if( xhrOptions.cache === false ){\n            xhrOptions.url +=  (/\\&/.test(xhrOptions.url) ? '&' : '') + '_=' + (new Date().getTime());\n        }\n    }\n    \n    XHR.open(xhrOptions.method, xhrOptions.url, xhrOptions.async);\n\n    if ( xhrOptions.xhrFields ) {\n        for ( let i in xhrOptions.xhrFields ) {\n            XHR[ i ] = xhrOptions.xhrFields[ i ];\n        }\n    }\n\n    if ( xhrOptions.mimeType && XHR.overrideMimeType ) {\n        XHR.overrideMimeType( xhrOptions.mimeType );\n    }\n    \n    if( xhrOptions.data && xhrOptions.contentType !== 'multipart/form-data' ){\n        XHR.setRequestHeader('Content-Type', xhrOptions.contentType);\n    }\n    \n    for( let h in xhrOptions.headers ){\n        XHR.setRequestHeader( h, xhrOptions.headers[h] );\n    }\n\n    if( !isMultipart ){\n        xhrOptions.data = JSON.stringify(xhrOptions.data);\n    }\n    \n    XHR.send( (xhrOptions.method === 'GET' ? null : xhrOptions.data) );\n\n    if ( xhrOptions.async && xhrOptions.timeout > 0 ) {\n        timeoutTimer = window.setTimeout(function() {\n            XHR.abort();\n        }, xhrOptions.timeout);\n    }\n    \n}\n","\nexport function formStartup(){\n\n    const self = this,\n          formEl = self.formEl;\n\n    if( !formEl.matches('[novalidate]') ){ return null; }\n\n    let fieldOptions = self.options.fieldOptions,\n        formOptions = self.options.formOptions;\n\n    // HANDLE FIELD VALIDATION\n    if( fieldOptions.handleValidation ){\n        \n        // VALIDATION WITH ATTRIBUTES LIKE HTML ONES ( ALSO FOR BUG FIXING, EG: maxlength IN ANDROID )\n        if( fieldOptions.strictHtmlValidation ){\n            \n            // maxlength\n            // MAXLENGTH IS BUGGY IN ANDROID BROWSERS\n            formEl.addEventListener('keypress', self.listenerCallbacks.keypressMaxlength, false);\n\n            // data-type=\"number\"\n            // SINCE VALIDATING type=\"number\" WITH NON NUMERIC CHARS WILL RETURN EMPTY STRING IN SOME BROWSERS ( EG: FIREFOX )\n            formEl.addEventListener('input', self.listenerCallbacks.dataTypeNumber, false);\n            \n        }\n        \n        if( fieldOptions.preventPasteFields && formEl.querySelectorAll( fieldOptions.preventPasteFields ).length ){\n            // INIT EVENT LISTENER FOR \"PASTE\" EVENT TO PREVENT IT ON SPECIFIED FIELDS\n            formEl.addEventListener('paste', self.listenerCallbacks.pastePrevent, false);\n        }\n\n        // INIT EVENTS LISTENER ( AS IN fieldOptions )\n        fieldOptions.validateOnEvents.split(' ').forEach(function( eventName ){\n            let useCapturing = (eventName === 'blur' ? true : false);\n            formEl.addEventListener(eventName, self.listenerCallbacks.validation, useCapturing);\n        });\n\n    }\n    \n    // HANDLE FORM SUBMIT\n    if( formOptions.handleSubmit ){\n        // INIT FORM SUBMIT ( DEFAULT AND AJAX )\n        formEl.addEventListener('submit', self.listenerCallbacks.submit);\n\n        if( formOptions.ajaxSubmit ){\n            if( formEl.getAttribute('enctype') ){\n\n                // FOR XMLHttpRequest API\n                formOptions.ajaxOptions.contentType = formEl.getAttribute('enctype');\n\n                // FOR fetch API\n                formOptions.ajaxOptions.headers['Content-Type'] = formEl.getAttribute('enctype');\n                \n            }\n\n            if( formEl.getAttribute('method') ){\n                formOptions.ajaxOptions.method = formEl.getAttribute('method').toUpperCase();\n            }\n\n            if( formEl.getAttribute('action') ){\n                formOptions.ajaxOptions.url = formEl.getAttribute('action');\n            }\n        }\n    }\n\n}\n","\nexport function destroy(){\n\n    const self = this,\n          formEl = self.formEl,\n          validationListenerNames = self.options.fieldOptions.validateOnEvents;\n\n    if( self.options.fieldOptions.strictHtmlValidation ){\n        formEl.removeEventListener('keypress', self.listenerCallbacks.keypressMaxlength, false);\n        formEl.removeEventListener('input', self.listenerCallbacks.dataTypeNumber, false);\n    }\n\n    if( self.options.fieldOptions.preventPasteFields ){\n        formEl.removeEventListener('paste', self.listenerCallbacks.pastePrevent, false);\n    }\n\n    if( self.options.formOptions.handleSubmit ){\n        formEl.removeEventListener('submit', self.listenerCallbacks.submit);\n    }\n\n    validationListenerNames.split(' ').forEach(function( eventName ){\n        let useCapturing = (eventName === 'blur' ? true : false);\n        formEl.removeEventListener(eventName, self.listenerCallbacks.validation, useCapturing);\n    });\n\n    delete self.formEl.formjs;\n    \n}\n","\nexport function getFormData(){\n\n    let self = this,\n        formEl = self.formEl,\n        formFieldsEl = formEl.querySelectorAll('input, select, textarea'),\n        excludeSelectors = ':not([type=\"reset\"]):not([type=\"submit\"]):not([type=\"button\"]):not([type=\"file\"]):not([data-exclude-data])',\n        filteredFields = Array.from(formFieldsEl).filter(elem => elem.matches(excludeSelectors) );\n    \n    return self.options.formOptions.getFormData.call( self, filteredFields );\n    \n}\n","\nimport { fieldsStringSelector, isFieldForChangeEvent } from './helper.js';\n\nexport const init = function(){\n\n    const self = this,\n          formEl = self.formEl,\n          formFields = formEl.querySelectorAll( fieldsStringSelector );\n\n    let currentFieldName = '',\n        currentFieldType = '';\n\n    Array.from( formFields ).forEach(function( fieldEl ){\n        const   name = fieldEl.name,\n                type = fieldEl.type;\n        \n        // AVOID REPEATING VALIDATION IF THE FIELD HAS THE SAME NAME OF THE PREVIOUS ONE\n        if( (name === currentFieldName && type === currentFieldType) ){ return true; }\n\n        const isCheckboxOrRadio = (fieldEl.type === 'checkbox' || fieldEl.type === 'radio'),\n              isFieldForChangeEventBoolean = isFieldForChangeEvent(fieldEl),\n              fieldChecked = formEl.querySelector('[name=\"' + fieldEl.name + '\"]:checked'),\n              isReqFrom = fieldEl.matches('[data-required-from]'),\n              reqMoreEl = (isReqFrom ? formEl.querySelector(fieldEl.getAttribute('data-required-from')) : null);\n\n        if( !isReqFrom ){\n            currentFieldName = name;\n            currentFieldType = type;\n        }\n        \n        // VALIDATE FIELD ( BY TRIGGERING THE validation CALLBACK ) IF IT ALREADY HAS A VALUE\n        if(\n            (!isCheckboxOrRadio && fieldEl.value) || \n            (isCheckboxOrRadio && fieldChecked !== null) ||\n            (isReqFrom && reqMoreEl.checked)\n        ){\n\n            let fakeEventObj = { target: fieldEl, type: (isFieldForChangeEventBoolean ? 'change': '') };\n            self.listenerCallbacks.validation.call( self, fakeEventObj );\n\n        }\n    });\n\n    self.isInitialized = true;\n\n    return self;\n\n}\n","\nimport { executeCallback, mergeObjects } from './helper.js';\nimport { isValidField } from './isValidField.js';\n\nexport function validateField( fieldElem, fieldOptionsObj = {} ){\n\n    const self = this,\n          fieldEl = (typeof fieldElem === 'string' ? self.formEl.querySelector(fieldElem) : fieldElem),\n          fieldOptions = mergeObjects({}, self.options.fieldOptions, fieldOptionsObj);\n\n    return new Promise(function(resolve){\n\n        const prom = isValidField.call( self, fieldEl, fieldOptionsObj );\n        resolve( prom );\n\n    }).then(obj => {\n\n        //console.log(obj);\n        if( obj.fieldEl ){\n            executeCallback.call( self, fieldOptions.onValidation, [obj], {fieldOptions} );\n        }\n        return obj;\n        \n    });\n    \n}\n","\nimport { addClass, isNodeList, removeClass } from './helper.js';\n\nexport function checkDirtyField( fields, cssClasses = this.options.fieldOptions.cssClasses.dirty ){\n\n    var fields = (isNodeList(fields) ? Array.from( fields ) : [fields]);\n    \n    fields.forEach(function(fieldEl){\n        if( fieldEl.type !== 'checkbox' && fieldEl.type !== 'radio' ){\n            let containerEl = fieldEl.closest('[data-formjs-question]') || fieldEl;\n\n            if( fieldEl.value ){\n                \n                addClass( containerEl, cssClasses );\n                \n            } else {\n                \n                removeClass( containerEl, cssClasses );\n                \n            }\n        }\n    });\n    \n}\n","\nimport { mergeObjects, toCamelCase } from './helper.js';\nimport { validationRulesAttributes } from './validationRules.js';\n\nexport function isValid( fieldEl, fieldOptions = {} ){\n\n    const self = this,\n          fieldType = ( fieldEl.matches('[data-subtype]') ? toCamelCase( fieldEl.getAttribute('data-subtype') ) : fieldEl.type ),\n          fieldValue = fieldEl.value,\n          isValidValue = fieldValue.trim().length > 0,\n          // ALPHABETICAL REVERSE ORDER\n          fieldAttributes = Array.from(fieldEl.attributes).sort(function(a,b){ return a.name < b.name });\n\n    let attrValidations = [],\n        attrValidationsResult = isValidValue,\n        obj = { result: isValidValue };\n\n    if( !isValidValue ){\n        obj.errors = { empty: true };\n        obj.result = false;\n        return Promise.resolve(obj);\n    }\n\n    // COLLECT SPECIFIC VALIDATIONS FOR validationRulesAttributes\n    fieldAttributes.forEach(function(attr){\n        // FOR data-* ATTRIBUTES -> REMOVE \"data-\" AND TRANSFORM TO CAMELCASE\n        let attrName = toCamelCase( attr.name.replace('data-', '') ),\n            attrValue = attr.value,\n            isTypeValueWithFn = attrName === 'type' && typeof validationRulesAttributes[attrValue] === 'function',\n            isAttrNameWithFn = typeof validationRulesAttributes[attrName] === 'function';\n\n        if( isTypeValueWithFn || isAttrNameWithFn ){\n\n            let extraValObj = {\n                    attrName: (isTypeValueWithFn ? attrValue : attrName),\n                    attrValue: attrValue,\n                    fieldEl,\n                    fieldOptions\n                };\n\n            if( isTypeValueWithFn || attrName === 'requiredFrom' ){\n                // THESE VALIDATIONS MUST RUN BEFORE ALL OTHERS\n                attrValidations.unshift( extraValObj );\n            } else {\n                attrValidations.push( extraValObj );\n            }\n\n        }\n    });\n\n    // RUN SPECIFIC VALIDATIONS FOR validationRulesAttributes\n    attrValidations.forEach(function(item){\n        let extraVal = validationRulesAttributes[item.attrName]( item );\n        if( !extraVal.result ){\n            obj = mergeObjects({}, obj, extraVal);\n            attrValidationsResult = false;\n        }\n    });\n\n    //return obj;\n    return new Promise(function(resolve){\n\n        let prom = {};\n        // RUN VALIDATIONS FOR validationRules\n        if( typeof self.validationRules[fieldType] === 'function' ){\n            prom = self.validationRules[fieldType].call(self, fieldValue, fieldEl);\n        }\n        resolve(prom);\n\n    }).then(data => {\n\n        obj = mergeObjects( {}, obj, data );\n        obj.result = obj.result && attrValidationsResult;\n        if( !obj.result ){\n            let errorFn = self.validationErrors[fieldType];\n            let fieldErrors = (typeof errorFn === 'function' ? errorFn.call(self, fieldValue) : {});\n            if( typeof obj.errors === 'undefined' ){\n                obj.errors = {};\n            }\n            obj.errors.rule = true;\n            obj.errors = mergeObjects({}, obj.errors, fieldErrors);\n        }\n        //console.log(obj);\n        return obj;\n\n    });\n\n}\n","\nimport { executeCallback, mergeObjects } from './helper.js';\nimport { isValidForm } from './isValidForm.js';\n\nexport function validateForm( fieldOptionsObj = {} ){\n\n    const self = this,\n          fieldOptions = mergeObjects({}, self.options.fieldOptions, fieldOptionsObj);\n\n    return new Promise(function(resolve){\n\n        const prom = isValidForm.call( self, fieldOptions );\n        resolve(prom);\n\n    }).then(obj => {\n\n        //console.log(obj);\n        executeCallback.call( self, fieldOptions.onValidation, obj.fields, {fieldOptions} );\n        return obj;\n\n    });\n    \n}\n","\nimport { fieldsStringSelector, mergeObjects, validateFormObjDefault } from './helper.js';\nimport { isValidField } from './isValidField.js';\n\nexport function isValidForm( fieldOptionsObj = {} ){\n\n    const self = this,\n          formEl = self.formEl,\n          obj = mergeObjects({}, validateFormObjDefault),\n          fieldOptions = mergeObjects( {}, self.options.fieldOptions, fieldOptionsObj, {focusOnRelated: false} );\n\n    let currentFieldName = '',\n        currentFieldType = '';\n\n    const fieldsList = Array.from( formEl.querySelectorAll(fieldsStringSelector) ).filter(fieldEl => {\n        let name = fieldEl.name,\n            type = fieldEl.type;\n\n        if( name === currentFieldName && type === currentFieldType ){\n            return false;\n        }\n\n        if( !fieldEl.matches('[data-required-from]') ){\n            currentFieldName = name;\n            currentFieldType = type;\n        }\n\n        return true;\n    });\n    \n    return Promise.all( fieldsList.map(function( fieldEl ){\n        \n        return isValidField.call( self, fieldEl, fieldOptions );\n\n    }) ).then(list => {\n\n        let areAllFieldsValid = list.filter(fieldObj => !fieldObj.result).length === 0;\n        obj.result = areAllFieldsValid;\n        obj.fields = list;\n\n        //console.log(obj);\n        return obj;\n\n    });\n\n}\n"],"sourceRoot":""}