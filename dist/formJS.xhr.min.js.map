{"version":3,"sources":["webpack:///webpack/bootstrap","webpack:///./src/modules/helper.js","webpack:///./src/modules/validationRules.js","webpack:///./src/index.js","webpack:///./src/modules/listenerCallbacks.js","webpack:///./src/modules/options.js","webpack:///./src/modules/optionsAjaxXhr.js","webpack:///./src/modules/constructor.js","webpack:///./src/modules/optionsUtils.js","webpack:///./src/modules/checkDirtyField.js","webpack:///./src/modules/formStartup.js","webpack:///./src/modules/destroy.js","webpack:///./src/modules/getFormData.js","webpack:///./src/modules/init.js","webpack:///./src/modules/isValidField.js","webpack:///./src/modules/isValid.js","webpack:///./src/modules/isValidForm.js","webpack:///./src/modules/submit.js","webpack:///./src/modules/ajaxCallXhr.js","webpack:///./src/modules/validateField.js","webpack:///./src/modules/validateForm.js"],"names":["installedModules","__webpack_require__","moduleId","exports","module","i","l","modules","call","m","c","d","name","getter","o","Object","defineProperty","enumerable","get","r","Symbol","toStringTag","value","t","mode","__esModule","ns","create","key","bind","n","default","object","property","prototype","hasOwnProperty","p","s","e","iterator","constructor","_isDOMNode","_fieldsStringSelector","_addClass","element","cssClasses","split","forEach","className","classList","add","_checkFormEl","formEl","isString","_typeof","isFormSelector","document","querySelector","tagName","toLowerCase","result","_executeCallback","callbackOption","callbackData","self","this","callbackFnList","push","Array","isArray","cbFn","_getSplitChar","string","splitChar","indexOf","node","Element","isPrototypeOf","_isNodeList","nodeList","NodeList","_isPlainObject","toString","_mergeObjects","out","arguments","length","obj","isObject","_removeClass","remove","_serialize","keys","reduce","a","k","encodeURIComponent","join","_toCamelCase","replace","all","letter","toUpperCase","_helper","validationRules","cap","RegExp","test","errors","strLength","maxlength","minlength","invalidChars","color","date","dateDDMMYYYY","email","missingAtChar","splitAt_at","missingUserName","missingDomain","missingExtensionDot","missingExtension","extLength","minlengthExtension","fiscalCode","landlineNumber","mobileNumber","number","numberFloat","numberInteger","password","missingNumber","missingUppercase","tel","url","username","invalidStartChar","vatNumber","indexOfIT","_validationRulesAttributes","checkbox","data","dataChecksEl","fieldEl","closest","checked","checks","attrValue","getAttribute","JSON","parse","checkedElLength","querySelectorAll","isMinOk","isMaxOk","minChecks","maxChecks","Error","equalTo","checkFromEl","exactLength","valueLength","file","MIMEtype","accept","from","files","exceedMaxFileSize","fieldOptions","maxFileSize","size","isAcceptedFileType","type","acceptedFileType","valueL","isMinlengthOk","isMaxlengthOk","max","isDate","matches","maxVal","reverse","min","minVal","pattern","fieldPattern","radio","fieldChecked","trim","requiredFrom","isValidValue","reqMoreEl","required","_listenerCallbacks2","_options","_validationRules","_constructor2","_destroy2","_getFormData2","_init2","_isValidField2","_isValidForm2","_submit2","_validateField2","_validateForm2","_listenerCallbacks","WeakMap","Form","optionsObj","set","charCount","_callbackFns","dataTypeNumber","keypressMaxlength","pastePrevent","submit","validation","_constructor","destroy","customFn","getFormData","init","isValidField","isValidForm","event","fieldElem","validateField","validateForm","rulesObj","options","isInitialized","version","window","FormJS","eventOrField","target","charLengthEl","usedChars","textContent","error","fieldValue","stopImmediatePropagation","valueReplaced","maxLength","keyPressed","which","keyCode","preventPasteFields","preventDefault","onPastePrevented","eventName","isFieldForChangeEvent","isRadio","isReqFrom","isReqMore","findReqMoreEl","findReqFromEl","id","focusOnRelated","focus","_optionsAjaxXhr","checkDirtyField","dirty","errorEmpty","errorRule","valid","handleFileUpload","handleValidation","onValidation","skipUIfeedback","strictHtmlValidation","validateOnEvents","formOptions","ajaxOptions","ajaxSubmit","beforeSend","handleSubmit","onSubmitComplete","onSubmitError","onSubmitSuccess","async","cache","contentType","headers","X-Requested-With","method","timeout","location","href","argsL","checkFormEl","_setCallbackFunctionsInOptions","_formStartup","_optionsUtils","_formStartup2","_checkDirtyField2","_defaultCallbacksInOptions","fieldsArray","hasTypedValue","containerEl","_checkDirtyField","errorClasses","extraErrorClass","isChecks","errorClassToRemove","callbacks","_loop","opt","fnName","fnInOptions","fnList","concat","unshift","fields","charLengthElems","listenerCallbacks","maxFileSizeElems","addEventListener","useCapturing","validationListenerNames","removeEventListener","formData","formFieldsEl","filteredFields","filter","elem","isCheckbox","isSelect","checkboxes","field","checkedRadio","selectedOpts","option","selected","formFields","isCheckboxOrRadio","fieldOptionsObj","isRequired","isValidateIfFilled","_isValid","_isValid2","fieldType","fieldAttributes","attributes","sort","b","attrValidations","attrValidationsResult","attr","attrName","isTypeValueWithFn","isAttrNameWithFn","extraValObj","item","extraVal","rule","empty","currentFieldName","currentFieldType","fieldData","eventPreventDefault","enableBtn","btnEl","disabled","formValidation","isAjaxForm","formDataObj","callbacksBeforeSend","beforeSendOpt","beforeSendData","stopExecution","stopCallbackLoop","beforeSendFn","_ajaxCall","submitEvent","Event","bubbles","cancelable","dispatchEvent","_ajaxCallXhr","timeoutTimer","xhrOptions","isMultipart","formDataMultipart","FormData","append","idx","XHR","XMLHttpRequest","parseResponse","xhr","responseText","responseXML","isXML","DOMParser","parseFromString","errorFn","ajaxData","errorThrown","statusText","status","response","responseData","readyStateOK","readyState","statusOK","dataOrXHR","XHRorResponse","clearTimeout","Date","getTime","open","xhrFields","h","mimeType","overrideMimeType","setRequestHeader","stringify","send","setTimeout","abort"],"mappings":"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","file":"formJS.min.js","sourcesContent":[" \t// The module cache\n \tvar installedModules = {};\n\n \t// The require function\n \tfunction __webpack_require__(moduleId) {\n\n \t\t// Check if module is in cache\n \t\tif(installedModules[moduleId]) {\n \t\t\treturn installedModules[moduleId].exports;\n \t\t}\n \t\t// Create a new module (and put it into the cache)\n \t\tvar module = installedModules[moduleId] = {\n \t\t\ti: moduleId,\n \t\t\tl: false,\n \t\t\texports: {}\n \t\t};\n\n \t\t// Execute the module function\n \t\tmodules[moduleId].call(module.exports, module, module.exports, __webpack_require__);\n\n \t\t// Flag the module as loaded\n \t\tmodule.l = true;\n\n \t\t// Return the exports of the module\n \t\treturn module.exports;\n \t}\n\n\n \t// expose the modules object (__webpack_modules__)\n \t__webpack_require__.m = modules;\n\n \t// expose the module cache\n \t__webpack_require__.c = installedModules;\n\n \t// define getter function for harmony exports\n \t__webpack_require__.d = function(exports, name, getter) {\n \t\tif(!__webpack_require__.o(exports, name)) {\n \t\t\tObject.defineProperty(exports, name, { enumerable: true, get: getter });\n \t\t}\n \t};\n\n \t// define __esModule on exports\n \t__webpack_require__.r = function(exports) {\n \t\tif(typeof Symbol !== 'undefined' && Symbol.toStringTag) {\n \t\t\tObject.defineProperty(exports, Symbol.toStringTag, { value: 'Module' });\n \t\t}\n \t\tObject.defineProperty(exports, '__esModule', { value: true });\n \t};\n\n \t// create a fake namespace object\n \t// mode & 1: value is a module id, require it\n \t// mode & 2: merge all properties of value into the ns\n \t// mode & 4: return value when already ns object\n \t// mode & 8|1: behave like require\n \t__webpack_require__.t = function(value, mode) {\n \t\tif(mode & 1) value = __webpack_require__(value);\n \t\tif(mode & 8) return value;\n \t\tif((mode & 4) && typeof value === 'object' && value && value.__esModule) return value;\n \t\tvar ns = Object.create(null);\n \t\t__webpack_require__.r(ns);\n \t\tObject.defineProperty(ns, 'default', { enumerable: true, value: value });\n \t\tif(mode & 2 && typeof value != 'string') for(var key in value) __webpack_require__.d(ns, key, function(key) { return value[key]; }.bind(null, key));\n \t\treturn ns;\n \t};\n\n \t// getDefaultExport function for compatibility with non-harmony modules\n \t__webpack_require__.n = function(module) {\n \t\tvar getter = module && module.__esModule ?\n \t\t\tfunction getDefault() { return module['default']; } :\n \t\t\tfunction getModuleExports() { return module; };\n \t\t__webpack_require__.d(getter, 'a', getter);\n \t\treturn getter;\n \t};\n\n \t// Object.prototype.hasOwnProperty.call\n \t__webpack_require__.o = function(object, property) { return Object.prototype.hasOwnProperty.call(object, property); };\n\n \t// __webpack_public_path__\n \t__webpack_require__.p = \"\";\n\n\n \t// Load entry module and return exports\n \treturn __webpack_require__(__webpack_require__.s = 2);\n","\nexport const\n\n_fieldsStringSelector = 'input:not([type=\"reset\"]):not([type=\"submit\"]):not([type=button]):not([type=hidden]), select, textarea',\n\n_addClass = function( element, cssClasses ){\n    cssClasses.split(' ').forEach(function(className){\n        element.classList.add( className );\n    });\n},\n\n_checkFormEl = function( formEl ){\n    let isString = typeof formEl,\n        isValidNodeSelector = isString === 'string' && _isDOMNode(document.querySelector(formEl)),\n        isFormSelector = isValidNodeSelector && document.querySelector(formEl).tagName.toLowerCase() === 'form',\n        obj = {\n            result: _isDOMNode(formEl) || isFormSelector,\n            element: (isString === 'string' ? document.querySelector(formEl) : formEl)\n        };\n\n    return obj;\n},\n\n_executeCallback = function( callbackOption, callbackData ){\n    let self = this,\n        callbackFnList = [];\n\n    if( typeof callbackOption === 'function' ){\n        callbackFnList.push( callbackOption );\n    } else if( Array.isArray(callbackOption) ) {\n        callbackFnList = callbackOption;\n    }\n\n    callbackFnList.forEach(function(cbFn){\n        cbFn.call(self, callbackData );\n    });\n},\n\n_getSplitChar = function( string ){\n    let splitChar = '.';\n\n    if( string.indexOf(splitChar) === -1 ){\n        if( string.indexOf('-') >= 0 ){\n            splitChar = '-';\n        } else if( string.indexOf('/') >= 0 ){\n            splitChar = '/';\n        }\n    }\n\n    return splitChar;\n},\n\n_isDOMNode = function( node ){\n    return Element.prototype.isPrototypeOf( node );\n},\n\n_isNodeList = function( nodeList ){\n    return NodeList.prototype.isPrototypeOf( nodeList );\n},\n\n_isPlainObject = function( object ){\n    return Object.prototype.toString.call( object ) === '[object Object]';\n},\n\n_mergeObjects = function( out = {} ){\n    for(let i=1; i<arguments.length; i++){\n        let obj = arguments[i];\n\n        if(!obj){ continue; }\n\n        for(let key in obj){\n            let isArray = Object.prototype.toString.call(obj[key]) === \"[object Array]\";\n            let isObject = Object.prototype.toString.call(obj[key]) === \"[object Object]\";\n\n            if( (!out.hasOwnProperty(key) && !isObject) || isArray ){\n                out[key] = obj[key];\n            } else {\n                if( isObject ){\n                    out[key] = _mergeObjects(out[key], obj[key]);\n                }\n            }\n        }\n    }\n\n    return out;\n},\n\n_removeClass = function( element, cssClasses ){\n    cssClasses.split(' ').forEach(function(className){\n        element.classList.remove( className );\n    });\n},\n\n_serialize = function( obj ){\n    var objToString = (\n            (obj && typeof obj === 'object' && obj.constructor === Object) ? \n            Object.keys(obj)\n                .reduce(function(a,k){\n                    a.push(k+'='+encodeURIComponent(obj[k]));\n                    return a\n                },[]).join('&') : \n            obj\n    );\n    return objToString;\n},\n\n_toCamelCase = function( string ){\n    return string.replace(/-([a-z])/ig, function(all, letter){ return letter.toUpperCase(); });\n}\n","\nimport { _getSplitChar } from './helper.js';\n\nexport const validationRules = {\n            \n    cap: function( string ){\n        // VALID ITALIAN CAP WITH 5 DIGITS\n        const\n            regex = new RegExp(/^[0-9]{5}$/),\n            obj = {\n                result: regex.test( string )\n            };\n\n        if( !obj.result ){\n\n            obj.errors = {};\n            const strLength = string.length;\n            if( strLength > 5 ){ obj.errors.maxlength = true; }\n            if( strLength > 0 && strLength < 5 ){ obj.errors.minlength = true; }\n            if( /[^0-9]/.test(string) ){ obj.errors.invalidChars = true; }\n        }\n\n        return obj;\n    },\n\n    color: function( string ){\n        // HEX COLOR WITH/WITHOUT #\n        // CAN BE 3 OR 6 CHARACTERS ( fff | FFF | ffffff | FFFFFF )\n        let obj = {\n            result: /^#?([a-fA-F0-9]{6}|[a-fA-F0-9]{3})$/.test( string )\n        };\n\n        return obj;\n    },\n    \n    date: function( string ){\n        // DATE AS ISO 8601 DATE FORMAT     YYYY MM DD | YYYY/MM/DD | YYYY.MM.DD | YYYY-MM-DD\n\n        let date = /^(((19|[2-9]\\d)\\d{2})[ \\/\\-.](0[13578]|1[02])[ \\/\\-.](0[1-9]|[12]\\d|3[01]))|(((19|[2-9]\\d)\\d{2})[ \\/\\-.](0[13456789]|1[012])[ \\/\\-.](0[1-9]|[12]\\d|30))|(((19|[2-9]\\d)\\d{2})[ \\/\\-.]02[ \\/\\-.](0[1-9]|1\\d|2[0-8]))|(((1[6-9]|[2-9]\\d)(0[48]|[2468][048]|[13579][26])|((16|[2468][048]|[3579][26])00))[ \\/\\-.]02[ \\/\\-.]29)$/g.test( string ),\n            obj = {\n                result: date\n            };\n\n        return obj;\n    },\n\n    dateDDMMYYYY: function( string ){\n        // DATE AS ITALIAN SYNTAX       DD MM YYYY | DD/MM/YYYY | DD.MM.YYYY | DD-MM-YYYY\n\n        let date = /^(((0[1-9]|[12]\\d|3[01])[ \\/\\-.](0[13578]|1[02])[ \\/\\-.]((19|[2-9]\\d)\\d{2}))|((0[1-9]|[12]\\d|30)[ \\/\\-.](0[13456789]|1[012])[ \\/\\-.]((19|[2-9]\\d)\\d{2}))|((0[1-9]|1\\d|2[0-8])[ \\/\\-.]02[ \\/\\-.]((19|[2-9]\\d)\\d{2}))|(29[ \\/\\-.]02[ \\/\\-.]((1[6-9]|[2-9]\\d)(0[48]|[2468][048]|[13579][26])|((16|[2468][048]|[3579][26])00))))$/g.test( string ),\n            obj = {\n                result: date\n            };\n\n        return obj;\n    },\n    \n    email: function( string ){\n        // FROM https://emailregex.com\n        // AS FOR RFC 5322 Official Standard EMAIL MUST BE AT LEAST:\n        // a@a.aa\n        const obj = {\n            result: /^(([^<>()\\[\\]\\\\.,;:\\s@\"]+(\\.[^<>()\\[\\]\\\\.,;:\\s@\"]+)*)|(\".+\"))@((\\[[0-9]{1,3}\\.[0-9]{1,3}\\.[0-9]{1,3}\\.[0-9]{1,3}])|(([a-zA-Z\\-0-9]+\\.)+[a-zA-Z]{2,}))$/.test( string )\n        };\n\n        if( !obj.result ){\n\n            obj.errors = {};\n            if( string.indexOf('@') === -1 ){\n\n                // @ IS MISSING\n                obj.errors.missingAtChar = true;\n\n            } else {\n\n                let splitAt_at = string.split('@');\n                if( splitAt_at[0].length === 0 ){\n\n                    // USER NAME IS MISSING\n                    obj.errors.missingUserName = true;\n\n                }\n\n                if( splitAt_at[1].length === 0 ){\n\n                    // IS EMPTY AFTER @\n                    obj.errors.missingDomain = true;\n                    obj.errors.missingExtensionDot = true;\n                    obj.errors.missingExtension = true;\n\n                } else if( splitAt_at[1].indexOf('.') === -1 ) {\n\n                    // DOT IS MISSING\n                    obj.errors.missingExtensionDot = true;\n                    obj.errors.missingExtension = true;\n\n                } else {\n\n                    // EXTENSION MISSING OR NOT LONG ENOUGH\n                    let splitAt_dot = splitAt_at[1].split('.'),\n                        extLength = splitAt_dot[1].length;\n                    if( extLength === 0 ) {\n                        obj.errors.missingExtension = true;\n                    } else if( extLength < 2 ){\n                        obj.errors.minlengthExtension = true;\n                    }\n\n                }\n            }\n\n        }\n\n        return obj;\n    },\n    \n    fiscalCode: function( string ){\n        // http://blog.marketto.it/2016/01/regex-validazione-codice-fiscale-con-omocodia/\n        let obj = {\n                result: /^(?:[B-DF-HJ-NP-TV-Z](?:[AEIOU]{2}|[AEIOU]X)|[AEIOU]{2}X|[B-DF-HJ-NP-TV-Z]{2}[A-Z]){2}[\\dLMNP-V]{2}(?:[A-EHLMPR-T](?:[04LQ][1-9MNP-V]|[1256LMRS][\\dLMNP-V])|[DHPS][37PT][0L]|[ACELMRT][37PT][01LM])(?:[A-MZ][1-9MNP-V][\\dLMNP-V]{2}|[A-M][0L](?:[\\dLMNP-V][1-9MNP-V]|[1-9MNP-V][0L]))[A-Z]$/i.test( string )\n            };\n        \n        return obj;\n    },\n    \n    landlineNumber: function( string ){\n        // LANDLINE PREFIX:\n        // +39 | 0039 | not-set ( ALSO WITH INTERNATIONAL PREFIXES WITH 2 DIGITS )\n        // LANDLINE NUMBER MUST START WITH 0 ( AS FOR ITALIAN ONES ):\n        // 1234567890 | 12 34567890 | 123456789 | 1234 56789 ( ALSO WITH . - / AS SEPARATOR )\n        let obj = {\n            result: /^((00|\\+)\\d{2}[\\-\\. ]??)??(((0[\\d]{1,4}))([\\/\\-\\. ]){0,1}([\\d, ]{5,10}))$/.test( string )\n        };\n\n        return obj; \n    },\n    \n    mobileNumber: function( string ){\n        // +39 | 0039 | 39 | not-set ( ALSO WITH ALL INTERNATIONAL PREFIXES WITH 2 DIGITS )\n        // MOBILE NUMBER MUST START WITH 3\n        // 3234567890 | 323 4567890 | 323 45 67 890 ( ALSO WITH . OR - AS SEPARATOR )\n        let obj = {\n            result: /^((00|\\+)??\\d{2}[\\-\\. ]??)??3\\d{2}[\\-\\. ]??(\\d{6,7}|\\d{2}[\\-\\. ]??\\d{2}[\\-\\. ]??\\d{3})$/.test( string )\n        };\n\n        return obj;\n    },\n    \n    number: function( string ){\n        // ALL NUMBERS ( INTEGERS AND FLOATING )\n        // VALID NUMBERS: 123 | 123.456 | .123\n        let obj = {\n            result: /[+-]?([0-9]*[.])?[0-9]+/.test( string )\n        };\n\n        return obj;\n    },\n    \n    numberFloat: function( string ){\n        // ONLY FLOATING NUMBERS\n        // VALID NUMBERS: 123.456 | .123\n        let obj = {\n            result: /[+-]?([0-9]*[.])[0-9]+/.test( string )\n        };\n\n        return obj;\n    },\n    \n    numberInteger: function( string ){\n        // ONLY INTEGER NUMBERS\n        let obj = {\n            result: /^\\d+$/.test( string )\n        };\n\n        return obj;\n    },\n    \n    password: function( string ){\n        // PASSWORD ( NO SPECIAL CHARACTERS ) WITH AT LEAST:\n        // ONE DIGIT + ONE LOWERCASE + ONE UPPERCASE + MIN LENGTH OF 8 CHARACTERS\n        let obj = {\n            result: /^(?=.*[0-9])(?=.*[a-z])(?=.*[A-Z])[0-9a-zA-Z]{8,}$/.test(string)\n        };\n\n        if( !obj.result ){\n\n            obj.errors = {};\n            let strLength = string.length;\n            if( strLength < 8 ){ obj.errors.minlength = true; }\n            if( !/\\d/.test(string) ){ obj.errors.missingNumber = true; }\n            if( !/[A-Z]/.test(string) ){ obj.errors.missingUppercase = true; }\n            if( /[^0-9a-zA-Z]/.test(string) ){ obj.errors.invalidChars = true; }\n\n        }\n\n        return obj;\n    },\n\n    tel: function( string ){\n        // CHECK IF ONE OF landlineNumber OR mobileNumber IS VALID\n        let obj = {\n            result: this.landlineNumber(string).result || this.mobileNumber(string).result\n        };\n\n        return obj;\n    },\n    \n    url: function( string ){\n        // MUST NOT CONTAIN PARAMETERS:\n        // www.mysite.com/index.html         --> VALID URL\n        // www.mysite.com/index.html?v=hello --> INVALID URL\n        let obj = {\n            result: /^((https?|ftp|file):\\/\\/)?([\\da-z\\.-]+)\\.([a-z\\.]{2,6})([\\/\\w \\.-]*)*\\/?$/.test( string )\n        };\n\n        return obj;\n    },\n    \n    username: function( string ){\n        // USERNAME WITH LETTERS/NUMBERS/UNDERSCORE AND . - @ WITH MIN LENGTH 3 AND MAX LENGTH 24\n        //return /^[\\w\\.\\-\\@]{3,24}$/.test( string );\n        \n        // USERNAME MUST START WITH A LETTER/NUMBER/UNDERSCORE AND CAN ALSO CONTAIN . - @ WITH MIN LENGTH 3 AND MAX LENGTH 24\n        let obj = {\n            result: /^(?=\\w)(?=[\\-\\.\\@]?)[\\w\\-\\.\\@]{3,24}$/.test( string )\n        };\n\n        if( !obj.result ){\n\n            obj.errors = {};\n            let strLength = string.length;\n            if( strLength < 3 ){ obj.errors.minlength = true; }\n            if( strLength > 24 ){ obj.errors.maxlength = true; }\n            if( /[^\\w\\-\\.\\@]/.test(string) ){ obj.errors.invalidChars = true; }\n            if( !/^[\\w]/.test(string) ){ obj.errors.invalidStartChar = true; }\n\n        }\n\n        return obj;\n    },\n    \n    vatNumber: function( string ){\n        // VAT NUMBER CAN CONTAIN OR NOT THE 'IT' STRING AND THEN 11 NUMBERS\n        let obj = {\n            result: /^(IT){0,1}[0-9]{11}$/i.test( string )\n        };\n\n        if( !obj.result ){\n            obj.errors = {};\n            var strLength = string.length,\n                indexOfIT = string.indexOf('IT'),\n                checkLength = (indexOfIT === 0 ? 13 : 11);\n            if( indexOfIT < 1 ){\n                if( strLength < checkLength ){ obj.errors.minlength = true; }\n                else { obj.errors.maxlength = true; }\n            }\n        }\n\n        return obj;\n    }\n    \n}\n\nexport const _validationRulesAttributes = {\n\n    checkbox: function( data ){\n        let formEl = data.fieldEl.closest('form'),\n            dataChecksEl = formEl.querySelector('[name=\"' + data.fieldEl.name + '\"][data-checks]'),\n            obj = { result: data.fieldEl.checked };\n\n        if( dataChecksEl !== null ){\n            obj = this.checks({ attrValue: dataChecksEl.getAttribute('data-checks'), fieldEl: dataChecksEl});\n        }\n\n        return obj;\n    },\n\n    checks: function( data ){\n        try{\n            let attrValue = JSON.parse(data.attrValue),\n                fieldEl = data.fieldEl,\n                formEl = fieldEl.closest('form'),\n                checkedElLength = formEl.querySelectorAll('[name=\"' + fieldEl.name + '\"]:checked').length,\n                isMinOk = checkedElLength >= attrValue[0],\n                isMaxOk = checkedElLength <= attrValue[1],\n                obj = {\n                    result: isMinOk && isMaxOk\n                };\n\n            if( !obj.result ){\n\n                obj.errors = { checks: true };\n                if( !isMinOk ){ obj.errors.minChecks = true; }\n                if( !isMaxOk ){ obj.errors.maxChecks = true; }\n\n            }\n\n            return obj;\n        } catch(e){\n            throw new Error('\"data-checks\" attribute is not a valid array!');\n        }\n    },\n\n    equalTo: function( data ){\n        let fieldEl = data.fieldEl,\n            formEl = fieldEl.closest('form'),\n            checkFromEl = formEl.querySelector( '[name=\"' + fieldEl.getAttribute('data-equal-to') + '\"]' ),\n            obj = {\n                result: fieldEl.value === checkFromEl.value\n            };\n\n        if( !obj.result ){\n            \n            obj.errors = { equalTo: true };\n        }\n\n        return obj;\n    },\n    \n    exactLength: function( data ){\n        let valueLength = data.fieldEl.value.length,\n            exactLength = (data.attrValue * 1),\n            obj = {\n                result: valueLength === exactLength\n            };\n\n        if( !obj.result ){\n\n            obj.errors = { exactLength: true };\n            if( valueLength < exactLength ){ obj.errors.minlength = true; }\n            else { obj.errors.maxlength = true; }\n\n        }\n\n        return obj;\n    },\n\n    file: function( data ){\n        let fieldEl = data.fieldEl,\n            MIMEtype = (fieldEl.accept ? new RegExp(fieldEl.accept.replace( '*', '[^\\\\/,]+' )) : null),\n            filesList = Array.from(fieldEl.files),\n            obj = { result: true };\n\n        filesList.forEach(function( file ){\n            let exceedMaxFileSize = data.fieldOptions.maxFileSize > 0 && (file.size/1024/1024) > data.fieldOptions.maxFileSize,\n                isAcceptedFileType = (MIMEtype !== null ? MIMEtype.test(file.type) : true);\n\n            if( exceedMaxFileSize || !isAcceptedFileType ){\n                obj.result = false;\n                if( typeof obj.errors === 'undefined' ){\n                    obj.errors = {};\n                }\n                if( exceedMaxFileSize ){ obj.errors.maxFileSize = true; }\n                if( !isAcceptedFileType ){ obj.errors.acceptedFileType = true; }\n\n            }\n        });\n\n        return obj;\n    },\n\n    length: function( data ){\n        try{\n            let valueL = data.fieldEl.value.length,\n                attrValue = JSON.parse(data.attrValue),\n                isMinlengthOk = valueL >= attrValue[0],\n                isMaxlengthOk = valueL <= attrValue[1],\n                obj = { result: isMinlengthOk && isMaxlengthOk };\n\n            if( !obj.result ){\n\n                obj.errors = { length: true };\n                if( !isMinlengthOk ){ obj.errors.minlength = true; }\n                if( !isMaxlengthOk ){ obj.errors.maxlength = true; }\n\n            }\n\n            return obj;\n        } catch(e){\n            throw new Error('\"data-length\" attribute is not a valid array!');\n        }\n    },\n    \n    max: function( data ){\n        let fieldEl = data.fieldEl,\n            isDate = (fieldEl.matches('[type=\"date\"]') || fieldEl.matches('[data-subtype=\"date\"]') || fieldEl.matches('[data-subtype=\"dateDDMMYYYY\"]')),\n            value = data.fieldEl.value,\n            maxVal = data.attrValue;\n        \n        if( isDate ){\n\n            let splitChar = _getSplitChar( value );\n\n            if( value.indexOf(splitChar) === 2 ){\n                // DD MM YYYY\n                value = value.split( splitChar ).reverse();\n            } else {\n                // YYYY MM DD\n                value = value.split( splitChar );\n            }\n\n            value = value.join('');\n            maxVal = maxVal.split('-').join('');\n\n        }\n\n        value = value * 1;\n        maxVal = maxVal * 1;\n\n        let obj = {\n                result: value <= maxVal\n            };\n\n        if( !obj.result ){\n            \n            obj.errors = { max: true };\n        }\n        \n        return obj;\n    },\n    \n    maxlength: function( data ){\n        const obj = {\n            result: data.fieldEl.value.length <= (data.attrValue * 1)\n        };\n\n        if( !obj.result ){\n\n            obj.errors = { maxlength: true };\n        }\n\n        return obj;\n    },\n    \n    min: function( data ){\n        let fieldEl = data.fieldEl,\n            isDate = (fieldEl.matches('[type=\"date\"]') || fieldEl.matches('[data-subtype=\"date\"]') || fieldEl.matches('[data-subtype=\"dateDDMMYYYY\"]')),\n            value = data.fieldEl.value,\n            minVal = data.attrValue;\n        \n        if( isDate ){\n\n            let splitChar = _getSplitChar( value );\n\n            if( value.indexOf(splitChar) === 2 ){\n                // DD MM YYYY\n                value = value.split( splitChar ).reverse();\n            } else {\n                // YYYY MM DD\n                value = value.split( splitChar );\n            }\n\n            value = value.join('');\n            minVal = minVal.split('-').join('');\n\n        }\n\n        value = value * 1;\n        minVal = minVal * 1;\n\n        let obj = {\n                result: value >= minVal\n            };\n\n        if( !obj.result ){\n            \n            obj.errors = { min: true };\n        }\n        \n        return obj;\n    },\n\n    minlength: function( data ){\n        const obj = {\n            result: data.fieldEl.value.length >= (data.attrValue * 1)\n        };\n\n        if( !obj.result ){\n\n            obj.errors = { minlength: true };\n        }\n\n        return obj;\n    },\n\n    pattern: function( data ){\n        let fieldEl = data.fieldEl,\n            fieldPattern = fieldEl.pattern,\n            fieldRegex = new RegExp( fieldPattern ),\n            obj = {\n                result: fieldRegex.test( fieldEl.value )\n            };\n\n        if( !obj.result ){\n\n            obj.errors = { pattern: true };\n        }\n\n        return obj;\n    },\n\n    radio: function( data ){\n        let fieldEl = data.fieldEl,\n            fieldChecked = fieldEl.closest('form').querySelector( '[name=\"'+ fieldEl.name +'\"]:checked' ),\n            isValid = fieldChecked !== null && fieldChecked.value.trim().length > 0,\n            obj = { result: isValid };\n\n        return obj;\n    },\n\n    requiredFrom: function( data ){\n        let fieldEl = data.fieldEl,\n            formEl = fieldEl.closest('form'),\n            isValidValue = fieldEl.value.trim().length > 0,\n            reqMoreEl = formEl.querySelector( fieldEl.getAttribute('data-required-from') ),\n            checkedEl = formEl.querySelector( '[name=\"'+ reqMoreEl.name +'\"]:checked' ),\n            obj = { result: checkedEl !== null };\n\n        if( reqMoreEl.checked && reqMoreEl.required ){\n            obj.result = isValidValue;\n        }\n\n        if( !obj.result ){\n            obj.errors = { requiredFrom: true };\n        }\n        \n        return obj;\n    }\n    \n}\n","\n/**! formJS v3.0.0 | Valerio Di Punzio (@SimplySayHi) | https://valeriodipunzio.com/plugins/formJS/ | https://github.com/SimplySayHi/formJS | MIT license */\n\nimport { _mergeObjects }        from './modules/helper.js';\nimport { _callbackFns }         from './modules/listenerCallbacks.js';\n\nimport { options }              from './modules/options.js';\nimport { validationRules }      from './modules/validationRules.js';\n\n// CONSTRUCTOR FUNCTION & PUBLIC METHODS\nimport { _constructor }         from './modules/constructor.js';\nimport { destroy }              from './modules/destroy.js';\nimport { getFormData }          from './modules/getFormData.js';\nimport { init }                 from './modules/init.js';\nimport { isValidField }         from './modules/isValidField.js';\nimport { isValidForm }          from './modules/isValidForm.js';\nimport { submit }               from './modules/submit.js';\nimport { validateField }        from './modules/validateField.js';\nimport { validateForm }         from './modules/validateForm.js';\n\nconst version = '3.0.0';\nconst _listenerCallbacks = new WeakMap();\n\nclass Form {\n\n    constructor( formEl, optionsObj ){\n        const self = this;\n\n        _listenerCallbacks.set(self, {\n            charCount:          _callbackFns.charCount,\n            dataTypeNumber:     _callbackFns.dataTypeNumber,\n            keypressMaxlength:  _callbackFns.keypressMaxlength,\n            pastePrevent:       _callbackFns.pastePrevent.bind(self),\n            submit:             _callbackFns.submit.bind(self),\n            validation:         _callbackFns.validation.bind(self)\n        });\n        \n        _constructor.call( self, formEl, optionsObj );\n    }\n\n    get listenerCallbacks(){\n        return _listenerCallbacks.get(this);\n    }\n\n    destroy(){\n        destroy.call(this);\n    }\n    \n    getFormData( customFn ){\n        return getFormData.call(this, customFn);\n    }\n\n    init(){\n        return init.call(this);\n    }\n    \n    isValidField( fieldEl, fieldOptions ){\n        return isValidField.call(this, fieldEl, fieldOptions);\n    }\n    \n    isValidForm( optionsObj ){\n        return isValidForm.call(this, optionsObj);\n    }\n\n    submit( optionsObj, event ){\n        submit.call(this, optionsObj, event);\n    }\n\n    validateField( fieldElem ){\n        return validateField.call(this, fieldElem);\n    }\n\n    validateForm(){\n        return validateForm.call(this);\n    }\n    \n    static addValidationRules( rulesObj ){\n        this.prototype.validationRules = _mergeObjects({}, rulesObj, this.prototype.validationRules);\n    }\n    \n    static setOptions( optionsObj ){\n        this.prototype.options = _mergeObjects({}, optionsObj, this.prototype.options);\n    }\n\n}\n\nForm.prototype.isInitialized = false;\nForm.prototype.options = options;\nForm.prototype.validationRules = validationRules;\nForm.prototype.version = version;\n\nif( !window.Form ){ window.Form = Form; }\nif( !window.FormJS ) { window.FormJS = Form; }\n","\nimport { _executeCallback, _fieldsStringSelector } from './helper.js';\n\nexport const _callbackFns = {\n\n    charCount: function( eventOrField ){\n\n        const fieldEl = eventOrField.target || eventOrField;\n\n        if( fieldEl.matches( '[data-char-count]' ) ){\n            try {\n                let charLengthEl = fieldEl.closest('[data-formjs-question]').querySelector('[data-char-length]');\n\n                if( charLengthEl !== null ){\n                    let usedChars = fieldEl.value.length;\n                    charLengthEl.textContent = usedChars;\n                }\n            } catch (error) {}\n        }\n\n    },\n\n    dataTypeNumber: function( event ){\n\n        const fieldEl = event.target;\n        \n        if( fieldEl.matches('[data-type=\"number\"]') ){\n            let fieldValue = fieldEl.value,\n                hasInvalidChars = /[^\\d.,+\\-]/.test(fieldValue);\n            \n            if( hasInvalidChars ){\n                event.stopImmediatePropagation();\n                let valueReplaced = fieldValue.replace(/[^\\d.,+\\-]/g, '');\n                fieldEl.value = valueReplaced;\n            }\n        }\n\n    },\n\n    keypressMaxlength: function( event ){\n\n        const fieldEl = event.target;\n        \n        if( fieldEl.matches( '[maxlength]' ) ){\n            const maxLength = fieldEl.maxLength * 1,\n                keyPressed = event.which || event.keyCode,\n                allowedKeys = [8, 37, 38, 39, 46];\n\n            if( fieldEl.value.length >= maxLength && allowedKeys.indexOf(keyPressed) === -1 ){\n                return false;\n            }\n        }\n\n    },\n\n    pastePrevent: function( event ){\n\n        const self = this,\n              fieldEl = event.target;\n        let fieldOptions = self.options.fieldOptions;\n\n        if( fieldEl.matches( fieldOptions.preventPasteFields ) ){     \n            event.preventDefault();\n            _executeCallback.call( self, fieldOptions.onPastePrevented, fieldEl );\n        }\n\n    },\n\n    submit: function( event ){\n        this.submit( {}, event );\n    },\n\n    validation: function( event ){\n\n        const self = this,\n            eventName = event.type,\n            fieldEl = event.target;\n\n        if( fieldEl.matches( _fieldsStringSelector ) ){\n            const isFieldForChangeEvent = fieldEl.matches( 'select, [type=\"radio\"], [type=\"checkbox\"], [type=\"file\"]' ),\n                isRadio = fieldEl.type === 'radio',\n                isReqFrom = fieldEl.matches('[data-required-from]'),\n                isReqMore = fieldEl.matches('[data-require-more]'),\n                isValidValue = fieldEl.value.trim().length > 0;\n\n            // HANDLE data-require-more FIELDS\n            if( isRadio && eventName === 'change' ){\n                let findReqMoreEl = (isReqMore ? fieldEl : self.formEl.querySelector('[name=\"'+ fieldEl.name +'\"][data-require-more]')),\n                    findReqFromEl = (findReqMoreEl !== null ? self.formEl.querySelector('[data-required-from=\"#'+ findReqMoreEl.id +'\"]') : null);\n\n                if( isReqMore ){\n\n                    if( findReqFromEl !== null ){\n                        if( fieldEl.required ){\n                            findReqFromEl.required = true;\n                        }\n                        if( self.options.fieldOptions.focusOnRelated ){\n                            findReqFromEl.focus();\n                        }\n                    }\n\n                } else if( findReqMoreEl !== null ){\n\n                    if( findReqFromEl !== null ){\n                        findReqFromEl.required = false;\n                        findReqFromEl.value = '';\n                    }\n\n                }\n            }\n\n            // HANDLE data-required-from FIELDS\n            if( isReqFrom ){\n                if( isValidValue ){\n\n                    let reqMoreEl = self.formEl.querySelector( fieldEl.getAttribute('data-required-from') );\n                    reqMoreEl.checked = true;\n\n                    if( reqMoreEl.required ){\n                        fieldEl.required = true;\n                    }\n                }\n            }\n            \n            if(\n                (isFieldForChangeEvent && eventName === 'change') ||\n                (!isFieldForChangeEvent && eventName !== 'change')\n            ){\n                \n                self.validateField( fieldEl );\n\n            }\n        }\n        \n    }\n\n};\n","\n//import { ajaxOptions } from './optionsAjax.js';\nimport { ajaxOptions } from './optionsAjaxXhr.js';\n\nexport const options = {\n\n    fieldOptions: {\n        checkDirtyField:        false,\n        cssClasses: {\n            dirty:              'is-dirty',\n            error:              'has-error',\n            errorEmpty:         'has-error-empty',\n            errorRule:          'has-error-rule',\n            valid:              'is-valid'\n        },\n        focusOnRelated:         true,\n        handleFileUpload:       true,\n        handleValidation:       true,\n        maxFileSize:            10,\n        onPastePrevented:       null,\n        onValidation:           null,\n        preventPasteFields:     '[type=\"password\"], [data-equal-to]',\n        skipUIfeedback:         false,\n        strictHtmlValidation:   true,\n        validateOnEvents:       'input change'\n    },\n\n    formOptions: {\n        ajaxOptions:            ajaxOptions,\n        ajaxSubmit:             true,\n        beforeSend:             null,\n        getFormData:            null,\n        handleSubmit:           true,\n        onSubmitComplete:       null,\n        onSubmitError:          null,\n        onSubmitSuccess:        null\n    }\n    \n}\n","\nexport let ajaxOptions = {\n    async:              true,\n    cache:              false,\n    contentType:        'application/x-www-form-urlencoded; charset=UTF-8',\n    headers: {\n                        'X-Requested-With': 'XMLHttpRequest',\n    },\n    method:             'POST',\n    timeout:            0,\n    url:                location.href\n}\n","\nimport { _checkFormEl, _isNodeList, _mergeObjects } from './helper.js';\nimport { _setCallbackFunctionsInOptions }           from './optionsUtils.js';\nimport { _formStartup }                             from './formStartup.js';\n\nexport function _constructor( formEl, optionsObj = {} ){\n\n    let self = this,\n        argsL = arguments.length,\n        checkFormEl = _checkFormEl(formEl);\n\n    if( argsL === 0 || (argsL > 0 && !formEl) ){\n        throw new Error('First argument \"formEl\" is missing or falsy!');\n    }\n    if( _isNodeList(formEl) ){\n        throw new Error('First argument \"formEl\" must be a single DOM node or a form CSS selector, not a NodeList!');\n    }\n    if( !checkFormEl.result ){\n        throw new Error('First argument \"formEl\" is not a DOM node nor a form CSS selector!');\n    }\n\n    self.formEl = checkFormEl.element;\n    self.options = _mergeObjects({}, optionsObj, Form.prototype.options);\n    _setCallbackFunctionsInOptions.call( self );\n\n    _formStartup.call( self );\n    \n}\n","\nimport { _addClass, _removeClass }  from './helper.js';\nimport { _checkDirtyField }         from './checkDirtyField.js';\n\nconst _defaultCallbacksInOptions = {\n    fieldOptions: {\n        onValidation: function ( fieldsArray ) {\n\n            let self = this,\n                options = self.options.fieldOptions;\n\n            fieldsArray.forEach(function( obj ){\n                let fieldEl = obj.fieldEl,\n                    hasTypedValue = fieldEl.value.trim().length > 0,\n                    containerEl = fieldEl.closest('[data-formjs-question]'),\n                    isReqFrom = fieldEl.matches('[data-required-from]'),\n                    reqMoreEl = self.formEl.querySelector( fieldEl.getAttribute('data-required-from') );\n\n                if( options.checkDirtyField ){\n                    _checkDirtyField.call( self, fieldEl );\n                }\n                \n                if( containerEl !== null && !options.skipUIfeedback ){\n                    if( obj.result ){\n\n                        if( !isReqFrom || (isReqFrom && reqMoreEl.checked) ){\n                            // IF FIELD IS VALID\n                            let errorClasses = options.cssClasses.error + ' ' + options.cssClasses.errorEmpty + ' ' + options.cssClasses.errorRule;\n                            _removeClass( containerEl, errorClasses );\n                            _addClass( containerEl, options.cssClasses.valid );\n                        }\n\n                    } else {\n\n                        // IF FIELD IS NOT VALID\n                        let extraErrorClass = options.cssClasses.errorRule;\n\n                        // HANDLE CASE OF FIELD data-checks\n                        let isChecks = fieldEl.matches('[data-checks]'),\n                            checkedElLength = (isChecks ? containerEl.querySelectorAll('[name=\"' + fieldEl.name + '\"]:checked').length : 0);\n\n                        if( (!isChecks && !hasTypedValue) || (isChecks && checkedElLength === 0) ){\n                            extraErrorClass = options.cssClasses.errorEmpty;\n                        }\n\n                        let errorClasses = options.cssClasses.error + ' ' + extraErrorClass,\n                            errorClassToRemove = options.cssClasses.errorEmpty + ' ' + options.cssClasses.errorRule;\n                        _removeClass( containerEl, options.cssClasses.valid + ' ' + errorClassToRemove );\n                        _addClass( containerEl, errorClasses );\n\n                    }\n                }\n            });\n            \n        }\n    }\n};\n\nexport const _setCallbackFunctionsInOptions = function(){\n\n    const self = this,\n            callbacks = {\n                fieldOptions: ['onPastePrevented', 'onValidation'],\n                formOptions: ['beforeSend', 'onSubmitComplete', 'onSubmitError', 'onSubmitSuccess']\n            };\n\n    for(let opt in callbacks){\n        let fjsOpt = callbacks[opt];\n\n        fjsOpt.forEach(function(fnName){\n            let fnInOptions = self.options[opt][fnName],\n                fnList = [];\n\n            if( typeof fnInOptions === 'function' ){\n                fnList.push(fnInOptions);\n            } else if( Array.isArray(fnInOptions) ) {\n                fnList.concat(fnInOptions);\n            } else {\n                return;\n            }\n\n            if( typeof _defaultCallbacksInOptions[opt] !== 'undefined' && typeof _defaultCallbacksInOptions[opt][fnName] === 'function' ){\n                fnList.unshift(_defaultCallbacksInOptions[opt][fnName]);\n            }\n\n            self.options[opt][fnName] = fnList;\n        });\n    }\n\n}\n","\nimport { _addClass, _isNodeList, _removeClass } from './helper.js';\n\nexport function _checkDirtyField( fields, cssClasses = this.options.fieldOptions.cssClasses.dirty ){\n\n    var fields = (_isNodeList(fields) ? Array.from( fields ) : [fields]);\n    \n    fields.forEach(function(fieldEl){\n        if( fieldEl.type !== 'checkbox' && fieldEl.type !== 'radio' ){\n            let containerEl = fieldEl.closest('[data-formjs-question]') || fieldEl;\n\n            if( fieldEl.value ){\n                \n                _addClass( containerEl, cssClasses );\n                \n            } else {\n                \n                _removeClass( containerEl, cssClasses );\n                \n            }\n        }\n    });\n    \n}\n","\nexport function _formStartup(){\n\n    const self = this,\n          formEl = self.formEl;\n\n    if( !formEl.matches('[novalidate]') ){ return null; }\n\n    let fieldOptions = self.options.fieldOptions,\n        formOptions = self.options.formOptions;\n\n    // INIT FORM UTILITIES - START\n    let charLengthElems = formEl.querySelectorAll('[data-char-length]');\n    if( charLengthElems.length > 0 ){\n        Array.from( charLengthElems ).forEach(function( element ){\n            try {\n                let containerEl = element.closest('[data-formjs-question]'),\n                    fieldEl = containerEl.querySelector('[data-char-count]');\n\n                if( fieldEl !== null && fieldEl.matches('[maxlength]') ){\n                    // PRINT RELATED MAX LENGTH IN HTML\n                    let maxlength = fieldEl.getAttribute('maxlength');\n                    containerEl.querySelector('[data-char-maxlength]').textContent = maxlength;\n                }\n\n                // PRINT CHAR COUNT IN HTML\n                self.listenerCallbacks.charCount.call( null, fieldEl );\n            } catch (error) {}\n        });\n    }\n\n    if( fieldOptions.maxFileSize > 0 ){\n        let maxFileSizeElems = formEl.querySelectorAll('[data-max-file-size]');\n        if( maxFileSizeElems.length > 0 ){\n            Array.from( maxFileSizeElems ).forEach(function( element ){\n                try {\n                    let fieldEl = element.closest('[data-formjs-question]').querySelector('[type=\"file\"]');\n\n                    if( fieldEl !== null ){\n                        // PRINT MAX FILE SIZE FOR INPUTS WITH type=\"file\"\n                        element.textContent = fieldOptions.maxFileSize;\n                    }\n                } catch (error) {}\n            });\n        }\n    }\n    // INIT FORM UTILITIES - END\n\n    // HANDLE FIELD VALIDATION\n    if( fieldOptions.handleValidation ){\n        \n        // VALIDATION WITH ATTRIBUTES LIKE HTML ONES ( ALSO FOR BUG FIXING, EG: maxlength IN ANDROID )\n        if( fieldOptions.strictHtmlValidation ){\n            \n            // maxlength\n            // BUGGY IN ANDROID BROWSERS\n            formEl.addEventListener('keypress', self.listenerCallbacks.keypressMaxlength, false);\n\n            // data-type=\"number\"\n            // SINCE VALIDATING type=\"number\" WITH NON NUMERIC CHARS WILL RETURN EMPTY STRING IN SOME BROWSERS ( EG: FIREFOX )\n            formEl.addEventListener('input', self.listenerCallbacks.dataTypeNumber, false);\n            \n        }\n        \n        if( fieldOptions.preventPasteFields && formEl.querySelectorAll( fieldOptions.preventPasteFields ).length ){\n            // INIT EVENT LISTENER FOR \"PASTE\" EVENT TO PREVENT IT ON SPECIFIED FIELDS\n            formEl.addEventListener('paste', self.listenerCallbacks.pastePrevent, false);\n        }\n\n        if( formEl.querySelectorAll('[data-char-count]').length > 0 ){\n            // INIT EVENT LISTENER FOR FIELDS WITH \"data-char-count\" ATTRIBUTE\n            formEl.addEventListener('input', self.listenerCallbacks.charCount, false);\n        }\n\n        // INIT EVENTS LISTENER ( AS IN fieldOptions )\n        fieldOptions.validateOnEvents.split(' ').forEach(function( eventName ){\n            let useCapturing = (eventName === 'blur' ? true : false);\n            formEl.addEventListener(eventName, self.listenerCallbacks.validation, useCapturing);\n        });\n\n    }\n    \n    // HANDLE FORM SUBMIT\n    if( formOptions.handleSubmit ){\n        // INIT FORM SUBMIT ( DEFAULT AND AJAX )\n        formEl.addEventListener('submit', self.listenerCallbacks.submit);\n\n        if( formOptions.ajaxSubmit ){\n            if( formEl.getAttribute('enctype') ){\n\n                // FOR XMLHttpRequest API\n                formOptions.ajaxOptions.contentType = formEl.getAttribute('enctype');\n\n                // FOR fetch API\n                formOptions.ajaxOptions.headers['Content-Type'] = formEl.getAttribute('enctype');\n                \n            }\n\n            if( formEl.getAttribute('method') ){\n                formOptions.ajaxOptions.method = formEl.getAttribute('method').toUpperCase();\n            }\n\n            if( formEl.getAttribute('action') ){\n                formOptions.ajaxOptions.url = formEl.getAttribute('action');\n            }\n        }\n    }\n\n}\n","\nexport function destroy(){\n\n    const self = this,\n          formEl = self.formEl,\n          validationListenerNames = self.options.fieldOptions.validateOnEvents;\n\n    if( formEl.querySelectorAll('[data-char-count]').length > 0 ){\n        formEl.removeEventListener('input', self.listenerCallbacks.charCount, false);\n    }\n\n    if( self.options.fieldOptions.strictHtmlValidation ){\n        formEl.removeEventListener('keypress', self.listenerCallbacks.keypressMaxlength, false);\n        formEl.removeEventListener('input', self.listenerCallbacks.dataTypeNumber, false);\n    }\n\n    if( self.options.fieldOptions.preventPasteFields ){\n        formEl.removeEventListener('paste', self.listenerCallbacks.pastePrevent, false);\n    }\n\n    if( self.options.formOptions.handleSubmit ){\n        formEl.removeEventListener('submit', self.listenerCallbacks.submit);\n    }\n\n    validationListenerNames.split(' ').forEach(function( eventName ){\n        let useCapturing = (eventName === 'blur' ? true : false);\n        formEl.removeEventListener(eventName, self.listenerCallbacks.validation, useCapturing);\n    });\n    \n}\n","\nexport function getFormData( customFn = this.options.formOptions.getFormData ){\n\n    let formData = {},\n        self = this,\n        formEl = self.formEl,\n        formFieldsEl = formEl.querySelectorAll('input, select, textarea'),\n        excludeSelectors = ':not([type=\"reset\"]):not([type=\"submit\"]):not([type=\"button\"]):not([type=\"file\"]):not([data-exclude-data])',\n        filteredFields = Array.from(formFieldsEl).filter(elem => elem.matches(excludeSelectors) );\n    \n    if( typeof customFn === 'function' ){\n\n        formData = customFn.call( self, filteredFields );\n\n    } else {\n\n        filteredFields.forEach(function( fieldEl ){\n            let isCheckbox = fieldEl.type === 'checkbox',\n                isRadio = fieldEl.type === 'radio',\n                isSelect = fieldEl.matches('select'),\n                name = fieldEl.name,\n                value = fieldEl.value;\n                         \n            if( isCheckbox ) {\n                \n                value = fieldEl.checked;\n                let checkboxes = Array.from( formEl.querySelectorAll('[name=\"'+ name +'\"]') );\n                if( checkboxes.length > 1 ){\n\n                    value = [];\n                    let checkedElems = checkboxes.filter(field => field.checked);\n                    checkedElems.forEach(fieldEl => {\n                        value.push( fieldEl.value );\n                    });\n\n                }\n                    \n            } else if( isRadio ){\n                \n                let checkedRadio = formEl.querySelector('[name=\"'+ name +'\"]:checked');\n                value = (checkedRadio === null ? null : checkedRadio.value);\n                \n            } else if( isSelect ){\n\n                let selectedOpts = Array.from( fieldEl.options ).filter(option => option.selected);\n                if( selectedOpts.length > 1 ){\n\n                    value = [];\n                    selectedOpts.forEach(fieldEl => {\n                        value.push( fieldEl.value );\n                    });\n\n                }\n            }\n\n            formData[ name ] = value;\n        });\n\n    }\n    \n    return formData;\n    \n}\n","\nimport { _fieldsStringSelector } from './helper.js';\n\nexport const init = function(){\n\n    const self = this,\n          formEl = self.formEl,\n          formFields = formEl.querySelectorAll( _fieldsStringSelector );\n\n    Array.from( formFields ).forEach(function( fieldEl ){\n        const isCheckboxOrRadio = (fieldEl.type === 'checkbox' || fieldEl.type === 'radio'),\n              fieldChecked = formEl.querySelector('[name=\"' + fieldEl.name + '\"]:checked'),\n              isReqFrom = fieldEl.matches('[data-required-from]'),\n              reqMoreEl = (isReqFrom ? formEl.querySelector(fieldEl.getAttribute('data-required-from')) : null);\n        \n        // VALIDATE FIELDS IF THEY ALREADY HAVE A VALUE\n        if(\n            (!isCheckboxOrRadio && fieldEl.value) || \n            (isCheckboxOrRadio && fieldChecked !== null) ||\n            (isReqFrom && reqMoreEl.checked)\n        ){\n\n            if( isCheckboxOrRadio ){\n                fieldEl = fieldChecked;\n            }\n\n            self.validateField( fieldEl );\n\n        }\n    });\n\n    self.isInitialized = true;\n\n    return self;\n\n}\n","\nimport { _isDOMNode, _mergeObjects } from './helper.js';\nimport { _isValid } from './isValid.js';\n\nexport function isValidField( fieldElem, fieldOptionsObj = {} ){\n\n    const self = this,\n          fieldEl = (typeof fieldElem === 'string' ? self.formEl.querySelector(fieldElem) : fieldElem);\n\n    let obj = { result: false, fieldEl: null };\n\n    if( !_isDOMNode(fieldEl) ){ return obj; }\n\n    let options =           _mergeObjects( {}, fieldOptionsObj, self.options.fieldOptions ),\n        isValidValue =      fieldEl.value.trim().length > 0,\n        isRequired =        fieldEl.required,\n        isReqFrom =         fieldEl.matches('[data-required-from]'),\n        isValidateIfFilled =fieldEl.matches('[data-validate-if-filled]');\n    \n    if(\n        (!isRequired && !isValidateIfFilled && !isReqFrom) ||   // IT IS A NORMAL FORM FIELD\n        (isValidateIfFilled && !isValidValue) ||                // IT IS data-validate-if-filled AND EMPTY\n        (isReqFrom && !isRequired )                             // IT IS data-required-from AND NOT required\n    ){\n\n        obj.result = true;\n       \n    } else {\n        \n        obj =  _isValid.call( self, fieldEl, options );\n        \n    }\n\n    obj.fieldEl = fieldEl;\n    \n    return obj;\n\n}\n","\nimport { _mergeObjects, _toCamelCase } from './helper.js';\nimport { _validationRulesAttributes } from './validationRules.js';\n\nexport function _isValid( fieldEl, fieldOptions = {} ){\n\n    const self = this,\n          fieldType = ( fieldEl.matches('[data-subtype]') ? _toCamelCase( fieldEl.getAttribute('data-subtype') ) : fieldEl.type ),\n          fieldValue = fieldEl.value,\n          isValidValue = fieldValue.trim().length > 0,\n          // ALPHABETICAL REVERSE ORDER\n          fieldAttributes = Array.from(fieldEl.attributes).sort(function(a,b){ return a.name < b.name });\n\n    let attrValidations = [],\n        attrValidationsResult = isValidValue,\n        obj = { result: isValidValue };\n\n    if( !isValidValue ){\n        obj.errors = { empty: true };\n        obj.result = false;\n        return obj;\n    }\n\n    // COLLECT SPECIFIC VALIDATIONS FOR _validationRulesAttributes\n    fieldAttributes.forEach(function(attr){\n        // FOR data-* ATTRIBUTES -> REMOVE \"data-\" AND TRANSFORM TO CAMELCASE\n        let attrName = _toCamelCase( attr.name.replace('data-', '') ),\n            attrValue = attr.value,\n            isTypeValueWithFn = attrName === 'type' && typeof _validationRulesAttributes[attrValue] === 'function',\n            isAttrNameWithFn = typeof _validationRulesAttributes[attrName] === 'function';\n\n        if( isTypeValueWithFn || isAttrNameWithFn ){\n\n            let extraValObj = {\n                    attrName: (isTypeValueWithFn ? attrValue : attrName),\n                    attrValue: attrValue,\n                    fieldEl,\n                    fieldOptions\n                };\n\n            if( isTypeValueWithFn || attrName === 'requiredFrom' ){\n                // THESE VALIDATIONS MUST RUN BEFORE ALL OTHERS\n                attrValidations.unshift( extraValObj );\n            } else {\n                attrValidations.push( extraValObj );\n            }\n\n        }\n    });\n\n    // RUN SPECIFIC VALIDATIONS FOR _validationRulesAttributes\n    attrValidations.forEach(function(item){\n        let extraVal = _validationRulesAttributes[item.attrName]( item, fieldEl );\n        if( !extraVal.result ){\n            obj = _mergeObjects({}, extraVal, obj);\n            attrValidationsResult = false;\n        }\n    });\n\n    // RUN VALIDATIONS FOR validationRules\n    if( typeof self.validationRules[fieldType] === 'function' ){\n        obj = _mergeObjects( {}, self.validationRules[fieldType](fieldValue, fieldEl), obj );\n        obj.result = obj.result && attrValidationsResult;\n        if( !obj.result ){\n            if( typeof obj.errors === 'undefined' ){\n                obj.errors = {};\n            }\n            obj.errors.rule = true;\n        }\n    }\n\n    return obj;\n\n}\n","\nimport { _fieldsStringSelector, _isDOMNode, _mergeObjects } from './helper.js';\n\nexport function isValidForm( options = {} ){\n\n    const self = this,\n          formEl = self.formEl;\n\n    let obj = {\n            fields: [],\n            result: true\n        };\n\n    if( !_isDOMNode(formEl) || !formEl.matches('[novalidate]') ){\n        obj.result = false;\n        return obj;\n    }\n    \n    var fieldOptions = _mergeObjects( {}, options.fieldOptions || {}, self.options.fieldOptions ),\n        currentFieldName = '',\n        currentFieldType = '';\n    \n    if( typeof fieldOptions.focusOnRelated === 'undefined' ){\n        fieldOptions.focusOnRelated = false;\n    }\n    \n    Array.from( formEl.querySelectorAll(_fieldsStringSelector) ).forEach(function( fieldEl ){\n        let name = fieldEl.name,\n            type = fieldEl.type,\n            fieldData = {};\n        \n        if( (name === currentFieldName && type === currentFieldType) ){ return true; }\n        \n        if( !fieldEl.matches('[data-required-from]') ){\n            currentFieldName = name;\n            currentFieldType = type;\n        }\n        \n        fieldData = self.isValidField( fieldEl, fieldOptions );\n\n        if( !fieldData.result ){\n            obj.result = false;\n        }\n        \n        obj.fields.push( fieldData );\n    });\n    \n    return obj;\n\n}\n","\nimport { _executeCallback, _isPlainObject, _mergeObjects } from './helper.js';\n//import { _ajaxCall } from './ajaxCall.js';\nimport { _ajaxCall } from './ajaxCallXhr.js';\n\nexport function submit( options = {}, event = null ){\n\n    const self = this,\n          formEl = self.formEl,\n          eventPreventDefault = ( enableBtn = true ) => {\n              if( btnEl && enableBtn ){ btnEl.disabled = false; }\n              if( event ){ event.preventDefault(); }\n          };\n    \n    options.fieldOptions = _mergeObjects( {}, (options.fieldOptions || {}), self.options.fieldOptions );\n    options.formOptions = _mergeObjects( {}, (options.formOptions || {}), self.options.formOptions );\n    \n    const handleValidation = options.fieldOptions.handleValidation,\n          formValidation = (handleValidation ? self.isValidForm( options ) : { result: true });\n\n    const btnEl = formEl.querySelector('[type=\"submit\"]'),\n          isAjaxForm = options.formOptions.ajaxSubmit;\n    \n    if( handleValidation ){\n        _executeCallback.call( self, options.fieldOptions.onValidation, formValidation.fields );\n    }\n    \n    let formDataObj = (isAjaxForm ? self.getFormData() : null),\n        callbacksBeforeSend = [],\n        beforeSendOpt = options.formOptions.beforeSend;\n\n    if( typeof beforeSendOpt === 'function' || Array.isArray(beforeSendOpt) ){\n        let beforeSendData = {\n                stopExecution: false\n            },\n            stopCallbackLoop = false;\n\n        if( formDataObj ){\n            beforeSendData.formData = formDataObj;\n        }\n\n        if( typeof beforeSendOpt === 'function' ){\n            callbacksBeforeSend.push( beforeSendOpt );\n        } else if( Array.isArray(beforeSendOpt) ) {\n            callbacksBeforeSend = beforeSendOpt;\n        }\n\n        callbacksBeforeSend.forEach(function(cbFn){\n            if( !stopCallbackLoop ){\n                let beforeSendFn = cbFn.call( self, beforeSendData );\n                \n                if( _isPlainObject(beforeSendFn) ){\n                    formDataObj = beforeSendFn.formData || formDataObj;\n                    if( beforeSendFn.stopExecution ){\n                        stopCallbackLoop = true;\n                    }\n                }\n            }\n        });\n\n        if( stopCallbackLoop ){\n            eventPreventDefault();\n            return false;\n        }\n    }\n\n    if( !formValidation.result || (btnEl && btnEl.disabled) ){\n        eventPreventDefault();\n        return false;\n    }\n\n    if( btnEl ){\n        btnEl.disabled = true;\n    }\n    \n    if( isAjaxForm ){\n\n        // AJAX FORM SUBMIT\n        eventPreventDefault(false);\n        _ajaxCall.call(self, formDataObj);\n\n    } else if( !event ){\n\n        // TRIGGER SUBMIT EVENT\n        let submitEvent = new Event('submit', {'bubbles': true, 'cancelable': true});\n        formEl.dispatchEvent(submitEvent);\n\n    }\n    \n}\n","\nimport { _executeCallback, _mergeObjects, _serialize } from './helper.js';\n\n// AJAX CALL USING XMLHttpRequest API\nexport function _ajaxCall( formDataObj ){\n\n    let self = this,\n        formEl = self.formEl,\n        fieldOptions = self.options.fieldOptions,\n        formOptions = self.options.formOptions,\n        btnEl = formEl.querySelector('[type=\"submit\"]'),\n        timeoutTimer,\n        xhrOptions = _mergeObjects( {}, formOptions.ajaxOptions ),\n        isMultipart = xhrOptions.contentType === 'multipart/form-data';\n\n    xhrOptions.data = formDataObj;\n    \n    if( isMultipart && fieldOptions.handleFileUpload ){\n        let formDataMultipart = new FormData();\n        \n        for(let key in xhrOptions.data){\n            formDataMultipart.append( key, xhrOptions.data[key] );\n        }\n        \n        Array.from( formEl.querySelectorAll('[type=\"file\"]') ).forEach(function( field ){\n            Array.from(field.files).forEach(function( file, idx ){\n                let name = field.name+'['+ idx +']';\n                formDataMultipart.append( name, file, file.name );\n            });\n        });\n        \n        xhrOptions.data = formDataMultipart;\n    }\n    \n    let XHR = new XMLHttpRequest(),\n        parseResponse = function( xhr ){\n            let data = xhr.responseText,\n                getJSON = function(){\n                    try{\n                        let obj = JSON.parse(data);\n                        return obj;\n                    } catch(e){\n                        return false;\n                    }\n                },\n                getXML_HTML = function(){\n                    try{\n                        let isXML = xhr.responseXML !== null,\n                            obj = (isXML ? new DOMParser().parseFromString(data, 'text/xml') : data);\n                        return obj;\n                    } catch(e){\n                        return false;\n                    }\n                };\n            \n            return (getJSON() || getXML_HTML() || data);\n        },\n        successFn = function(e) {\n            let xhr = e.target,\n                responseData = parseResponse(xhr);\n\n            let readyStateOK = xhr.readyState === 4,\n                statusOK = xhr.status === 200,\n                ajaxData = {\n                    dataOrXHR:      ( readyStateOK && statusOK ? responseData   : xhr           ),\n                    status:         ( readyStateOK && statusOK ? 'success'      : 'error'       ),\n                    XHRorResponse:  ( readyStateOK && statusOK ? xhr            : responseData  )\n                };\n            \n            if( timeoutTimer ){\n                window.clearTimeout( timeoutTimer );\n            }\n\n            btnEl.disabled = false;\n\n            _executeCallback.call( self, formOptions.onSubmitComplete, ajaxData );\n        },\n        completeFn = function(e) {\n            let xhr = e.target;\n\n            if( xhr.status === 200 ){\n                let responseData = parseResponse(xhr),\n                    ajaxData = { data: responseData, status: 'success', response: xhr };\n\n                _executeCallback.call( self, formOptions.onSubmitSuccess, ajaxData );\n            } else {\n                errorFn(e);\n            }\n        },\n        errorFn = function(e) {\n            let xhr = e.target,\n                ajaxData = { errorThrown: xhr.statusText, status: 'error', response: xhr };\n\n            _executeCallback.call( self, formOptions.onSubmitError, ajaxData );\n        };\n    \n    XHR.addEventListener('loadend', successFn,  false);\n    XHR.addEventListener('load',    completeFn, false);\n    XHR.addEventListener('error',   errorFn,    false);\n    \n    if( xhrOptions.method === 'GET' ){\n        xhrOptions.url += ( /\\?/.test(xhrOptions.url) ? '&' : '?' ) + _serialize( xhrOptions.data );\n        if( xhrOptions.cache === false ){\n            xhrOptions.url +=  (/\\&/.test(xhrOptions.url) ? '&' : '') + '_=' + (new Date().getTime());\n        }\n    }\n    \n    XHR.open(xhrOptions.method, xhrOptions.url, xhrOptions.async);\n\n    if ( xhrOptions.xhrFields ) {\n        for ( let i in xhrOptions.xhrFields ) {\n            XHR[ i ] = xhrOptions.xhrFields[ i ];\n        }\n    }\n\n    if ( xhrOptions.mimeType && XHR.overrideMimeType ) {\n        XHR.overrideMimeType( xhrOptions.mimeType );\n    }\n    \n    if( xhrOptions.data && xhrOptions.contentType !== 'multipart/form-data' ){\n        XHR.setRequestHeader('Content-Type', xhrOptions.contentType);\n    }\n    \n    for( let h in xhrOptions.headers ){\n        XHR.setRequestHeader( h, xhrOptions.headers[h] );\n    }\n\n    if( !isMultipart ){\n        xhrOptions.data = JSON.stringify(xhrOptions.data);\n    }\n    \n    XHR.send( (xhrOptions.method === 'GET' ? null : xhrOptions.data) );\n\n    if ( xhrOptions.async && xhrOptions.timeout > 0 ) {\n        timeoutTimer = window.setTimeout(function() {\n            XHR.abort();\n        }, xhrOptions.timeout);\n    }\n    \n}\n","\nimport { _executeCallback, _isDOMNode } from './helper.js';\n\nexport function validateField( fieldElem ){\n\n    const self = this,\n          fieldEl = (typeof fieldElem === 'string' ? self.formEl.querySelector(fieldElem) : fieldElem);\n            \n    let obj = { result: false };\n\n    if( _isDOMNode(fieldEl) ){\n        obj = self.isValidField( fieldEl );\n        _executeCallback.call( self, self.options.fieldOptions.onValidation, [obj] );\n    }\n\n    return obj;\n    \n}\n","\nimport { _executeCallback } from './helper.js';\n\nexport function validateForm(){\n\n    const self = this,\n          obj = self.isValidForm();\n\n    _executeCallback.call( self, self.options.fieldOptions.onValidation, obj.fields );\n\n    return obj;\n    \n}\n"],"sourceRoot":""}